{"version":3,"sources":["assets/mainPack/script/desStar/DesStarMain/DesStarMainModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameConsts } from '../../../../Script/game/GameConsts';\nimport { UIPa } from '../../../../Script/game/UIParam';\nimport BlockItem from '../BlockItem/BlockItem';\nimport { StarCfg } from '../StarCfg';\nimport { UIModelBase } from './../../../../c2f-framework/gui/layer/UIModelBase';\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class DesStarMainModel extends UIModelBase {\n\n    /** 预制名 给实例调用 */\n    public prefabName = 'F_DesStarMain';\n    public blockTotalNum: number;\n    public curLv: number\n    public starDataArr: number[][]\n    public isActionRunning: boolean\n    public visibleSize: cc.Size\n    public blockItem: cc.Prefab;\n    public startItem: cc.Prefab;\n\n\n    /** 行  列 */\n    public starItemMap: Map<number, Map<number, BlockItem>>\n    public totalShowScore: number\n    public curScore: number\n\n    public initData() {\n        this.blockTotalNum = 8\n        this.curLv = c2f.storage.getNumber(GameConsts.StorageKey.curLv)\n        this.visibleSize = cc.view.getVisibleSize()\n        this.getDataByLv(this.curLv)\n        // this.getCfgStr()\n\n    }\n    public getDataByLv(lv: number) {\n        this.starDataArr = this.getStarDataArr(lv)\n        this.curScore = 0\n        this.totalShowScore = 0\n        let scorTotal = 0\n        this.starDataArr.forEach(vv => {\n            vv.forEach(v => {\n                let item = UIPa.StarItemData[v]\n                scorTotal += item.score\n            });\n        });\n        this.totalShowScore = Math.ceil(scorTotal * 0.8)\n    }\n\n    private getStarDataArr(lv: number) {\n        let arr: number[][] = [\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        ];\n        if (StarCfg[lv]) {\n            for (let col = 0; col < 10; col++) {\n                for (let row = 0; row < 10; row++) {\n                    arr[col][row] = StarCfg[lv][col][row]\n                }\n            }\n            return arr\n        } else {\n            return this.getStarLvData(arr)\n        }\n    }\n\n\n    private getStarLvData(arr: number[][]) {\n        let numArr = this.getRandomInt(0, this.blockTotalNum, 2)\n        for (let col = 0; col < 10; col++) {\n            for (let row = 0; row < 10; row++) {\n                let num = c2f.random.getRandomInt(0, 10, 1)\n                if (num > 5) {\n                    arr[col][row] = numArr[0]\n                } else {\n                    arr[col][row] = numArr[1]\n                }\n\n            }\n        }\n        return arr\n    }\n\n    private getRandomInt(min: number, max: number, count: number): number[] {\n        const result: number[] = [];\n        const range = max - min + 1;\n        let usedNumbers: Map<number, number> = new Map()\n        while (result.length < count) {\n            let randomNum = Math.floor(Math.random() * range) + min;\n            if (!usedNumbers.has(randomNum)) {\n                usedNumbers.set(randomNum, randomNum)\n                result.push(randomNum);\n            }\n        }\n        return result;\n    }\n\n\n\n    public getStarPosition(column: number, row: number): cc.Vec3 {\n        const w = UIPa.DesStarGameArgs.width;\n        const h = UIPa.DesStarGameArgs.heigh;\n        let x = (row + 1 / 2) * w\n        let y = (column + 1 / 2) * h\n        return new cc.Vec3(x, y);\n    }\n\n    public findSameStarIndex(row: number, col: number, checkedRowAndCol?: UIPa.DesStarBase[], result?: UIPa.DesStarBase[]): UIPa.DesStarBase[] {\n        if (row < 0 || col < 0 || row > 9 || col > 9) return [];\n        const targetValue = this.starDataArr[row][col];\n        if (targetValue == -1) return [];\n        if (!checkedRowAndCol) checkedRowAndCol = [{ row, column: col }];\n        else {\n            for (let i = 0; i < checkedRowAndCol.length; i++) {\n                if (checkedRowAndCol[i].row == row && checkedRowAndCol[i].column == col) {\n                    return [];\n                }\n            }\n            checkedRowAndCol.push({ row, column: col });\n        }\n        if (!result) result = [];\n\n        // 先找上边\n        if (row < 9) {\n            if (this.starDataArr[row + 1][col] == targetValue) {\n                this.putIndexTo(result, row + 1, col);\n                this.findSameStarIndex(row + 1, col, checkedRowAndCol, result);\n            }\n        }\n        /**找下边 */\n        if (row > 0) {\n            if (this.starDataArr[row - 1][col] == targetValue) {\n                this.putIndexTo(result, row - 1, col);\n                this.findSameStarIndex(row - 1, col, checkedRowAndCol, result)\n            }\n        }\n        // 再找右边\n        if (col < 9) {\n            if (this.starDataArr[row][col + 1] == targetValue) {\n                this.putIndexTo(result, row, col + 1);\n                this.findSameStarIndex(row, col + 1, checkedRowAndCol, result);\n            }\n        }\n\n        // 再找左边\n        if (col > 0) {\n            if (this.starDataArr[row][col - 1] == targetValue) {\n                this.putIndexTo(result, row, col - 1);\n                this.findSameStarIndex(row, col - 1, checkedRowAndCol, result);\n            }\n        }\n        return result;\n    }\n    /** 满足条件并且没有添加过就加入 */\n    private putIndexTo(baseArr: UIPa.DesStarBase[], row: number, col: number): void {\n        for (let i = 0; i < baseArr.length; i++) {\n            if (baseArr[i].row == row && baseArr[i].column == col) return;\n        }\n        baseArr.push({ row, column: col });\n    }\n\n\n}"]}