{"version":3,"sources":["assets/c2f-framework/component/ui/scrollList/VirtualLayout.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { C2FEnum } from \"../../../define/C2FEnum\";\nimport { LayoutProperty } from \"./LayoutProperty\";\nimport { GroupSource } from \"./VLItemGroup\";\nimport { TemplateType } from \"./VLTemplate\";\nimport VirtualItem from \"./VirtualItem\";\nimport VirtualList from \"./VirtualList\";\n\n\ninterface AddItemPa {\n    idx: number;\n    xMin: number;\n    yMin: number;\n    size: cc.Size;\n}\n\n/**\n * 虚拟列表所需的布局组件\n */\nconst { ccclass, property, disallowMultiple } = cc._decorator;\n@ccclass\n@disallowMultiple\nexport default class VirtualLayout extends cc.Component {\n\n    @property({ type: LayoutProperty })\n    layout: LayoutProperty = null;\n\n    /** 所属虚拟列表 */\n    private _list: VirtualList = null;\n    /** mask节点（content父节点） */\n    private _view: cc.Node = null;\n    /** view坐标系下view的边界矩形 */\n    private _viewEdge: cc.Rect = null;\n    /** 元素节点大小固定时的size */\n    private _fixedSize: cc.Size = null;\n    /** 标记当前帧是否需要更新content size */\n    private _sizeDirty: boolean = false;\n    /** 标记当前帧是否需要更新view区域数据显示 */\n    private _viewDirty: boolean = false;\n    /** 标记当前帧是否需要同步others content的坐标 */\n    private _posDirty: boolean = false;\n    /** main content激活状态的item */\n    private _items: cc.Node[] = [];\n    /** main content被回收的item池（不移出节点树，只设置opacity） */\n    private _itemPool: cc.Node[] = [];\n    /** others content激活状态的item，下标顺序与this.list.Others数组一致 */\n    private _otherItemsArr: cc.Node[][] = [];\n    /** others content被回收的item池数组（不移出节点树，只设置opacity），下标顺序与this.list.Others数组一致 */\n    private _otherItemPoolArr: cc.Node[][] = [];\n\n    public onInit(list: VirtualList): void {\n        this._list = list;\n        this._view = this.node.parent;\n        this._viewEdge = this.getNodeEdgeRect(this._view);\n\n        // 初始化分层相关数据\n        this._otherItemsArr = [];\n        this._otherItemPoolArr = [];\n        this._list.others.forEach((e) => {\n            this._otherItemsArr.push([]);\n            this._otherItemPoolArr.push([]);\n        });\n\n        // 元素大小固定时初始化fixedSize\n        if (this._fixedSize === null) {\n            this.addItemNode(false);\n            this._fixedSize = this._itemPool[0].getContentSize();\n        }\n\n        // 注册事件\n        this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onPositionChanged, this);\n        this._view.on(cc.Node.EventType.SIZE_CHANGED, this.onViewSizeChanged, this);\n    }\n\n    /** 同步layout参数:注意同步时机 */\n    public syncLayoutProperty(inProperty: LayoutProperty) {\n        this.layout = inProperty;\n    }\n\n    protected onDestroy(): void {\n        // 注销事件\n        this.node.off(cc.Node.EventType.POSITION_CHANGED, this.onPositionChanged, this);\n        this._view?.off(cc.Node.EventType.SIZE_CHANGED, this.onViewSizeChanged, this);\n        //解除引用\n        this._list = null;\n        this._view = null;\n        this._items = [];\n        this._itemPool = [];\n        this._otherItemsArr = [];\n        this._otherItemPoolArr = [];\n    }\n\n    /**\n     * 立即更新布局\n     */\n    public forceUpdate(): void {\n        this.updatePos();\n        this.updateSize();\n        this.updateView();\n        this.updateSibling();\n    }\n\n    protected lateUpdate(): void {\n        this.forceUpdate();\n    }\n\n    /**\n     * 同步others的坐标\n     */\n    private updatePos(): void {\n        if (!this._posDirty) {\n            return;\n        }\n        this._posDirty = false;\n        this._list.others.forEach((e) => {\n            e.content.position = this.node.position;\n        });\n    }\n\n    /**\n     * 更新content size\n     */\n    private updateSize(): void {\n        if (!this._sizeDirty) {\n            return;\n        }\n        this._sizeDirty = false;\n\n        if (this._list.isFixedSize) {\n            this.updateSizeFixed();\n        } else {\n            this.updateSizeUnfixed();\n        }\n    }\n\n    private updateSizeFixed(): void {\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            if (this._list.argsArr.length <= 0) {\n                this.node.height = 0;\n                return;\n            }\n\n            this.node.height = this.layout.top + this.layout.bottom + (this._list.argsArr.length - 1) * this.layout.spacingY + this._fixedSize.height * this._list.argsArr.length;\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            if (this._list.argsArr.length <= 0) {\n                this.node.width = 0;\n                return;\n            }\n\n            this.node.width = this.layout.left + this.layout.right + (this._list.argsArr.length - 1) * this.layout.spacingX + this._fixedSize.width * this._list.argsArr.length;\n        } else {\n            if (this.layout.startAxis === cc.Layout.AxisDirection.HORIZONTAL) {\n                if (this._list.argsArr.length <= 0) {\n                    this.node.height = 0;\n                    return;\n                }\n\n                // 计算一行可以排列几个，至少1个\n                let num = Math.floor((this.node.width - this.layout.left - this.layout.right + this.layout.spacingX) / (this._fixedSize.width + this.layout.spacingX));\n                num = Math.max(num, 1);\n                // 计算可以排列几行\n                let row = Math.ceil(this._list.argsArr.length / num);\n                // 高度\n                this.node.height = this.layout.top + this.layout.bottom + (row - 1) * this.layout.spacingY + this._fixedSize.height * row;\n            } else {\n                if (this._list.argsArr.length <= 0) {\n                    this.node.width = 0;\n                    return;\n                }\n\n                // 计算一列可以排列几个，至少1个\n                let num = Math.floor((this.node.height - this.layout.top - this.layout.bottom + this.layout.spacingY) / (this._fixedSize.height + this.layout.spacingY));\n                num = Math.max(num, 1);\n                // 计算可以排列几列\n                let column = Math.ceil(this._list.argsArr.length / num);\n                // 宽度\n                this.node.width = this.layout.left + this.layout.right + (column - 1) * this.layout.spacingX + this._fixedSize.width * column;\n            }\n        }\n    }\n\n    private updateSizeUnfixed(): void {\n        // 缓存宽高，最后赋值，是因为修改content size时会触发scrollview._calculateBoundary，改变content的坐标\n        let result = 0;\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            if (this._list.argsArr.length <= 0) {\n                this.node.height = 0;\n                return;\n            }\n\n            result = this.layout.top + this.layout.bottom + (this._list.argsArr.length - 1) * this.layout.spacingY;\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                let size = this.calcItemSizeUnfixed(i);\n                result += size.height;\n            }\n            this.node.height = result;\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            if (this._list.argsArr.length <= 0) {\n                this.node.width = 0;\n                return;\n            }\n\n            result = this.layout.left + this.layout.right + (this._list.argsArr.length - 1) * this.layout.spacingX;\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                let size = this.calcItemSizeUnfixed(i);\n                result += size.width;\n            }\n            this.node.width = result;\n        }\n    }\n\n    /**\n     * 更新view区域数据显示\n     */\n    private updateView(): void {\n        if (!this._viewDirty || this._list.argsArr.length <= 0) {\n            return;\n        }\n        this._viewDirty = false;\n\n        if (this._list.isFixedSize) {\n            this.updateViewFixed();\n        } else {\n            this.updateViewUnfixed();\n        }\n    }\n\n    /**\n     * 更新层级\n     */\n    private updateSibling(): void {\n        if (!this._list || !this._list.argsArr || this._list.argsArr.length <= 0) {\n            return;\n        }\n        if (this._list.isSubling) {\n            let min = 999\n            this._items.forEach((item) => {\n                let vi = item.getComponent(VirtualItem);\n                if (vi.args) {\n                    if (vi.args.subling < min) {\n                        min = vi.args.subling\n                    }\n                }\n            });\n            this._items.forEach((item) => {\n                let vi = item.getComponent(VirtualItem);\n                if (vi.args) {\n                    let subling = vi.args.subling - min\n                    if (item.getSiblingIndex() != subling) {\n                        item.setSiblingIndex(subling)\n                    }\n                }\n            });\n        }\n    }\n\n\n\n    private updateViewFixed(): void {\n        let arrAddData: AddItemPa[] = [];\n        let viewResult = this.checkViewItem();\n        let inView = viewResult.inView;\n        let outView = viewResult.outView;\n        let contentEdge = this.getNodeEdgeRect(this.node);\n        let xMax: number, xMin: number, yMax: number, yMin: number;\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                    yMax = contentEdge.yMax - (this.layout.top + i * this.layout.spacingY + this._fixedSize.height * i);\n                    yMin = yMax - this._fixedSize.height;\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\n                        break;\n                    }\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\n                        continue;\n                    }\n                } else {\n                    yMin = contentEdge.yMin + this.layout.bottom + i * this.layout.spacingY + this._fixedSize.height * i;\n                    yMax = yMin + this._fixedSize.height;\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\n                        break;\n                    }\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                arrAddData.push({\n                    idx: i,\n                    xMin: xMin,\n                    yMin: yMin,\n                    size: null,\n                })\n            }\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                    xMax = contentEdge.xMax - (this.layout.right + i * this.layout.spacingX + this._fixedSize.width * i);\n                    xMin = xMax - this._fixedSize.width;\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\n                        break;\n                    }\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\n                        continue;\n                    }\n                } else {\n                    xMin = contentEdge.xMin + this.layout.left + i * this.layout.spacingX + this._fixedSize.width * i;\n                    xMax = xMin + this._fixedSize.width;\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\n                        break;\n                    }\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                arrAddData.push({\n                    idx: i,\n                    xMin: xMin,\n                    yMin: yMin,\n                    size: null,\n                })\n            }\n        } else {\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                // 计算当前元素排在第几行第几列，从0开始\n                let rowIndex: number = 0;\n                let columnIndex: number = 0;\n                if (this.layout.startAxis === cc.Layout.AxisDirection.HORIZONTAL) {\n                    // 起始轴为横向\n                    let num = Math.floor((this.node.width - this.layout.left - this.layout.right + this.layout.spacingX) / (this._fixedSize.width + this.layout.spacingX));\n                    num = Math.max(num, 1);\n                    rowIndex = Math.floor(i / num);\n                    columnIndex = i % num;\n                    // 计算纵向\n                    if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                        yMax = contentEdge.yMax - (this.layout.top + rowIndex * this.layout.spacingY + this._fixedSize.height * rowIndex);\n                        yMin = yMax - this._fixedSize.height;\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\n                            break;\n                        }\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\n                            continue;\n                        }\n                    } else {\n                        yMin = contentEdge.yMin + this.layout.bottom + rowIndex * this.layout.spacingY + this._fixedSize.height * rowIndex;\n                        yMax = yMin + this._fixedSize.height;\n                        if (yMin + this.node.y > this._viewEdge.yMax) {\n                            break;\n                        }\n                        if (yMax + this.node.y < this._viewEdge.yMin) {\n                            continue;\n                        }\n                    }\n                    // 计算横向\n                    if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                        xMax = contentEdge.xMax - (this.layout.right + columnIndex * this.layout.spacingX + this._fixedSize.width * columnIndex);\n                        xMin = xMax - this._fixedSize.width;\n                    } else {\n                        xMin = contentEdge.xMin + this.layout.left + columnIndex * this.layout.spacingX + this._fixedSize.width * columnIndex;\n                        xMax = xMin + this._fixedSize.width;\n                    }\n                    if (xMax + this.node.x < this._viewEdge.xMin || xMin + this.node.x > this._viewEdge.xMax) {\n                        continue;\n                    }\n                } else {\n                    // 起始轴为纵向\n                    let num = Math.floor((this.node.height - this.layout.top - this.layout.bottom + this.layout.spacingY) / (this._fixedSize.height + this.layout.spacingY));\n                    num = Math.max(num, 1);\n                    rowIndex = i % num;\n                    columnIndex = Math.floor(i / num);\n                    // 计算横向\n                    if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                        xMax = contentEdge.xMax - (this.layout.right + columnIndex * this.layout.spacingX + this._fixedSize.width * columnIndex);\n                        xMin = xMax - this._fixedSize.width;\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\n                            break;\n                        }\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\n                            continue;\n                        }\n                    } else {\n                        xMin = contentEdge.xMin + this.layout.left + columnIndex * this.layout.spacingX + this._fixedSize.width * columnIndex;\n                        xMax = xMin + this._fixedSize.width;\n                        if (xMin + this.node.x > this._viewEdge.xMax) {\n                            break;\n                        }\n                        if (xMax + this.node.x < this._viewEdge.xMin) {\n                            continue;\n                        }\n                    }\n                    // 计算纵向\n                    if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                        yMax = contentEdge.yMax - (this.layout.top + rowIndex * this.layout.spacingY + this._fixedSize.height * rowIndex);\n                        yMin = yMax - this._fixedSize.height;\n                    } else {\n                        yMin = contentEdge.yMin + this.layout.bottom + rowIndex * this.layout.spacingY + this._fixedSize.height * rowIndex;\n                        yMax = yMin + this._fixedSize.height;\n                    }\n                    if (yMax + this.node.y < this._viewEdge.yMin || yMin + this.node.y > this._viewEdge.yMax) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                arrAddData.push({\n                    idx: i,\n                    xMin: xMin,\n                    yMin: yMin,\n                    size: null,\n                })\n            }\n        }\n        this.addItemsByData(arrAddData, outView);\n    }\n\n    private updateViewUnfixed(): void {\n        let arrAddData: AddItemPa[] = [];\n        let viewResult = this.checkViewItem();\n        let inView = viewResult.inView;\n        let outView = viewResult.outView;\n        let contentEdge = this.getNodeEdgeRect(this.node);\n        let xMax: number, xMin: number, yMax: number, yMin: number;\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            let totalHeight: number = 0;\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                let size = this.calcItemSizeUnfixed(i);\n                totalHeight += size.height;\n                if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                    yMax = contentEdge.yMax - (this.layout.top + i * this.layout.spacingY + (totalHeight - size.height));\n                    yMin = yMax - size.height;\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\n                        break;\n                    }\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\n                        continue;\n                    }\n                } else {\n                    yMin = contentEdge.yMin + this.layout.bottom + i * this.layout.spacingY + (totalHeight - size.height);\n                    yMax = yMin + size.height;\n                    if (yMin + this.node.y > this._viewEdge.yMax) {\n                        break;\n                    }\n                    if (yMax + this.node.y < this._viewEdge.yMin) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                arrAddData.push({\n                    idx: i,\n                    xMin: xMin,\n                    yMin: yMin,\n                    size: size.clone(),\n                })\n            }\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            let totalWidth: number = 0;\n            for (let i = 0; i < this._list.argsArr.length; i++) {\n                let size = this.calcItemSizeUnfixed(i);\n                totalWidth += size.width;\n                if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                    xMax = contentEdge.xMax - (this.layout.right + i * this.layout.spacingX + (totalWidth - size.width));\n                    xMin = xMax - size.width;\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\n                        break;\n                    }\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\n                        continue;\n                    }\n                } else {\n                    xMin = contentEdge.xMin + this.layout.left + i * this.layout.spacingX + (totalWidth - size.width);\n                    xMax = xMin + size.width;\n                    if (xMin + this.node.x > this._viewEdge.xMax) {\n                        break;\n                    }\n                    if (xMax + this.node.x < this._viewEdge.xMin) {\n                        continue;\n                    }\n                }\n\n                // 判断显示区域内部是否有节点显示此条数据\n                let found = inView.findIndex((e) => { return this._items[e].getComponent(VirtualItem).dataIdx === i; });\n                if (found !== -1) {\n                    continue;\n                }\n\n                // 没有节点显示此条数据，需使用显示区域外的节点显示此条数据\n                arrAddData.push({\n                    idx: i,\n                    xMin: xMin,\n                    yMin: yMin,\n                    size: size.clone(),\n                })\n            }\n        }\n        this.addItemsByData(arrAddData, outView);\n    }\n\n    private addOneItem(one: AddItemPa, outView: number[]) {\n        let itemIdx: number = outView.length === 0 ? this.addItemNode() : outView.shift();\n        let item: cc.Node = this._items[itemIdx];\n        if (one.size) {\n            item.setContentSize(one.size);\n        }\n        let itemPos: cc.Vec3 = cc.v3(0, 0, 0);\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            itemPos.y = one.yMin + item.anchorY * item.height;\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            itemPos.x = one.xMin + item.anchorX * item.width;\n        } else {\n            itemPos.x = one.xMin + item.anchorX * item.width;\n            itemPos.y = one.yMin + item.anchorY * item.height;\n        }\n        this.setItem(itemPos, one.idx, itemIdx);\n    }\n\n    private addItemsByData(arrData: AddItemPa[], outView: number[]) {\n        if (arrData.length <= 0) {\n            return;\n        }\n        if (this._list.frameLoadItv > 0 && this._items.length <= 0) {\n            let count = arrData.length;\n            let index = 0;\n            let cb = () => {\n                if (index >= count) {\n                    this.unschedule(cb);\n                    this._list.frameLoadCb && this._list.frameLoadCb();\n                    // 回收区域外的节点\n                    this.recycleItemOutView(outView);\n                    c2f.event.emit(C2FEnum.ExtEvent.VirtualListFillCmpl);\n                    return;\n                }\n                let one = arrData[index];\n                this.addOneItem(one, outView);\n                index += 1;\n            }\n            this.schedule(cb, this._list.frameLoadItv);\n        } else {\n            for (let one of arrData) {\n                this.addOneItem(one, outView);\n            }\n            this.recycleItemOutView(outView);\n            c2f.event.emit(C2FEnum.ExtEvent.VirtualListFillCmpl);\n        }\n    }\n\n    /** 回收区域外的节点 */\n    private recycleItemOutView(outView: number[]) {\n        for (let i = outView.length - 1; i >= 0; i--) {\n            this.putActivatedItemByIndex(outView[i]);\n        }\n    }\n\n    /**\n     * 区分在view内部与外部的items数组下标（返回的下标数组会从小到大排序）\n     */\n    private checkViewItem(): { inView: number[], outView: number[] } {\n        // 显示区域内部的下标\n        let inView: number[] = [];\n        // 显示区域外部的下标\n        let outView: number[] = [];\n\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            for (let i = 0; i < this._items.length; i++) {\n                let item = this._items[i];\n                let box = item.getBoundingBox();\n                if (box.yMin + this.node.y <= this._viewEdge.yMax && box.yMax + this.node.y >= this._viewEdge.yMin) {\n                    inView.push(i);\n                } else {\n                    outView.push(i);\n                }\n            }\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            for (let i = 0; i < this._items.length; i++) {\n                let item = this._items[i];\n                let box = item.getBoundingBox();\n                if (box.xMin + this.node.x <= this._viewEdge.xMax && box.xMax + this.node.x >= this._viewEdge.xMin) {\n                    inView.push(i);\n                } else {\n                    outView.push(i);\n                }\n            }\n        } else {\n            for (let i = 0; i < this._items.length; i++) {\n                let item = this._items[i];\n                let box = item.getBoundingBox();\n                if (box.xMin + this.node.x <= this._viewEdge.xMax && box.xMax + this.node.x >= this._viewEdge.xMin\n                    && box.yMin + this.node.y <= this._viewEdge.yMax && box.yMax + this.node.y >= this._viewEdge.yMin) {\n                    inView.push(i);\n                } else {\n                    outView.push(i);\n                }\n            }\n        }\n\n        return { inView: inView, outView: outView };\n    }\n\n    /**\n     * 设置item数据与坐标\n     * @param p 节点坐标\n     * @param dataIdx this._dataArr的下标 \n     * @param itemIdx this._items的下标\n     */\n    private setItem(p: cc.Vec3, dataIdx: number, itemIdx: number): void {\n        let item = this._items[itemIdx];\n        item.position = p;\n        let vi = item.getComponent(VirtualItem);\n        vi.dataIdx = dataIdx;\n        vi.args = this._list.argsArr[dataIdx];\n        vi.onRefresh(vi.args);\n\n        if (this._list.others.length > 0) {\n            let nodes: cc.Node[] = [];\n            this._otherItemsArr.forEach((e) => {\n                e[itemIdx].position = p;\n                nodes.push(e[itemIdx]);\n            });\n            vi.others = nodes;\n            vi.onRefreshOthers(...vi.others);\n        }\n    }\n\n    /**\n     * 激活新的节点，并添加到content下\n     * @param show 默认为true。false时不激活节点并添加进节点池中（仅在onInit中使用）\n     * @returns 激活的节点在this._items中的下标\n     */\n    private addItemNode(show: boolean = true): number {\n        let node: cc.Node = null;\n        if (this._itemPool.length > 0) {\n            node = this._itemPool.pop();\n            node.opacity = 255;\n            this._items.push(node);\n\n            this._otherItemPoolArr.forEach((e, i) => {\n                let otherNode = e.pop();\n                otherNode.opacity = 255;\n                this._otherItemsArr[i].push(otherNode);\n            });\n        } else {\n            if (this._list.main.templateType === TemplateType.PREFAB) {\n                node = c2f.utils.view.instantiateMVCPrefab(this._list.main.templatePrefab, this.node);\n            } else {\n                node = c2f.res.instantiate(this._list.main.templateNode, this.node);\n            }\n            if (!node.getComponent(VirtualItem)) {\n                node.addComponent(VirtualItem);\n            }\n            this.node.addChild(node);\n            if (show) {\n                node.opacity = 255;\n                this._items.push(node);\n            } else {\n                this.putItemNode(node);\n            }\n\n            // 拷贝一份子节点数组，防止子节点移除时改变下标\n            let childrenCopy = node.children.slice(0);\n            this._list.others.forEach((e, i) => {\n                let otherNode: cc.Node = null;\n                switch (e.templateType) {\n                    case GroupSource.NODE:\n                        otherNode = c2f.res.instantiate(e.templateNode, this.node);\n                        break;\n                    case GroupSource.PREFAB:\n                        otherNode = c2f.utils.view.instantiateMVCPrefab(e.templatePrefab, this.node);\n                        break;\n                    case GroupSource.MAIN_ITEM_CHILD:\n                        if (!c2f.utils.math.inRange(0, childrenCopy.length - 1, e.templateChild)) {\n                            cc.error(`[VirtualLayout.addItemNode] error e.templateChild: ${e.templateChild}`);\n                            return;\n                        }\n                        otherNode = childrenCopy[e.templateChild];\n                        otherNode.removeFromParent();\n                        break;\n                    default:\n                        cc.error(`[VirtualLayout.addItemNode] error e.templateType: ${e.templateType}`);\n                        return;\n                }\n                e.content.addChild(otherNode);\n                if (show) {\n                    otherNode.opacity = 255;\n                    this._otherItemsArr[i].push(otherNode);\n                } else {\n                    this.putItemNode(otherNode, true, i);\n                }\n            });\n        }\n\n        return this._items.length - 1;\n    }\n\n    /**\n     * 将节点放入节点池\n     * @param node \n     * @param isOther 是否为Others下的节点\n     * @param otherIdx Others的下标\n     */\n    private putItemNode(node: cc.Node, isOther: boolean = false, otherIdx: number = 0): void {\n        node.opacity = 0;\n        // 防止已回收的节点触发点击事件\n        node.setPosition(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\n        if (isOther) {\n            this._otherItemPoolArr[otherIdx].push(node);\n        } else {\n            let vi = node.getComponent(VirtualItem);\n            vi.onReset();\n            this._itemPool.push(node);\n        }\n    }\n\n    /**\n     * 回收已激活的节点\n     * @param index 节点在this._items中的下标\n     */\n    private putActivatedItemByIndex(index: number): void {\n        this.putItemNode(this._items[index]);\n        this._otherItemsArr.forEach((arr, otherIdx) => { this.putItemNode(arr[index], true, otherIdx); });\n\n        this._items.splice(index, 1);\n        this._otherItemsArr.forEach((arr) => {\n            arr.splice(index, 1);\n        });\n    }\n\n    /**\n     * 子节点坐标系下坐标转换为父节点坐标系下坐标\n     */\n    private convertToParentPos(pos: cc.Vec3, child: cc.Node): cc.Vec3 {\n        return pos.add(child.position);\n    }\n\n    /**\n     * 父节点坐标系下坐标转换为子节点坐标系下坐标\n     */\n    private convertToChildPos(pos: cc.Vec3, child: cc.Node): cc.Vec3 {\n        return pos.sub(child.position);\n    }\n\n    /**\n     * 获取节点自身坐标系下的节点边界矩形\n     */\n    private getNodeEdgeRect(node: cc.Node): cc.Rect {\n        return cc.rect(-node.width * node.anchorX, -node.height * node.anchorY, node.width, node.height);\n    }\n\n    /**\n     * 根据元素下标计算对应元素大小，isFixedSize为false时使用\n     * @param idx \n     */\n    private calcItemSizeUnfixed(idx: number): cc.Size {\n        const arg = this._list.argsArr[idx];\n        if (arg.hasOwnProperty('cellHeight')) {\n            return cc.size(0, arg.cellHeight);\n        } else {\n            if (this._list.calcItemSize) {\n                return this._list.calcItemSize(this._list.argsArr[idx]);\n            } else {\n                return this._fixedSize;\n            }\n        }\n    }\n\n    /**\n     * content位移监听回调\n     */\n    private onPositionChanged(): void {\n        // ScrollView源码的bug处理\n        // 1.超出边界的差值会记录在_outOfBoundaryAmount里，但是这个_outOfBoundaryAmount不是每次检测边界时都更新的，它需要_outOfBoundaryAmountDirty为true才会更新\n        // 2.在content size改变的时候，ScrollView会检测content有没有超出边界，此时会更新_outOfBoundaryAmount并直接修改content坐标。但是修改完content坐标之后_outOfBoundaryAmount记录的仍旧是旧值，此时_outOfBoundaryAmountDirty为false。\n        // 3.ScrollView在touchend的时候会触发检测当前有没有超出边界，有的话自动回弹滚动。由于_outOfBoundaryAmountDirty为false，所以并未更新_outOfBoundaryAmount，而是直接取错误的_outOfBoundaryAmount作为超出边界的值，然后进行错误的自动回弹。\n        this._list.scrollView[\"_outOfBoundaryAmountDirty\"] = true;\n        // 更新标记\n        this._viewDirty = true;\n        this._posDirty = true;\n    }\n\n    /**\n     * view size监听回调\n     */\n    private onViewSizeChanged(): void {\n        this._viewEdge = this.getNodeEdgeRect(this._view);\n    }\n\n    /**\n     * 获取content相对view左上角原点位置的偏移值\n     * @param idx 元素下标\n     * @param itemAnchor 元素的锚点位置（左下角为0点）\n     * @param viewAnchor view的锚点位置（左下角为0点）\n     */\n    public getScrollOffset(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\n        idx = Math.min(idx, this._list.argsArr.length - 1);\n        return this._list.isFixedSize ? this.getScrollOffsetFixed(idx, itemAnchor, viewAnchor) : this.getScrollOffsetUnfixed(idx, itemAnchor, viewAnchor);\n    }\n\n    private getScrollOffsetFixed(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\n        let contentEdge = this.getNodeEdgeRect(this.node);\n        let xMax: number, xMin: number, yMax: number, yMin: number;\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                yMax = contentEdge.yMax - (this.layout.top + idx * this.layout.spacingY + this._fixedSize.height * idx);\n                yMin = yMax - this._fixedSize.height;\n            } else {\n                yMin = contentEdge.yMin + this.layout.bottom + idx * this.layout.spacingY + this._fixedSize.height * idx;\n                yMax = yMin + this._fixedSize.height;\n            }\n            let x = this._viewEdge.xMin - (contentEdge.xMin + this.node.x);\n            let y = contentEdge.yMax - (this._fixedSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\n            return cc.v2(x, y);\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                xMax = contentEdge.xMax - (this.layout.right + idx * this.layout.spacingX + this._fixedSize.width * idx);\n                xMin = xMax - this._fixedSize.width;\n            } else {\n                xMin = contentEdge.xMin + this.layout.left + idx * this.layout.spacingX + this._fixedSize.width * idx;\n                xMax = xMin + this._fixedSize.width;\n            }\n            let x = this._fixedSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\n            let y = contentEdge.yMax - (this._viewEdge.yMax - this.node.y);\n            return cc.v2(x, y);\n        } else {\n            // 计算当前元素排在第几行第几列，从0开始\n            let rowIndex: number = 0;\n            let columnIndex: number = 0;\n            if (this.layout.startAxis === cc.Layout.AxisDirection.HORIZONTAL) {\n                let num = Math.floor((this.node.width - this.layout.left - this.layout.right + this.layout.spacingX) / (this._fixedSize.width + this.layout.spacingX));\n                num = Math.max(num, 1);\n                rowIndex = Math.floor(idx / num);\n                columnIndex = idx % num;\n            } else {\n                let num = Math.floor((this.node.height - this.layout.top - this.layout.bottom + this.layout.spacingY) / (this._fixedSize.height + this.layout.spacingY));\n                num = Math.max(num, 1);\n                rowIndex = idx % num;\n                columnIndex = Math.floor(idx / num);\n            }\n\n            if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                yMax = contentEdge.yMax - (this.layout.top + rowIndex * this.layout.spacingY + this._fixedSize.height * rowIndex);\n                yMin = yMax - this._fixedSize.height;\n            } else {\n                yMin = contentEdge.yMin + this.layout.bottom + rowIndex * this.layout.spacingY + this._fixedSize.height * rowIndex;\n                yMax = yMin + this._fixedSize.height;\n            }\n\n            if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                xMax = contentEdge.xMax - (this.layout.right + columnIndex * this.layout.spacingX + this._fixedSize.width * columnIndex);\n                xMin = xMax - this._fixedSize.width;\n            } else {\n                xMin = contentEdge.xMin + this.layout.left + columnIndex * this.layout.spacingX + this._fixedSize.width * columnIndex;\n                xMax = xMin + this._fixedSize.width;\n            }\n            let x = this._fixedSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\n            let y = contentEdge.yMax - (this._fixedSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\n            return cc.v2(x, y);\n        }\n    }\n\n    private getScrollOffsetUnfixed(idx: number, itemAnchor: cc.Vec2, viewAnchor: cc.Vec2): cc.Vec2 {\n        let contentEdge = this.getNodeEdgeRect(this.node);\n        let xMax: number, xMin: number, yMax: number, yMin: number;\n        let curSize: cc.Size = this.calcItemSizeUnfixed(idx);\n        if (this.layout.type === cc.Layout.Type.VERTICAL) {\n            let totalHeight: number = 0;\n            for (let i = 0; i < idx; i++) {\n                let size = this.calcItemSizeUnfixed(i);\n                totalHeight += size.height;\n            }\n            if (this.layout.verticalDirection === cc.Layout.VerticalDirection.TOP_TO_BOTTOM) {\n                yMax = contentEdge.yMax - (this.layout.top + idx * this.layout.spacingY + totalHeight);\n                yMin = yMax - curSize.height;\n            } else {\n                yMin = contentEdge.yMin + this.layout.bottom + idx * this.layout.spacingY + totalHeight;\n                yMax = yMin + curSize.height;\n            }\n            let x = this._viewEdge.xMin - (contentEdge.xMin + this.node.x);\n            let y = contentEdge.yMax - (curSize.height * itemAnchor.y + yMin) - (1 - viewAnchor.y) * this._viewEdge.height;\n            return cc.v2(x, y);\n        } else if (this.layout.type === cc.Layout.Type.HORIZONTAL) {\n            let totalWidth: number = 0;\n            for (let i = 0; i < idx; i++) {\n                let size = this.calcItemSizeUnfixed(i);\n                totalWidth += size.width;\n            }\n            if (this.layout.horizontalDirection === cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\n                xMax = contentEdge.xMax - (this.layout.right + idx * this.layout.spacingX + totalWidth);\n                xMin = xMax - curSize.width;\n            } else {\n                xMin = contentEdge.xMin + this.layout.left + idx * this.layout.spacingX + totalWidth;\n                xMax = xMin + curSize.width;\n            }\n            let x = curSize.width * itemAnchor.x + xMin - contentEdge.xMin - viewAnchor.x * this._viewEdge.width;\n            let y = contentEdge.yMax - (this._viewEdge.yMax - this.node.y);\n            return cc.v2(x, y);\n        }\n        return null;\n    }\n\n    /**\n     * 重新排列\n     * @param clear 是否清空节点，默认true(仅当不会影响已有元素节点排列时才可传入false)\n     */\n    public rearrange(clear: boolean = true): void {\n        this._sizeDirty = true;\n        this._viewDirty = true;\n        if (clear) {\n            this._items.forEach((e, i) => {\n                this.putItemNode(e);\n                this._otherItemsArr.forEach((arr, otherIdx) => {\n                    this.putItemNode(arr[i], true, otherIdx);\n                });\n            });\n            this._items.length = 0;\n            this._otherItemsArr.forEach((arr) => { arr.length = 0; });\n        }\n        this.unscheduleAllCallbacks();\n    }\n\n    /**\n     * 刷新所有激活的item\n     */\n    public refreshAllItems(): void {\n        this._items.forEach((item) => {\n            let vi = item.getComponent(VirtualItem);\n            vi.onRefresh(vi.args);\n            if (this._list.others.length > 0) {\n                vi.onRefreshOthers(...vi.others);\n            }\n        });\n    }\n\n    /**\n     * 重置所有激活的item的数据\n     */\n    public resetAllItemData(): void {\n        this._items.forEach((item) => {\n            let vi = item.getComponent(VirtualItem);\n            const idx = vi.dataIdx;\n            vi.args = this._list.argsArr[idx];\n            vi.onRefresh(vi.args);\n            if (this._list.others.length > 0) {\n                vi.onRefreshOthers(...vi.others);\n            }\n        });\n        this._list.frameLoadCb && this._list.frameLoadCb();\n    }\n\n    /** 目标索引号是否在列表中 */\n    public findIdxIsInView(idx: number) {\n        let inView: boolean = false;\n        for (let one of this._items) {\n            let vi = one.getComponent(VirtualItem);\n            if (idx == vi.dataIdx) {\n                inView = true;\n                break;\n            }\n        }\n        return inView;\n    }\n\n    /** 目标索引号Item */\n    public findIdxItemPosition(idx: number) {\n        let item: cc.Node;\n        for (let one of this._items) {\n            let vi = one.getComponent(VirtualItem);\n            if (idx == vi.dataIdx) {\n                item = one\n                break;\n            }\n        }\n        return item;\n    }\n\n    /** 目标ID找第一个Item */\n    public findFirstItemById(id: number) {\n        let item: cc.Node;\n        for (let one of this._items) {\n            let vi = one.getComponent(VirtualItem);\n            if (vi && vi.args) {\n                if (id == vi.args.id) {\n                    item = one\n                    break;\n                }\n            }\n        }\n        return item;\n    }\n\n\n}\n"]}