{"version":3,"sources":["assets/c2f-framework/component/ui/animValue/AnimValueProgressHP.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAoD;AAE9C,IAAA,KAAmE,EAAE,CAAC,UAAU,EAA9E,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAA,EAAE,iBAAiB,uBAAkB,CAAC;AAEvF;;GAEG;AAKH;IAAiD,uCAAiB;IAAlE;QAAA,qEA4CC;QAvCU,eAAS,GAAc,IAAI,CAAC;;IAuCvC,CAAC;IArCW,0CAAY,GAApB,UAAqB,QAAgB;QACjC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YAC3B,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU;gBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,QAAQ,CAAC;gBACpE,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ;gBAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,QAAQ,CAAC;gBACrE,MAAM;YACV,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM;gBAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;YACxC;gBACI,MAAM;SACb;IACL,CAAC;IAED;;OAEG;IACO,yCAAW,GAArB;QACI,IAAI,IAAI,CAAC,KAAK,EAAE;SAEf;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7C;IACL,CAAC;IAED;;OAEG;IACO,0CAAY,GAAtB;QACI,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7C;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACpC;IACL,CAAC;IAtCD;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,MAAM;YACf,OAAO,EAAE,MAAM,IAAI,kDAAkD;SACxE,CAAC;0DACiC;IALlB,mBAAmB;QAJvC,OAAO;QACP,iBAAiB;QACjB,gBAAgB,CAAC,EAAE,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,4BAA4B,CAAC;OACd,mBAAmB,CA4CvC;IAAD,0BAAC;CA5CD,AA4CC,CA5CgD,2BAAiB,GA4CjE;kBA5CoB,mBAAmB","file":"","sourceRoot":"/","sourcesContent":["import AnimValueProgress from \"./AnimValueProgress\";\n\nconst { ccclass, property, menu, requireComponent, executeInEditMode } = cc._decorator;\n\n/**\n * 血条组件\n */\n@ccclass\n@executeInEditMode\n@requireComponent(cc.ProgressBar)\n@menu(\"c2f/UI/AnimValueProgressHP\")\nexport default class AnimValueProgressHP extends AnimValueProgress {\n    @property({\n        type: cc.Sprite,\n        tooltip: CC_DEV && \"血条阴影，如果barSprite渲染模式为filled模式，此sprite也要对应修改，保持一致\"\n    })\n    public barShadow: cc.Sprite = null;\n\n    private setBarShadow(progress: number): void {\n        switch (this.progressBar.mode) {\n            case cc.ProgressBar.Mode.HORIZONTAL:\n                this.barShadow.node.width = this.progressBar.totalLength * progress;\n                break;\n            case cc.ProgressBar.Mode.VERTICAL:\n                this.barShadow.node.height = this.progressBar.totalLength * progress;\n                break;\n            case cc.ProgressBar.Mode.FILLED:\n                this.barShadow.fillRange = progress;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * @override\n     */\n    protected onAnimStart(): void {\n        if (this.isAdd) {\n\n        } else {\n            this.progressBar.progress = this.endValue;\n        }\n    }\n\n    /**\n     * @override\n     */\n    protected onAnimUpdate(): void {\n        if (this.isAdd) {\n            this.setBarShadow(this.curValue);\n            this.progressBar.progress = this.curValue;\n        } else {\n            this.setBarShadow(this.curValue);\n        }\n    }\n}\n"]}