{"version":3,"sources":["assets/c2f-framework/gui/GUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, menu } = cc._decorator;\n\n/** 游戏界面屏幕自适应管理 */\n@ccclass\nexport class GUI extends cc.Component {\n    /** 是否为竖屏显示 */\n    portrait!: boolean;\n\n    /** 竖屏设计尺寸 */\n    private portraitDrz: cc.Size = null!;\n    /** 横屏设计尺寸 */\n    private landscapeDrz: cc.Size = null!;\n\n    onLoad() {\n        this.init();\n    }\n\n    /** 初始化引擎 */\n    protected init() {\n        if (cc.view.getDesignResolutionSize().width > cc.view.getDesignResolutionSize().height) {\n            this.landscapeDrz = cc.view.getDesignResolutionSize();\n            this.portraitDrz = new cc.Size(this.landscapeDrz.height, this.landscapeDrz.width);\n        }\n        else {\n            this.portraitDrz = cc.view.getDesignResolutionSize();\n            this.landscapeDrz = new cc.Size(this.portraitDrz.height, this.portraitDrz.width);\n        }\n\n        this.autoSize();\n    }\n\n    /** 游戏画布尺寸变化 */\n    public autoSize() {\n        let dr: cc.Size;\n        const resolutionSize = cc.view.getDesignResolutionSize();\n        if (resolutionSize.width > resolutionSize.height) {\n            dr = this.landscapeDrz;\n        } else {\n            dr = this.portraitDrz\n        }\n\n        let rw = cc.winSize.width;\n        let rh = cc.winSize.height;\n        let finalW = rw;\n        let finalH = rh;\n\n        if ((rw / rh) > (dr.width / dr.height)) {\n            // 如果更长，则用定高\n            finalH = dr.height;\n            finalW = finalH * rw / rh;\n            this.portrait = false;\n        } else {\n            // 如果更短，则用定宽\n            finalW = dr.width;\n            finalH = finalW * rh / rw;\n            this.portrait = true;\n        }\n\n        // 手工修改canvas和设计分辨率，这样反复调用也能生效。\n        cc.view.setDesignResolutionSize(finalW, finalH, cc.ResolutionPolicy.UNKNOWN);\n        this.node!.width = finalW;\n        this.node!.height = finalH;\n\n        c2f.log.logView(dr, \"设计尺寸\");\n        c2f.log.logView(cc.winSize, \"屏幕尺寸\");\n    }\n\n    public fixedWidth() {\n        let dr: cc.Size;\n        const resolutionSize = cc.view.getDesignResolutionSize();\n        if (resolutionSize.width > resolutionSize.height) {\n            dr = this.landscapeDrz;\n        } else {\n            dr = this.portraitDrz\n        }\n\n        let rw = cc.winSize.width;\n        let rh = cc.winSize.height;\n        let finalW = rw;\n        let finalH = rh;\n        finalW = dr.width;\n        finalH = finalW * rh / rw;\n        this.portrait = true;\n\n        // 手工修改canvas和设计分辨率，这样反复调用也能生效。\n        cc.view.setDesignResolutionSize(finalW, finalH, cc.ResolutionPolicy.UNKNOWN);\n        this.node!.width = finalW;\n        this.node!.height = finalH;\n    }\n}"]}