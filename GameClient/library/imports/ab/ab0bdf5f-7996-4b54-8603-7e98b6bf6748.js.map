{"version":3,"sources":["assets/c2f-framework/gui/layer/UITouchPanel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport UIPTouchBase, { MoveState } from './UIPTouchBase';\n\ntype DragObjFunc = (event: cc.Event.EventTouch, touchObj: UIPTouchBase) => void;\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport class UITouchPanel {\n\n    /** 创建拖动对象 */\n    private _createDragObj: DragObjFunc;\n    public get createDragObj(): DragObjFunc {\n        return this._createDragObj;\n    }\n    public set createDragObj(v: DragObjFunc) {\n        this._createDragObj = v;\n    }\n\n    /** 拖动结束 */\n\n    private _exchangeDragObj: DragObjFunc;\n    public get exchangeDragObj(): DragObjFunc {\n        return this._exchangeDragObj;\n    }\n    public set exchangeDragObj(v: DragObjFunc) {\n        this._exchangeDragObj = v;\n    }\n\n    /** 当前正在拖动的对象 */\n    private _moving: UIPTouchBase = null;\n    public get moving(): UIPTouchBase {\n        return this._moving;\n    }\n    public set moving(v: UIPTouchBase) {\n        this._moving = v;\n    }\n\n    /** 拖动的出发点对象 */\n    private _moveFrom: UIPTouchBase = null;\n    public get moveFrom(): UIPTouchBase {\n        return this._moveFrom;\n    }\n    public set moveFrom(v: UIPTouchBase) {\n        this._moveFrom = v;\n    }\n\n    /** 拖动的拖入点对象 */\n    private _moveTo: UIPTouchBase = null;\n    public get moveTo(): UIPTouchBase {\n        return this._moveTo;\n    }\n    public set moveTo(v: UIPTouchBase) {\n        this._moveTo = v;\n    }\n\n    /** 可拖动对象 */\n    private arrDragObj: UIPTouchBase[] = [];\n\n\n    public onDestroy() {\n        this.createDragObj = null;\n        this.exchangeDragObj = null;\n        this.moving = null;\n        this.moveFrom = null;\n        this.moveTo = null;\n        this.arrDragObj = [];\n    }\n\n    /** 设置可拖动列表 */\n    public setDragObjList(list: UIPTouchBase[]) {\n        this.arrDragObj = list;\n    }\n\n    public onVCTouchStart(event: cc.Event.EventTouch, touchObj: UIPTouchBase) {\n        if (this.moving && this.moving.isValid) {\n            this.moving.destroy();\n        }\n        touchObj.setDragState(MoveState.moveOut);\n        this.moveFrom = touchObj;\n\n        this.createDragObj && this.createDragObj(event, touchObj)\n    }\n\n    public onVCTouchMove(event: cc.Event.EventTouch, touchObj: UIPTouchBase) {\n        if (!this.moving) {\n            return;\n        }\n        let delta = event.touch.getDelta();\n        this.moving.node.x += delta.x;\n        this.moving.node.y += delta.y;\n\n        //判断是否拖入到某个位置\n        let moveInObj: UIPTouchBase = null;\n        let posW = event.getLocation();\n        for (let one of this.arrDragObj) {\n            let isRect = one.checkIsMoveIn(posW);\n            if (isRect) {\n                moveInObj = one;\n                break;\n            }\n        }\n        if (this.moveTo == moveInObj) {\n            return;\n        }\n        if (this.moveFrom == moveInObj) {\n            return;\n        }\n        if (this.moveTo) {\n            this.moveTo.setDragState(MoveState.normal);\n            this.moveTo = null;\n        }\n        if (moveInObj) {\n            moveInObj.setDragState(MoveState.moveIn);\n            this.moveTo = moveInObj;\n        }\n    }\n\n    public onVCTouchEnd(event: cc.Event.EventTouch, touchObj: UIPTouchBase) {\n        if (!this.moving || !this.moving.isValid) {\n            return;\n        }\n        this.exchangeDragObj && this.exchangeDragObj(event, touchObj);\n        this.moving.node.destroy();\n        this.moving = null;\n        if (this.moveFrom) {\n            this.moveFrom.setDragState(MoveState.normal);\n            this.moveFrom = null;\n        }\n        if (this.moveTo) {\n            this.moveTo.setDragState(MoveState.normal);\n            this.moveTo = null;\n        }\n    }\n}"]}