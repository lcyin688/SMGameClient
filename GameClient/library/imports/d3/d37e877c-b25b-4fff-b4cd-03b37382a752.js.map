{"version":3,"sources":["assets/c2f-framework/component/common/ToScaleScreen.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/** 等比缩放节点 */\n\n/** 适配类型 */\nenum FixedType {\n    full,\n    width,\n    height,\n    amdFull,\n}\n\nconst { ccclass, property, menu } = cc._decorator;\n@ccclass\n@menu('c2f/common/ToScaleScreen')\nexport default class ToScaleScreen extends cc.Component {\n\n    @property({ type: cc.Enum(FixedType) })\n    private _fixedType: FixedType = FixedType.full;\n    @property({ type: cc.Enum(FixedType), tooltip: CC_DEV && \"缩放方式\" })\n    public get fixedType(): FixedType {\n        return this._fixedType;\n    }\n    public set fixedType(v: FixedType) {\n        if (this._fixedType === v) {\n            return;\n        }\n        this._fixedType = v;\n        this.autoScale();\n    }\n\n    @property()\n    private _target: cc.Node = null;\n    @property({ type: cc.Node, tooltip: CC_DEV && \"目标节点,不设置目标节点时表示已屏幕为参考\" })\n    public get target(): cc.Node {\n        return this._target;\n    }\n    public set target(v: cc.Node) {\n        this._target = v;\n        this.autoScale();\n    }\n\n    @property()\n    _offset: number = 0;\n    @property({ tooltip: \"缩放偏移：在等比铺满屏幕的情况下缩放偏移值(百分比)\" })\n    set offset(value: number) {\n        this._offset = value;\n        this.autoScale();\n    }\n    get offset() {\n        return this._offset;\n    }\n\n    @property()\n    _fixedCenter: boolean = false;\n    @property({ tooltip: \"固定节点始终保持相对屏幕居中\" })\n    set fixedCenter(value: boolean) {\n        this._fixedCenter = value;\n        this.autoScale();\n    }\n    get fixedCenter() {\n        return this._fixedCenter;\n    }\n\n    private oriPos: cc.Vec2 = cc.Vec2.ZERO;\n\n    protected onLoad() {\n        if (this.target) {\n            this.target.on(cc.Node.EventType.SIZE_CHANGED, this.autoScale, this);\n        }\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.autoScale, this);\n\n        this.node.getPosition(this.oriPos);\n        this.autoScale();\n    }\n\n    protected onDestroy(): void {\n        this.oriPos = null;\n        if (this.target) {\n            this.target.off(cc.Node.EventType.SIZE_CHANGED, this.autoScale, this);\n        }\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.autoScale, this);\n    }\n\n    private autoScale() {\n        let szView = cc.view.getVisibleSize();\n        if (this.target) {\n            szView = this.target.getContentSize();\n        } else {\n            if (CC_EDITOR) {\n                //此尺寸为设计分辨率\n                szView = cc.size(1080, 1920);\n            }\n        }\n        let scaleX = szView.width / this.node.width;\n        let scaleY = szView.height / this.node.height;\n\n        let retScale = 1;\n        switch (this.fixedType) {\n            case FixedType.full:\n                retScale = Math.max(scaleX, scaleY) + this.offset;\n                break;\n            case FixedType.width:\n                retScale = scaleX;\n                break;\n            case FixedType.height:\n                retScale = scaleY;\n                break;\n            case FixedType.amdFull:\n                //修正宽度·特别宽的屏会把宽拉很宽，画面严重失真\n                let maxWHB = szView.height * 1080 / 1920;\n                let amdScX = maxWHB / this.node.width;\n                retScale = Math.max(amdScX, scaleY) + this.offset;\n                break;\n\n        }\n        this.node.setScale(retScale);\n        this.resetPosition(retScale);\n    }\n\n    private resetPosition(retScale: number) {\n        //位置居中\n        if (this.fixedCenter) {\n            let posX = retScale * (this.node.anchorX - 0.5) * this.node.width;\n            let posY = retScale * (this.node.anchorY - 0.5) * this.node.height;\n            this.node.setPosition(posX, posY);\n        } else {\n            this.node.setPosition(this.oriPos);\n        }\n    }\n}"]}