{"version":3,"sources":["assets/gameYngy/script/YngyMain/YngyMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { UIVControlBase } from './../../../c2f-framework/gui/layer/UIVControlBase';\nimport { C2FEnum } from './../../../c2f-framework/define/C2FEnum';\nimport YngyMainModel from './YngyMainModel';\nimport YngyMainView from './YngyMainView';\nimport { YngyCfg } from '../YngyCfg';\nimport { UIPa } from '../../../Script/game/UIParam';\nimport { GameConsts } from '../../../Script/game/GameConsts';\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class YngyMain extends UIVControlBase {\n    /** 预制名 给实例调用 */\n    public prefabName = 'F_YngyMain';\n\n    public model: YngyMainModel = undefined;\n    public view: YngyMainView = undefined;\n\n    protected onViewOpen(param: any) {\n    }\n\n\n    protected onEnable(): void {\n        if (super.onEnable) {\n            super.onEnable();\n        }\n        this.on(C2FEnum.UIEvent.ButtonClick, this.onButtonClick, this);\n    }\n\n    protected onDisable(): void {\n        if (super.onDisable) {\n            super.onDisable();\n        }\n        this.off(C2FEnum.UIEvent.ButtonClick);\n    }\n\n    private async onButtonClick(eventType: string, component: cc.Button) {\n        switch (component.name) {\n\n            case this.view.btnMenuButton.name:\n                this.CC_onClickbtnMenu();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    private CC_onClickbtnMenu() {\n        this.closeView();\n    }\n    start() {\n        this.loadLevel(1);\n    }\n    /**\n * 加载关卡\n * @param lv \n */\n    loadLevel(lv: number) {\n        this.model.initDataByLv(lv, this.clickCard.bind(this))\n\n    }\n\n    private clickCard(data: UIPa.YngyItemArgs, nodeItem: cc.Node) {\n        if (data.hideState) {\n            return;\n        }\n        if (data.state == UIPa.YngyItemArgsStates.Alive) {\n            data.state = UIPa.YngyItemArgsStates.Dead;\n            // 倒序插入到选择数组\n            let index = 0;\n            for (let i = 0; i < this.model.selectedPool.length; i++) {\n                if (this.model.selectedPool[i].typ == data.typ) {\n                    index = i;\n                    break;\n                }\n                index = i + 1;\n            }\n            this.model.selectedPool.splice(index, 0, data);\n            // 移入动效\n            let pad = GameConsts.YngyConst.ItemWidthHeight\n            let targetPos = new cc.Vec3(\n                index * pad + pad / 2,\n                0\n            );\n            // nodeItem.parent = this.view.selectedNode;\n            // cc.tween(nodeItem).stop();\n            // cc.tween(nodeItem).delay(0.05).to(0.35, {\n            //     position: parentTransform.convertToNodeSpaceAR(this.selectedNode.getComponent(UITransform).convertToWorldSpaceAR(targetPos))\n            // }, {\n            //     onComplete: () => {\n            //         // 地图数据删除\n            //         for (let i = 0; i < this.levelData[layer].length; i += 1) {\n            //             if (this.levelData[layer][i][0] == nodeInfo.x && this.levelData[layer][i][1] == nodeInfo.y) {\n            //                 this.levelData[layer].splice(i, 1);\n            //                 break;\n            //             }\n            //         }\n            //         // 已选择数据三消\n            //         let cntMap: { [key: number]: number } = {};\n            //         for (let i = 0; i < this.selectedPool.length; i += 1) {\n            //             if (!cntMap[this.selectedPool[i][1]]) {\n            //                 cntMap[this.selectedPool[i][1]] = 1;\n            //             } else {\n            //                 cntMap[this.selectedPool[i][1]] += 1;\n            //             }\n            //             if (cntMap[this.selectedPool[i][1]] == 3) {\n            //                 // 向前删除3个\n            //                 for (let j = 0; j < 3; j += 1) {\n            //                     // 动效\n            //                     tween(this.selectedPool[i - 3 + 1][0].node).delay(0.1).to(0.3, {\n            //                         scale: new Vec3(0, 0, 1)\n            //                     }, {\n            //                         onComplete: (target) => {\n            //                             let node = target as Node;\n            //                             if (j == 0) {\n            //                                 // 后方节点前移\n            //                                 for (let j = i + 1; j < this.selectedPool.length; j += 1) {\n            //                                     let forwardNodeInfo = this.selectedPool[j][0];\n            //                                     targetPos = new Vec3(\n            //                                         j * pad - width / 2 + pad / 2,\n            //                                         0,\n            //                                         forwardNodeInfo.node.position.z\n            //                                     );\n            //                                     tween(forwardNodeInfo.node).stop();\n            //                                     tween(forwardNodeInfo.node).to(0.3, {\n            //                                         position: parentTransform.convertToNodeSpaceAR(this.selectedNode.getComponent(UITransform).convertToWorldSpaceAR(targetPos))\n            //                                     }).start();\n            //                                 }\n            //                             }\n            //                         }\n            //                     }).start();\n            //                     // 数据删除\n            //                     this.selectedPool.splice(i - 3 + 1, 1);\n            //                 }\n            //                 i -= 3;\n            //                 //\n            //             }\n            //         }\n            //         // 刷新遮挡\n            //         this.cardNodes.forEach(nodeInfo => nodeInfo.refreshCoverState(0.5, this.levelData));\n            //         // 判定胜负\n            //         if (this.selectedPool.length > col) {\n            //             log(\"lose\");\n            //             this.restartNode.active = true;\n            //             this.restartNode.children[0].active = false;\n            //             this.restartNode.children[1].active = true;\n            //         }\n            //         if (this.levelData.every(v => v.length == 0)) {\n            //             log(\"win\");\n            //             this.restartNode.active = true;\n            //             this.restartNode.children[0].active = true;\n            //             this.restartNode.children[1].active = false;\n            //         }\n            //     }\n            // }).start();\n            // 后退动效\n            // for (let i = index + 1; i < this.selectedPool.length; i += 1) {\n            //     let forwardNodeInfo = this.selectedPool[i][0];\n            //     targetPos = new cc.Vec3(\n            //         i * pad - width / 2 + pad / 2,\n            //         0,\n            //         forwardNodeInfo.node.position.z\n            //     );\n            //     tween(forwardNodeInfo.node).stop();\n            //     tween(forwardNodeInfo.node).to(0.3, {\n            //         position: parentTransform.convertToNodeSpaceAR(this.selectedNode.getComponent(UITransform).convertToWorldSpaceAR(targetPos))\n            //     }).start();\n            // }\n        }\n    }\n\n    clickRestart() {\n        // this.restartNode.active = false;\n        // this.cardNodes = [];\n        // this.selectedPool = [];\n        // this.levelData = [];\n        // this.levelNode.removeAllChildren();\n        // this.selectedNode.removeAllChildren();\n        this.loadLevel(1);\n    }\n\n\n\n\n}"]}