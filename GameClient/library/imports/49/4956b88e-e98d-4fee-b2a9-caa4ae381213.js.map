{"version":3,"sources":["assets/c2f-framework/core/loader/ResLoader.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["type ProgressCallback = (finished: number, total: number, item: cc.AssetManager.RequestItem) => void;\ntype CompleteCallback<T = any> = (err: Error | null, data: T) => void;\ntype IRemoteOptions = Record<string, any>;\ntype AssetType<T = cc.Asset> = new (...args: any[]) => T;\n\ninterface ILoadResArgs<T extends cc.Asset> {\n    bundle?: string;\n    dir?: string;\n    paths: string | string[];\n    type: AssetType<T> | null;\n    onProgress: ProgressCallback | null;\n    onComplete: CompleteCallback<T> | null;\n}\n\n/** 资源缓存基础数据结构 */\ninterface CacheData {\n    asset: cc.Asset,\n    /** 资源是否需要释放 */\n    release: boolean,\n    /** 资源最后一次被加载的时间点（秒） */\n    lastLoadTime: number,\n}\n\n/** 预制体资源缓存数据 */\ninterface PrefabCacheData extends CacheData {\n    /** 此prefab关联的实例节点 */\n    nodes?: cc.Node[],\n}\n\n/** asset bundle路径校验 */\nconst BUNDLE_CHECK = \"ab:\";\n\n/**\n * 资源管理类\n * \n * 资源加载:\n * 1. 如果加载resources内的资源，直接写明resources内的路径即可\n * 2. 如果加载路径以ab:开头，则会加载对应bundle内的资源。例：ab:bundleA/xxx/a表示bundle名为bundleA，资源路径为xxx/a\n * \n * 引用计数管理：\n * 1. 尽量使用此类的接口加载所有资源、instantiate节点实例，否则需要自行管理引用计数\n * 2. Res.instantiate不要对动态生成的节点使用，尽量只instantiate prefab上预设好的节点，否则有可能会导致引用计数的管理出错\n * 3. 调用load接口时如需传入release参数，则同一资源在全局调用load时release参数尽量保持一致，否则可能不符合预期\n * 4. 请使用ResSpine、ResSprite组件去动态加载spine、图片资源，否则需要自行管理这些资源的引用计数\n */\nclass ResLoader {\n    /** 节点与其关联的prefab路径 */\n    private _nodePath: Map<cc.Node, string> = new Map();\n    /** prefab资源与路径 */\n    private _prefabPath: Map<cc.Prefab, string> = new Map();\n\n    private _prefabCache: Map<string, PrefabCacheData> = new Map();\n    private _spriteFrameCache: Map<string, CacheData> = new Map();\n    private _spriteAtlasCache: Map<string, CacheData> = new Map();\n    private _skeletonDataCache: Map<string, CacheData> = new Map();\n    private _otherCache: Map<string, cc.Asset> = new Map();\n\n    /** 资源释放的间隔时间（秒），资源超过此间隔未被load才可释放 */\n    public releaseSec: number = 5;\n    /** 预备释放 */\n    private willRelease: boolean = false;\n\n\n    /**\n     * 资源管理中的全局Url\n     * @param bundle \n     * @param url \n     * @returns \n     */\n    public getFullUrl(bundle: string, url: string) {\n        let keyUrl = `${BUNDLE_CHECK}${bundle}/${url}`;\n        return keyUrl;\n    }\n\n    /**\n     * 资源路径解析\n     * @param url \n     */\n    public parseUrl(url: string): { bundle?: string, loadUrl: string } {\n        if (url.startsWith(BUNDLE_CHECK)) {\n            let loadUrl = url.substring(BUNDLE_CHECK.length);\n            let idx = loadUrl.indexOf(\"/\");\n            let bundle = loadUrl.substring(0, idx);\n            loadUrl = loadUrl.substring(idx + 1);\n            return { bundle: bundle, loadUrl: loadUrl };\n        } else {\n            return { loadUrl: url };\n        }\n    }\n\n    /**\n     * 通过节点或预制查找已缓存prefab路径\n     * @param target \n     */\n    private getCachePrefabUrl(target: cc.Node | cc.Prefab): string {\n        let url = \"\";\n        if (target instanceof cc.Node) {\n            let cur = target;\n            while (cur) {\n                if (cur[\"_prefab\"] && cur[\"_prefab\"][\"root\"]) {\n                    url = this._nodePath.get(cur[\"_prefab\"][\"root\"]) || \"\";\n                    if (url) {\n                        break;\n                    }\n                }\n                cur = cur.parent;\n            }\n        } else if (target instanceof cc.Prefab) {\n            url = this._prefabPath.get(target) || \"\";\n        }\n        return url;\n    }\n\n    /**\n     * 缓存资源\n     * @param url 资源路径\n     * @param asset 资源\n     * @param release 资源是否需要释放\n     */\n    private cacheAsset(url: string, asset: cc.Asset, release: boolean = true): void {\n        if (!asset) {\n            return;\n        }\n        let func = (map: Map<string, CacheData>) => {\n            if (map.has(url)) {\n                return;\n            }\n            asset.addRef();\n            if (asset instanceof cc.Prefab) {\n                this._prefabPath.set(asset, url);\n            }\n            let cacheData: CacheData = {\n                asset: asset,\n                release: release,\n                lastLoadTime: Date.now() / 1000\n            };\n            map.set(url, cacheData);\n        };\n\n        if (asset instanceof cc.Prefab) {\n            func(this._prefabCache);\n        } else if (asset instanceof cc.SpriteFrame) {\n            func(this._spriteFrameCache);\n        } else if (asset instanceof cc.SpriteAtlas) {\n            func(this._spriteAtlasCache);\n        } else if (asset instanceof sp.SkeletonData) {\n            func(this._skeletonDataCache);\n        } else {\n            if (this._otherCache.has(url)) {\n                return;\n            }\n            asset.addRef();\n            this._otherCache.set(url, asset);\n        }\n    }\n\n    /**\n     * 获取缓存资源。通常不应直接调用此接口，除非调用前能确保资源已加载并且能自行管理引用计数\n     * @param url 资源路径\n     * @param type 资源类型\n     */\n    public getRes<T extends cc.Asset>(url: string, type: typeof cc.Asset): T | null {\n        let asset: unknown = null;\n        let func = (map: Map<string, CacheData>) => {\n            let data = map.get(url);\n            if (data) {\n                asset = data.asset;\n                data.lastLoadTime = Date.now() / 1000;\n            }\n        };\n\n        if (type === cc.Prefab) {\n            func(this._prefabCache);\n        } else if (type === cc.SpriteFrame) {\n            func(this._spriteFrameCache);\n        } else if (type === cc.SpriteAtlas) {\n            func(this._spriteAtlasCache);\n        } else if (type === sp.SkeletonData) {\n            func(this._skeletonDataCache);\n        } else {\n            asset = this._otherCache.get(url);\n        }\n\n        return asset as T;\n    }\n\n    public getCacheData(url: string, type: typeof cc.Asset) {\n        let cache: CacheData = null;\n        if (type === cc.Prefab) {\n            cache = this._prefabCache.get(url);\n        } else if (type === cc.SpriteFrame) {\n            cache = this._spriteFrameCache.get(url);\n        } else if (type === cc.SpriteAtlas) {\n            cache = this._spriteAtlasCache.get(url);\n        } else if (type === sp.SkeletonData) {\n            cache = this._skeletonDataCache.get(url);\n        }\n        return cache;\n    }\n\n\n\n    /**\n     * 加载资源包\n     * @param nameOrUrl 资源地址\n     * @param complete  完成事件\n     * @param v         资源MD5版本号\n     * @example\n        let serverUrl = \"http://192.168.1.8:8080/\";         // 服务器地址\n        let md5 = \"8e5c0\";                                  // Cocos Creator 构建后的MD5字符\n        await c2f.res.loadBundle(serverUrl,md5);\n     */\n    public async loadBundle(nameOrUrl: string, v?: string) {\n        return new Promise<cc.AssetManager.Bundle>((resolve, reject) => {\n            cc.assetManager.loadBundle(nameOrUrl, { version: v }, (err, bundle: cc.AssetManager.Bundle) => {\n                if (err) {\n                    cc.error(`[Res.loadBundle] error: ${err}`);\n                    resolve(null);\n                }\n                resolve(bundle);\n            });\n        });\n    }\n\n    /** 异步加载包 */\n    public loadBundleAsync(nameOrUrl: string, endCb: Function, v?: string) {\n        cc.assetManager.loadBundle(nameOrUrl, { version: v }, (err, bundle: cc.AssetManager.Bundle) => {\n            if (err) {\n                cc.error(`[Res.loadBundle] error: ${err}`);\n                endCb && endCb(null);\n            }\n            endCb && endCb(bundle);\n        });\n    }\n\n    /**\n     * 加载远程资源\n     * @param url           资源地址\n     * @param options       资源参数，例：{ ext: \".png\" }\n     * @param onComplete    加载完成回调\n     * @example\n        let opt: IRemoteOptions = { ext: \".png\" };\n        let onComplete = (err: Error | null, data: ImageAsset) => {\n            const texture = new Texture2D();\n            texture.image = data;\n            \n            const spriteFrame = new SpriteFrame();\n            spriteFrame.texture = texture;\n            \n            let sprite = this.sprite.addComponent(Sprite);\n            sprite.spriteFrame = spriteFrame;\n        }\n        c2f.res.loadRemote<ImageAsset>(this.url, opt, onComplete);\n    */\n    loadRemote<T extends cc.Asset>(url: string, options: IRemoteOptions | null, onComplete?: CompleteCallback<T> | null): void;\n    loadRemote<T extends cc.Asset>(url: string, onComplete?: CompleteCallback<T> | null): void;\n    loadRemote<T extends cc.Asset>(url: string, ...args: any): void {\n        if (!url) {\n            cc.error(`[Res.load] url is empty`);\n            return null;\n        }\n\n        let options: IRemoteOptions | null = null;\n        let onComplete: CompleteCallback<T> | null = null;\n        if (args.length == 2) {\n            options = args[0];\n            onComplete = args[1];\n        }\n        else {\n            onComplete = args[0];\n        }\n\n        let asset: T = this.getRes(url, undefined);\n        if (asset) {\n            onComplete && onComplete(null, asset);\n        } else {\n            let parseData = this.parseUrl(url);\n            cc.assetManager.loadRemote<T>(parseData.loadUrl, options, (err, data: T) => {\n                if (err) {\n                    cc.error(`[Res.load] load error: ${err}`);\n                } else {\n                    this.cacheAsset(url, data, true);\n                }\n                onComplete && onComplete(err, data);\n            });\n        }\n    }\n\n    /**\n     * 加载一个资源\n     * @param bundleName    远程包名\n     * @param paths         资源路径\n     * @param type          资源类型\n     * @param onProgress    加载进度回调\n     * @param onComplete    加载完成回调\n     * @example\n        c2f.res.load(\"spine_path\", sp.SkeletonData, (err: Error | null, sd: sp.SkeletonData) => {\n        });\n     */\n    public load<T extends cc.Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(bundleName: string, paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(bundleName: string, paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\n    public load<T extends cc.Asset>(\n        bundleName: string,\n        paths?: string | string[] | AssetType<T> | ProgressCallback | CompleteCallback | null,\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\n        onProgress?: ProgressCallback | CompleteCallback | null,\n        onComplete?: CompleteCallback | null,\n    ) {\n        let args: ILoadResArgs<T> | null = null;\n        if (typeof paths === \"string\" || paths instanceof Array) {\n            args = this.parseLoadResArgs(paths, type, onProgress, onComplete);\n            args.bundle = bundleName;\n        }\n        else {\n            args = this.parseLoadResArgs(bundleName, paths, type, onProgress);\n        }\n        this.loadByArgs(args);\n    }\n\n    /**\n     * 加载文件夹中的资源\n     * @param bundleName    远程包名\n     * @param dir           文件夹名\n     * @param type          资源类型\n     * @param onProgress    加载进度回调\n     * @param onComplete    加载完成回调\n     * @example\n        // 加载进度事件\n        let onProgressCallback = (finished: number, total: number, item: any) => {\n            console.log(\"资源加载进度\", finished, total);\n        }\n\n        // 加载完成事件\n        let onCompleteCallback = () => {\n            console.log(\"资源加载完成\");\n        }\n        c2f.res.loadDir(\"game\", onProgressCallback, onCompleteCallback);\n     */\n    public loadDir<T extends cc.Asset>(bundleName: string, dir: string, type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(bundleName: string, dir: string, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(bundleName: string, dir: string, onComplete?: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(bundleName: string, dir: string, type: AssetType<T> | null, onComplete?: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(dir: string, type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(dir: string, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(dir: string, onComplete?: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(dir: string, type: AssetType<T> | null, onComplete?: CompleteCallback<T[]> | null): void;\n    public loadDir<T extends cc.Asset>(\n        bundleName: string,\n        dir?: string | AssetType<T> | ProgressCallback | CompleteCallback | null,\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\n        onProgress?: ProgressCallback | CompleteCallback | null,\n        onComplete?: CompleteCallback | null,\n    ) {\n        let args: ILoadResArgs<T> | null = null;\n        if (typeof dir === \"string\") {\n            args = this.parseLoadResArgs(dir, type, onProgress, onComplete);\n            args.bundle = bundleName;\n        }\n        else {\n            args = this.parseLoadResArgs(bundleName, dir, type, onProgress);\n        }\n        args.dir = args.paths as string;\n        this.loadByArgs(args);\n    }\n\n    /**\n     * 加载单个资源\n     * @param url 资源路径\n     * @param type 资源类型\n     * @param release 资源是否需要释放\n     */\n    public async loadOne<T extends cc.Asset>(url: string, type: typeof cc.Asset, release: boolean = true): Promise<T | null> {\n        if (!url) {\n            cc.error(`[Res.load] url is empty`);\n            return null;\n        }\n        let asset: T = this.getRes(url, type);\n        if (asset) {\n            return asset;\n        }\n        let parseData = this.parseUrl(url);\n        if (parseData.bundle && !cc.assetManager.getBundle(parseData.bundle)) {\n            await this.loadBundle(parseData.bundle);\n        }\n        let bundle: cc.AssetManager.Bundle = parseData.bundle ? cc.assetManager.getBundle(parseData.bundle) : cc.resources;\n        if (!bundle) {\n            cc.error(`[Res.load] cant find bundle: ${url}`);\n            return null;\n        }\n\n        //多语言适配\n        let lgInfo = await this.getLGResInfo(parseData.loadUrl, bundle);\n        if (lgInfo) {\n            parseData.loadUrl = lgInfo.lgUrl;\n            bundle = lgInfo.lgBundle;\n        }\n\n        let existRes: any = bundle.get(parseData.loadUrl, type);\n        if (existRes) {\n            this.cacheAsset(url, existRes, true);\n            return existRes;\n        } else {\n            asset = await new Promise((resolve, reject) => {\n                bundle.load(parseData.loadUrl, type, (error: Error, resource: T) => {\n                    if (error) {\n                        cc.error(`[Res.load] load error: ${error}`);\n                        resolve(null);\n                    } else {\n                        this.cacheAsset(url, resource, release);\n                        resolve(resource);\n                    }\n                });\n            });\n        }\n        return asset;\n    }\n\n    private loadResAsync<T extends cc.Asset>(urlFull: string, type: typeof cc.Asset, release: boolean, bundle: cc.AssetManager.Bundle, loadUrl: string, endCb: Function) {\n        let existRes: any = bundle.get(loadUrl, type);\n        if (existRes) {\n            this.cacheAsset(urlFull, existRes, true);\n            endCb && endCb(existRes);\n        } else {\n            bundle.load(loadUrl, type, (error: Error, res: T) => {\n                if (error) {\n                    cc.error(`[Res.load] load error: ${error}`);\n                    endCb && endCb(null);\n                } else {\n                    this.cacheAsset(urlFull, res, release);\n                    endCb && endCb(res);\n                }\n            });\n        }\n    }\n\n    private getRealBundleRes(bundleName: string, urlFull: string, loadUrl: string, endCb: Function) {\n        let bundle: cc.AssetManager.Bundle = bundleName ? cc.assetManager.getBundle(bundleName) : cc.resources;\n        if (!bundle) {\n            cc.error(`[Res.load] cant find bundle: ${urlFull}`);\n            endCb && endCb(null, null);\n        } else {\n            //多语言适配\n            this.getLGResInfoAsync(loadUrl, bundle, (info: { lgUrl: string, lgBundle: cc.AssetManager.Bundle }) => {\n                if (info) {\n                    endCb && endCb(info.lgBundle, info.lgUrl);\n                } else {\n                    endCb && endCb(bundle, loadUrl);\n                }\n            })\n        }\n    }\n\n    /**\n     * 异步加载单个资源\n     * @param url 资源路径\n     * @param type 资源类型\n     * @param release 资源是否需要释放\n     */\n    public loadOneAsync<T extends cc.Asset>(url: string, type: typeof cc.Asset, release: boolean = true, endCb: Function = null) {\n        if (!url) {\n            cc.error(`[Res.load] url is empty`);\n            endCb && endCb(null);\n        }\n        let asset: T = this.getRes(url, type);\n        if (asset) {\n            endCb && endCb(asset);\n        }\n        let parseData = this.parseUrl(url);\n        this.getRealBundleRes(parseData.bundle, url, parseData.loadUrl, (realBundle: cc.AssetManager.Bundle, realUrl: string) => {\n            if (realBundle) {\n                this.loadResAsync(url, type, release, realBundle, realUrl, (res: T) => {\n                    endCb && endCb(res);\n                })\n            } else {\n                endCb && endCb(null);\n            }\n        })\n    }\n\n    /**\n     * 加载某个文件夹内的某类资源\n     * @param url 资源路径\n     * @param type 资源类型\n     * @param release 资源是否需要释放\n     */\n    public async loadOneDir<T extends cc.Asset>(url: string, type: typeof cc.Asset, release: boolean = true): Promise<T[]> {\n        if (!url) {\n            cc.error(`[Res.load] url is empty`);\n            return [];\n        }\n\n        let parseData = this.parseUrl(url);\n        if (parseData.bundle && !cc.assetManager.getBundle(parseData.bundle)) {\n            await this.loadBundle(parseData.bundle);\n        }\n\n        return new Promise((resolve, reject) => {\n            let bundle: cc.AssetManager.Bundle = parseData.bundle ? cc.assetManager.getBundle(parseData.bundle) : cc.resources;\n            if (!bundle) {\n                cc.error(`[Res.loadDir] cant find bundle: ${url}`);\n                resolve([]);\n                return;\n            }\n\n            bundle.loadDir(parseData.loadUrl, type, (error: Error, resource: T[]) => {\n                if (error) {\n                    cc.error(`[Res.loadDir] load error: ${error}`);\n                    resolve([]);\n                } else {\n                    let infos = bundle.getDirWithPath(url, type);\n                    resource.forEach((asset, i) => { this.cacheAsset(infos[i].path, asset, release); });\n                    resolve(resource);\n                }\n            });\n        });\n    }\n\n    /** 多语言文件替换 */\n    private async getLGResInfo(url: string, bundle: cc.AssetManager.Bundle) {\n        let lgInfo: { lgUrl: string, lgBundle: cc.AssetManager.Bundle } = null;\n        let info = bundle.getInfoWithPath(url);\n        if (info) {\n            let mulLgUuid = c2f.language.getLGResUuid(info.uuid);\n            if (mulLgUuid) {\n                let lgBundle: cc.AssetManager.Bundle = null;\n                let lgBundleName = 'language_' + c2f.language.current;\n                if (cc.assetManager.bundles.has(lgBundleName)) {\n                    lgBundle = cc.assetManager.bundles.get(lgBundleName);\n                } else {\n                    lgBundle = await this.loadBundle(lgBundleName);\n                }\n                if (lgBundle) {\n                    let lgUrl = lgBundle.getAssetInfo(mulLgUuid).path;\n                    lgInfo = { lgUrl, lgBundle };\n                }\n            }\n        }\n        return lgInfo;\n    }\n\n    /** 异步·多语言文件替换 */\n    private getLGResInfoAsync(url: string, bundle: cc.AssetManager.Bundle, endCb: Function) {\n        let lgInfo: { lgUrl: string, lgBundle: cc.AssetManager.Bundle } = null;\n        let info = bundle.getInfoWithPath(url);\n        if (!info) {\n            endCb && endCb(lgInfo);\n            return;\n        }\n        let mulLgUuid = c2f.language.getLGResUuid(info.uuid);\n        if (!mulLgUuid) {\n            endCb && endCb(lgInfo);\n            return;\n        }\n        let lgBundle: cc.AssetManager.Bundle = null;\n        let lgBundleName = 'language_' + c2f.language.current;\n        if (cc.assetManager.bundles.has(lgBundleName)) {\n            lgBundle = cc.assetManager.bundles.get(lgBundleName);\n            if (lgBundle) {\n                let lgUrl = lgBundle.getAssetInfo(mulLgUuid).path;\n                lgInfo = { lgUrl, lgBundle };\n            }\n            endCb && endCb(lgInfo);\n        } else {\n            this.loadBundleAsync(lgBundleName, (bundle: cc.AssetManager.Bundle) => {\n                if (bundle) {\n                    let lgUrl = lgBundle.getAssetInfo(mulLgUuid).path;\n                    lgInfo = { lgUrl, lgBundle };\n                }\n                endCb && endCb(lgInfo);\n            })\n        }\n    }\n\n    /**\n     * 获取节点实例，并建立新节点与prefab资源的联系\n     * @param original 用于实例化节点的prefab或node\n     * @param related 如果original不是动态加载的prefab，则需传入与original相关联的动态加载的prefab或node，以便资源释放的管理\n     * @example \n     * // 1.original为动态加载的prefab，无需传related参数\n     * Res.instantiate(original)\n     * \n     * // 2.aPrefab为动态加载的prefab，aNode为aPrefab的实例节点（aNode = Res.instantiate(aPrefab)），original为被aPrefab静态引用的prefab，则调用时需要用如下方式才能保证引用关系正确\n     * Res.instantiate(original, aPrefab)\n     * Res.instantiate(original, aNode)\n     * \n     * // 3.aPrefab为动态加载的prefab，aNode为aPrefab的实例节点（aNode = Res.instantiate(aPrefab)），original为aNode的某个子节点，则如下方式均可保证引用关系正确\n     * Res.instantiate(original)\n     * Res.instantiate(original, aPrefab)\n     * Res.instantiate(original, aNode)\n     */\n    public instantiate(original: cc.Node | cc.Prefab, related?: cc.Node | cc.Prefab): cc.Node {\n        if (!original) {\n            cc.error(\"[Res.instantiate] original is null\");\n            return null;\n        }\n\n        let node = cc.instantiate(original) as cc.Node;\n        let url = this.getCachePrefabUrl(original) || this.getCachePrefabUrl(related);\n        if (url) {\n            let cacheData: PrefabCacheData = this._prefabCache.get(url);\n            // release为true才缓存关联节点\n            if (cacheData && cacheData.release) {\n                if (!Array.isArray(cacheData.nodes)) {\n                    cacheData.nodes = [];\n                }\n                cacheData.nodes.push(node);\n                this._nodePath.set(node, url);\n            }\n        }\n        return node;\n    }\n\n    /** 延时释放 */\n    public delayReleaseAll() {\n        if (this.willRelease) {\n            return;\n        }\n        this.willRelease = true;\n        setTimeout(() => {\n            this.releaseAll();\n            this.willRelease = false;\n        }, 300);\n    }\n\n    /**\n     * 尝试释放所有缓存资源\n     * - 只要遵守本文件的规则注释，此接口不会导致正在被使用的资源被引擎释放，可放心使用\n     */\n    public releaseAll(): void {\n        let nowSec = Date.now() / 1000;\n        // prefab\n        this._prefabCache.forEach((cacheData, url) => {\n            if (!cacheData.release || nowSec - cacheData.lastLoadTime < this.releaseSec) {\n                return;\n            }\n\n            if (Array.isArray(cacheData.nodes)) {\n                for (let i = cacheData.nodes.length - 1; i >= 0; i--) {\n                    let node = cacheData.nodes[i];\n                    if (node && node.isValid) {\n                        continue;\n                    }\n                    this._nodePath.delete(node);\n                    cacheData.nodes.splice(i, 1);\n                }\n                if (cacheData.nodes.length === 0) {\n                    delete cacheData.nodes;\n                }\n            }\n\n            if (!Array.isArray(cacheData.nodes)) {\n                cacheData.asset.decRef();\n                this._prefabPath.delete(cacheData.asset as cc.Prefab);\n                this._prefabCache.delete(url);\n            }\n        });\n        // spriteFrame、spriteAtlas、skeletonData\n        let arr = [this._spriteFrameCache, this._spriteAtlasCache, this._skeletonDataCache];\n        arr.forEach((map) => {\n            map.forEach((cacheData, url) => {\n                if (!cacheData.release || nowSec - cacheData.lastLoadTime < this.releaseSec) {\n                    return;\n                }\n                cacheData.asset.decRef();\n                map.delete(url);\n            });\n        });\n        //TODO:other\n    }\n\n    /**\n     * 获取resources包内资源打包后的真实路径\n     * @param url resources下的资源路径\n     * @param ext 资源的后缀名\n     * @param isNative true:返回打包后native目录下的路径，false:返回打包后import目录下的路径\n     */\n    public static getNativeUrlByResources(url: string, ext: string, isNative: boolean = true): string {\n        try {\n            let nativeUrl = cc.assetManager[\"_transform\"]({ path: url, bundle: cc.AssetManager.BuiltinBundleName.RESOURCES, __isNative__: isNative, ext: ext });\n            return nativeUrl;\n        } catch (error) {\n            cc.error(`[Res.getNativeUrlByResources] error url: ${url}`);\n            return \"\";\n        }\n    }\n\n    /**\n     * 通过资源相对路径释放资源\n     * @param path          资源路径\n     * @param bundleName    远程资源包名\n     */\n    release(path: string, type: typeof cc.Asset, bundleName: string = \"resources\") {\n        let nowSec = Date.now() / 1000;\n        let keyUrl = path;\n        if (!path.startsWith(BUNDLE_CHECK)) {\n            keyUrl = this.getFullUrl(bundleName, path);\n        }\n        if (this._otherCache.has(keyUrl)) {\n            let dst = this._otherCache.get(keyUrl);\n            dst.decRef();\n            this._otherCache.delete(keyUrl);\n        } else {\n            let cacheData = this.getCacheData(keyUrl, type);\n            if (cacheData) {\n                if (type === cc.Prefab) {\n                    let prefabCache = cacheData as PrefabCacheData;\n                    if (!prefabCache.release || nowSec - prefabCache.lastLoadTime < this.releaseSec) {\n                        return;\n                    }\n                    if (Array.isArray(prefabCache.nodes)) {\n                        for (let i = prefabCache.nodes.length - 1; i >= 0; i--) {\n                            let node = prefabCache.nodes[i];\n                            if (node && node.isValid) {\n                                continue;\n                            }\n                            this._nodePath.delete(node);\n                            prefabCache.nodes.splice(i, 1);\n                        }\n                        if (prefabCache.nodes.length === 0) {\n                            delete prefabCache.nodes;\n                        }\n                    }\n                    if (!Array.isArray(prefabCache.nodes)) {\n                        prefabCache.asset.decRef();\n                        this._prefabPath.delete(cacheData.asset as cc.Prefab);\n                        this._prefabCache.delete(keyUrl);\n                    }\n                } else {\n                    if (!cacheData.release || nowSec - cacheData.lastLoadTime < this.releaseSec) {\n                        return;\n                    }\n                    cacheData.asset.decRef();\n\n                    let dstMap: Map<string, CacheData> = null;\n                    if (type === cc.SpriteFrame) {\n                        dstMap = this._spriteFrameCache;\n                    } else if (type === cc.SpriteAtlas) {\n                        dstMap = this._spriteAtlasCache;\n                    } else if (type === sp.SkeletonData) {\n                        dstMap = this._skeletonDataCache;\n                    }\n                    dstMap.delete(keyUrl);\n                }\n            }\n        }\n    }\n\n    /**\n     * 通过相对文件夹路径删除所有文件夹中资源\n     * @param path          资源文件夹路径\n     * @param bundleName    远程资源包名\n     */\n    releaseDir(path: string, bundleName: string = \"resources\") {\n        let bundle: cc.AssetManager.Bundle | null = cc.assetManager.getBundle(bundleName);\n        if (bundle) {\n            let infos = bundle.getDirWithPath(path);\n            if (infos) {\n                infos.map((info) => {\n                    let url = info.path;\n                    this.release(url, null, bundleName)\n                });\n            }\n        }\n    }\n\n    /** 释放预制依赖资源 */\n    private releasePrefabtDepsRecursively(uuid: string) {\n        let asset = cc.assetManager.assets.get(uuid)!;\n        cc.assetManager.releaseAsset(asset);\n\n        if (asset instanceof cc.Prefab) {\n            let uuids: string[] = cc.assetManager.dependUtil.getDepsRecursively(uuid)!;\n            uuids.forEach(uuid => {\n                let asset = cc.assetManager.assets.get(uuid)!;\n                asset.decRef();\n            });\n        }\n    }\n\n    /**\n     * 获取资源\n     * @param path          资源路径\n     * @param type          资源类型\n     * @param bundleName    远程资源包名\n     */\n    get<T extends cc.Asset>(path: string, type?: AssetType<T> | null, bundleName: string = \"resources\"): T | null {\n        let bundle: cc.AssetManager.Bundle | null = cc.assetManager.getBundle(bundleName);\n        return bundle!.get(path, type);\n    }\n\n    /** 打印缓存中所有资源信息 */\n    dump() {\n        cc.assetManager.assets.forEach((value: cc.Asset, key: string) => {\n            console.log(cc.assetManager.assets.get(key));\n        })\n        console.log(`当前资源总数:${cc.assetManager.assets.count}`);\n    }\n\n    private parseLoadResArgs<T extends cc.Asset>(\n        paths: string | string[],\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\n        onProgress?: AssetType<T> | ProgressCallback | CompleteCallback | null,\n        onComplete?: ProgressCallback | CompleteCallback | null\n    ) {\n        let pathsOut: any = paths;\n        let typeOut: any = type;\n        let onProgressOut: any = onProgress;\n        let onCompleteOut: any = onComplete;\n        if (onComplete === undefined) {\n            const isValidType = cc.js.isChildClassOf(type as AssetType, cc.Asset);\n            if (onProgress) {\n                onCompleteOut = onProgress as CompleteCallback;\n                if (isValidType) {\n                    onProgressOut = null;\n                }\n            }\n            else if (onProgress === undefined && !isValidType) {\n                onCompleteOut = type as CompleteCallback;\n                onProgressOut = null;\n                typeOut = null;\n            }\n            if (onProgress !== undefined && !isValidType) {\n                onProgressOut = type as ProgressCallback;\n                typeOut = null;\n            }\n        }\n        return { paths: pathsOut, type: typeOut, onProgress: onProgressOut, onComplete: onCompleteOut };\n    }\n\n    private loadByBundleAndArgs<T extends cc.Asset>(bundle: cc.AssetManager.Bundle, args: ILoadResArgs<T>): void {\n        if (args.dir) {\n            let dirUrl = args.paths as string;\n            bundle.loadDir(dirUrl, args.type, args.onProgress, (err, data: T[]) => {\n                if (err) {\n                    cc.error(`[Res.loadDir] load error: ${err}`);\n                } else {\n                    let infos = bundle.getDirWithPath(dirUrl, args.type as any);\n                    data.forEach((asset, i) => { this.cacheAsset(infos[i].path, asset); });\n                }\n                args.onComplete && args.onComplete(err, data as any);\n            });\n        }\n        else {\n            if (typeof args.paths == 'string') {\n                let keyUrl = args.paths;\n                if (args.bundle) {\n                    keyUrl = this.getFullUrl(args.bundle, args.paths);\n                }\n                let asset: T = this.getRes(keyUrl, args.type as any);\n                if (asset) {\n                    args.onComplete && args.onComplete(null, asset);\n                } else {\n                    let existRes = bundle.get(args.paths, args.type)\n                    if (existRes) {\n                        this.cacheAsset(keyUrl, existRes, true);\n                        args.onComplete && args.onComplete(null, existRes);\n                    } else {\n                        bundle.load(args.paths, args.type, args.onProgress, (err, data: T) => {\n                            if (err) {\n                                cc.error(`[Res.load] load error: ${err}`);\n                            } else {\n                                this.cacheAsset(keyUrl, data, true);\n                            }\n                            args.onComplete && args.onComplete(err, data);\n                        });\n                    }\n                }\n            } else {\n                let arrUrl: string[] = args.paths;\n                bundle.load(arrUrl, args.type, args.onProgress, (err, data: T[]) => {\n                    if (err) {\n                        cc.error(`[Res.loadDir] load error: ${err}`);\n                    } else {\n                        arrUrl.forEach((asset, i) => { this.cacheAsset(arrUrl[i], data[i]); });\n                    }\n                    args.onComplete && args.onComplete(err, data as any);\n                });\n            }\n        }\n    }\n\n    private async loadByArgs<T extends cc.Asset>(args: ILoadResArgs<T>) {\n        let bundle: cc.AssetManager.Bundle = cc.resources;\n        if (args.bundle) {\n            if (cc.assetManager.bundles.has(args.bundle)) {\n                bundle = cc.assetManager.bundles.get(args.bundle);\n            } else {\n                bundle = await this.loadBundle(args.bundle);\n            }\n        }\n        if (typeof args.paths == 'string') {\n            //多语言适配\n            let lgInfo = await this.getLGResInfo(args.paths, bundle);\n            if (lgInfo) {\n                args.paths = lgInfo.lgUrl;\n                bundle = lgInfo.lgBundle;\n            }\n        } else {\n            //TODO:文件数组\n        }\n        this.loadByBundleAndArgs(bundle!, args);\n    }\n\n    /** 静态成员 */\n    private static _instance: ResLoader = null\n    public static getInstance(): ResLoader {\n        if (!this._instance) {\n            this._instance = new ResLoader();\n        }\n        return this._instance;\n    }\n}\n\ndeclare global {\n    interface IC2F {\n        res: ResLoader;\n    }\n}\n\nc2f.res = ResLoader.getInstance();\nexport { };"]}