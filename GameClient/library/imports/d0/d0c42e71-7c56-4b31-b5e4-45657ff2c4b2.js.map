{"version":3,"sources":["assets/mainPack/script/desStar/DesStarMain/DesStarMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { UIVControlBase } from './../../../../c2f-framework/gui/layer/UIVControlBase';\nimport { C2FEnum } from './../../../../c2f-framework/define/C2FEnum';\nimport DesStarMainModel from './DesStarMainModel';\nimport DesStarMainView from './DesStarMainView';\nimport { EntranceUI } from '../../../../entrance/script/EntranceView';\nimport { UIHelper } from '../../../../Script/game/UIHelper';\nimport { GameConsts } from '../../../../Script/game/GameConsts';\nimport BlockItem from '../BlockItem/BlockItem';\nimport { UIPa } from '../../../../Script/game/UIParam';\nimport StartItem from '../StartItem/StartItem';\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class DesStarMain extends UIVControlBase {\n    /** 预制名 给实例调用 */\n    public prefabName = 'F_DesStarMain';\n\n    public model: DesStarMainModel = undefined;\n    public view: DesStarMainView = undefined;\n\n    protected onViewOpen(param: any) {\n        this.initAudioState()\n        UIHelper.playMusic('backMusic');\n        this.model.initData()\n        this.resetGame()\n        this.loadTabItemFirst(this.startGame.bind(this))\n        this.loadStarItem()\n        UIHelper.playEffect('ready_go');\n    }\n    private initAudioState() {\n        let state = c2f.storage.getBoolean(GameConsts.StorageKey.soundBg)\n        c2f.audio.bgmOff = state;\n        let stateEff = c2f.storage.getBoolean(GameConsts.StorageKey.soundEff)\n        c2f.audio.sfxOff = stateEff;\n    }\n\n    protected onEnable(): void {\n        if (super.onEnable) {\n            super.onEnable();\n        }\n        this.on(C2FEnum.UIEvent.ButtonClick, this.onButtonClick, this);\n    }\n\n    protected onDisable(): void {\n        if (super.onDisable) {\n            super.onDisable();\n        }\n        this.off(C2FEnum.UIEvent.ButtonClick);\n    }\n\n    private async onButtonClick(eventType: string, component: cc.Button) {\n        switch (component.name) {\n\n            case this.view.btnMenuButton.name:\n                this.CC_onClickbtnMenu();\n                break;\n\n\n            default:\n                break;\n        }\n    }\n\n\n    private CC_onClickbtnMenu() {\n        UIHelper.playEffect('betClick');\n        c2f.gui.open(EntranceUI.SoundSet)\n    }\n    public async loadTabItemFirst(cb) {\n        await c2f.res.loadOne(GameConsts.CmmPrefab.blockItem, cc.Prefab).then((resItem: cc.Prefab) => {\n            this.model.blockItem = resItem;\n            if (cb) {\n                cb();\n            }\n        })\n    }\n\n    public async loadStarItem() {\n        await c2f.res.loadOne(GameConsts.CmmPrefab.P_StartItem, cc.Prefab).then((resItem: cc.Prefab) => {\n            this.model.startItem = resItem;\n        })\n    }\n\n    private initItemArr() {\n        this.model.starItemMap = new Map();\n        for (let row = 0; row < 10; row++) {\n            let mapItem: Map<number, BlockItem> = new Map()\n            for (let column = 0; column < 10; column++) {\n                let nodeItem = c2f.utils.view.instantiateMVCPrefab(this.model.blockItem, this.view.content);\n                this.view.content.addChild(nodeItem)\n                let blockItem = nodeItem.getComponent(BlockItem)\n                mapItem.set(column, blockItem)\n            }\n            this.model.starItemMap.set(row, mapItem)\n        }\n    }\n\n\n    private setBarView() {\n        this.view.txtScoreLabel.string = \"{0}/{1}\".format(this.model.curScore, this.model.totalShowScore)\n        let perNum = this.model.curScore / this.model.totalShowScore;\n        if (perNum > 1) {\n            perNum = 1\n        }\n        this.view.barProgressBar.progress = perNum;\n    }\n    private startGame() {\n        this.setBarView()\n        this.model.isActionRunning = false\n        if (!this.model.starItemMap) {\n            this.initItemArr()\n        }\n        this.view.txtLvLabel.string = (this.model.curLv + 1).toString()\n        let actionDelay = 0;\n        for (let row = 0; row < 10; row++) {\n            actionDelay = 0.02 * row;\n            for (let column = 0; column < 10; column++) {\n                actionDelay += 0.02\n                let initPosition = this.model.getStarPosition(row, column);\n                initPosition.y += this.model.visibleSize.height;\n                let item = this.model.starItemMap.get(row).get(column);\n                let nodeItem = item.node\n                nodeItem.name = `block${column}_${row}`\n                nodeItem.setPosition(initPosition);\n                let typ = this.model.starDataArr[row][column]\n                let itemData = UIPa.StarItemData[typ]\n                let score = 0\n                let url = \"\"\n                if (itemData) {\n                    score = itemData.score\n                    url = itemData.url\n                }\n                let dataItem: UIPa.DesStarItemArgs = {\n                    typ: typ,\n                    score: score,\n                    url: url,\n                    column: column,\n                    row: row,\n                    cbFun: this.clickItemCb.bind(this),\n                }\n                item.setInit(dataItem);\n                cc.tween(nodeItem)\n                    .to(0.2 + actionDelay, { position: this.model.getStarPosition(row, column) })\n                    .start()\n            }\n        }\n\n    }\n\n    private judgeFinal(result: UIPa.DesStarBase[], starDataArr: number[][]) {\n        let rowAndCol: UIPa.DesStarBase\n        let score = 0\n        for (let i = 0; i < result.length; i++) {\n            rowAndCol = result[i];\n            //播放爆炸效果  应该是要爆炸后飞星星特效\n            let item = this.model.starItemMap.get(rowAndCol.row).get(rowAndCol.column);\n            item.playChoose();\n            score += item.model.data.score\n            starDataArr[rowAndCol.row][rowAndCol.column] = -1;\n        }\n\n        let tweenItem = cc.tween(this.node)\n        for (let i = 0; i < result.length; i++) {\n            rowAndCol = result[i];\n            //播放爆炸效果  应该是要爆炸后飞星星特效\n            UIHelper.playEffect('getMoney');\n            let item = this.model.starItemMap.get(rowAndCol.row).get(rowAndCol.column);\n            tweenItem.call(() => {\n                this.model.curScore += item.model.data.score\n                item.playExplode(() => {\n                    this.setBarView()\n                    this.playStartAni(item.node)\n                });\n            }).delay(0.02)\n        }\n        let countHave = this.getHaveCount()\n        tweenItem.call(() => {\n            this.showReward(score)\n            this.scheduleOnce(() => {\n                if (countHave <= 1) {//如果完成了游戏\n                    this.winGame(countHave)\n                } else {\n                    this.drawBlock(starDataArr)\n                }\n            }, 0.8)\n        }).start()\n\n\n    }\n\n    private playStartAni(nodeTemp: cc.Node) {\n        let itemNode = c2f.utils.view.instantiateMVCPrefab(this.model.startItem, this.view.content);\n        this.view.content.addChild(itemNode)\n        let starItem = itemNode.getComponent(StartItem)\n        starItem.playAni()\n        itemNode.setPosition(nodeTemp.position)\n\n        let worldPoint = this.view.endPos.parent.convertToWorldSpaceAR(this.view.endPos.position);\n        let endPos = this.view.content.convertToNodeSpaceAR(worldPoint);\n        let config: UIPa.MoveConfig = {\n            startPos: nodeTemp.position,\n            endPos: endPos,\n        }\n        UIHelper.createBezier(itemNode, config)\n        cc.tween(itemNode).to(0.8, {}, UIHelper.createBezier(itemNode, config)).delay(0.2).call(() => {\n            itemNode.destroy()\n        }).start()\n    }\n\n\n    private showReward(score: number) {\n        UIHelper.playEffect('select');\n        if (score > 400) {\n            this.playWinByIndex(5)\n        } else if (score > 200) {\n            this.playWinByIndex(4)\n        } else if (score > 100) {\n            this.playWinByIndex(3)\n        } else if (score > 50) {\n            this.playWinByIndex(2)\n        } else if (score > 20) {\n            this.playWinByIndex(1)\n        }\n    }\n\n    private playWinByIndex(index: number) {\n        UIHelper.playEffect('reward_' + index);\n        this.view.reward.active = true;\n        this.view.reward.setScale(0.8)\n        this.view.reward.opacity = 120\n        c2f.utils.view.changeSpriteFrame(this.view.rewardSprite, GameConsts.ResUrl.desStar + 'reward_' + index)\n        cc.Tween.stopAllByTarget(this.view.reward)\n        cc.tween(this.view.reward).to(0.3, { scale: 1.8 }).start()\n        cc.tween(this.view.reward).to(0.3, { opacity: 255 }).call(() => {\n            this.view.reward.active = false\n        }).start()\n    }\n\n    private clickItemCb(data: UIPa.DesStarItemArgs) {\n        if (!this.model.isActionRunning) {\n            UIHelper.playEffect('select');\n            this.model.isActionRunning = true;\n            const result = this.model.findSameStarIndex(data.row, data.column);\n            if (result.length > 1) {\n                const starDataArr = this.model.starDataArr;\n                this.judgeFinal(result, starDataArr)\n            } else {\n                this.model.isActionRunning = false;\n            }\n        }\n    }\n\n    private drawBlock(starDataArr: number[][]) {\n        // 先整体往下，再往左\n        const starMoveData: UIPa.MoveData[] = [];\n        for (let r = 0; r < 10; r++) {\n            for (let c = 0; c < 10; c++) {\n                if (starDataArr[r][c] == -1) {\n                    let rowTop = r + 1;\n                    while (rowTop < 10 && starDataArr[rowTop][c] == -1) {\n                        rowTop += 1;\n                    }\n                    if (rowTop < 10) {\n                        starDataArr[r][c] = starDataArr[rowTop][c];\n                        starDataArr[rowTop][c] = -1;\n                        let moveDataItem: UIPa.MoveData = {\n                            fromRow: rowTop,\n                            fromCol: c,\n                            toRow: r,\n                            toCol: c\n                        }\n                        starMoveData.push(moveDataItem);\n                    }\n                }\n            }\n        }\n        let isColEmpty = false;\n        let b = false;\n        for (let c = 8; c > -1; c--) {\n            isColEmpty = true;\n            for (let r = 0; r < 10; r++) {\n                if (starDataArr[r][c] != -1) {\n                    isColEmpty = false;\n                    break;\n                }\n            }\n            if (isColEmpty) {\n                for (let newCol = c + 1; newCol < 10; newCol++) {\n                    for (let r = 0; r < 10; r++) {\n                        starDataArr[r][newCol - 1] = starDataArr[r][newCol];\n                        starDataArr[r][newCol] = -1;\n                        // 不等于-1，才有移动的需求\n                        if (starDataArr[r][newCol - 1] != -1) {\n                            b = false;\n                            for (let i = 0; i < starMoveData.length; i++) {\n                                if (starMoveData[i].toRow == r && starMoveData[i].toCol == newCol) {\n                                    starMoveData[i].toRow = r;\n                                    starMoveData[i].toCol = newCol - 1;\n                                    b = true;\n                                    break;\n                                }\n                            }\n                            if (!b) {\n                                starMoveData.push({\n                                    fromRow: r,\n                                    fromCol: newCol,\n                                    toRow: r,\n                                    toCol: newCol - 1\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        const starMoveDataLength = starMoveData.length;\n        if (starMoveDataLength > 0) {\n            let actionCount = 0;\n            for (let i = 0; i < starMoveDataLength; i++) {\n                let moveData = starMoveData[i];\n                actionCount++;\n                let item = this.model.starItemMap.get(moveData.fromRow).get(moveData.fromCol);\n                cc.tween(item.node)\n                    .to(0.2, { position: this.model.getStarPosition(moveData.toRow, moveData.toCol) })\n                    .call(() => {\n                        if (--actionCount == 0) {\n                            //所有元素重置下位置\n                            this.model.isActionRunning = false;\n                            this.resetView()\n                        }\n                    })\n                    .start()\n            }\n        } else {\n            this.model.isActionRunning = false;\n        }\n    }\n\n\n\n    private resetView() {\n        for (let row = 0; row < 10; row++) {\n            for (let column = 0; column < 10; column++) {\n                let initPosition = this.model.getStarPosition(row, column);\n                let item = this.model.starItemMap.get(row).get(column);\n                let nodeItem = item.node\n                nodeItem.name = `block${column}_${row}`\n                nodeItem.setPosition(initPosition);\n                let typ = this.model.starDataArr[row][column]\n                let itemData = UIPa.StarItemData[typ]\n                let score = 0\n                let url = \"\"\n                if (itemData) {\n                    score = itemData.score\n                    url = itemData.url\n                }\n                let dataItem: UIPa.DesStarItemArgs = {\n                    typ: typ,\n                    score: score,\n                    url: url,\n                    column: column,\n                    row: row,\n                    cbFun: this.clickItemCb.bind(this),\n                }\n                item.setInit(dataItem);\n            }\n        }\n        let countHave = this.getHaveCount()\n        if (countHave <= 1) {//如果完成了游戏\n            this.winGame(countHave)\n            return\n        }\n\n    }\n\n    private getHaveCount(): number {\n        let maxCount = 0\n        //最多的只有一个的时候也需要完成\n        let mapItem: Map<number, number> = new Map()\n        for (let i = 0; i < this.model.starDataArr.length; i++) {\n            let row = this.model.starDataArr[i]\n            for (let j = 0; j < row.length; j++) {\n                let typ = row[j]\n                if (typ >= 0) {\n                    let item = mapItem.get(typ)\n                    if (item) {\n                        let curCount = item + 1\n                        mapItem.set(typ, curCount)\n                    } else {\n                        mapItem.set(typ, 1)\n                    }\n                }\n            }\n        }\n        mapItem.forEach(v => {\n            if (v > maxCount) {\n                maxCount = v\n            }\n        });\n        return maxCount\n    }\n\n    private winGame(count: number) {\n        if (count == 1) {//单独爆炸\n            for (let row = 0; row < 10; row++) {\n                for (let column = 0; column < 10; column++) {\n                    let typ = this.model.starDataArr[row][column]\n                    let item = this.model.starItemMap.get(row).get(column);\n                    if (typ > 0) {\n                        this.model.curScore += item.model.data.score\n                        item.playChoose();\n                        item.playExplode(() => {\n                            this.setBarView()\n                            this.playStartAni(item.node)\n                        });\n                    }\n                    break;\n                }\n            }\n            this.enterNextLv()\n        } else {\n            this.enterNextLv()\n        }\n    }\n    private enterNextLv() {\n        this.scheduleOnce(() => {\n            this.model.curLv++\n            c2f.storage.setNumber(GameConsts.StorageKey.curLv, this.model.curLv)\n            this.model.getDataByLv(this.model.curLv)\n            this.startGame()\n        }, 1)\n    }\n\n    private resetGame() {\n        this.view.reward.active = false\n    }\n\n}"]}