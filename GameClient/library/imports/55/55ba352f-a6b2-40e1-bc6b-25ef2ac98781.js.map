{"version":3,"sources":["assets/entrance/script/controls/entity/PopDlgPanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C;IAAyC,+BAAY;IAArD;QAAA,qEAyDC;QAtDG,WAAK,GAAa,IAAI,CAAC;QAGvB,cAAQ,GAAc,IAAI,CAAC;QAG3B,mBAAa,GAAY,IAAI,CAAC;;IAgDlC,CAAC;IA9CU,8BAAQ,GAAf,UAAgB,KAAa;QACzB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEM,mCAAa,GAApB,UAAqB,MAAmC;QACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC;IACvC,CAAC;IAEM,sCAAgB,GAAvB,UAAwB,CAAU;QAC9B,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;SACjC;IACL,CAAC;IAEM,2CAAqB,GAA5B,UAA6B,CAAS;QAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,OAAO;SACV;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB;QACD,IAAI,CAAC,SAAS,EAAE;YACZ,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IAEM,8CAAwB,GAA/B;QACI,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YACtD,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACxB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,eAAe;IACR,0CAAoB,GAA3B,UAA4B,IAAkB,EAAE,WAAiC;QAAjC,4BAAA,EAAA,yBAAiC;QAC7E,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAC9C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC1D,OAAO,CAAC,OAAO,GAAG,WAAW,CAAC;QAC9B,OAAO,CAAC,eAAe,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IArDD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;8CACI;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;iDACO;IAG3B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACY;IATb,WAAW;QAD/B,OAAO;OACa,WAAW,CAyD/B;IAAD,kBAAC;CAzDD,AAyDC,CAzDwC,EAAE,CAAC,SAAS,GAyDpD;kBAzDoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class PopDlgPanel extends cc.Component {\n\n    @property(cc.Label)\n    title: cc.Label = null;\n\n    @property(cc.Button)\n    btnClose: cc.Button = null;\n\n    @property(cc.Node)\n    separatorLine: cc.Node = null;\n\n    public setTiTle(title: string) {\n        this.title.string = title;\n    }\n\n    public setBtnHandler(handle: cc.Component.EventHandler[]) {\n        this.btnClose.node.active = handle.length > 0 ? true : false;\n        this.btnClose.clickEvents = handle;\n    }\n\n    public separatorVisible(v: boolean) {\n        if (this.separatorLine) {\n            this.separatorLine.active = v;\n        }\n    }\n\n    public separatorWidgetBottom(v: number) {\n        if (!this.separatorLine) {\n            return;\n        }\n        let comp = this.separatorLine.getComponent(cc.Widget);\n        if (comp) {\n            comp.bottom = v;\n        }\n        if (!CC_EDITOR) {\n            comp.updateAlignment();\n        }\n    }\n\n    public getSeparatorWidgetBottom() {\n        let bottom = 0;\n        if (this.separatorLine) {\n            let comp = this.separatorLine.getComponent(cc.Widget);\n            bottom = comp.bottom;\n        }\n        return bottom;\n    }\n\n    /** 快捷设置关闭事件 */\n    public quickSetCloseHnadler(ower: cc.Component, handlerName: string = 'closeView') {\n        let handler = new cc.Component.EventHandler();\n        handler.target = ower.node;\n        handler.component = c2f.utils.view.getComponentName(ower);\n        handler.handler = handlerName;\n        handler.customEventData = \"\";\n        this.setBtnHandler([handler]);\n    }\n}"]}