{"version":3,"sources":["assets/c2f-framework/hack/SpriteHack.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,CAAC,SAAS,EAAE;IACZ,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE;QAC5C,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC;QAEjD,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAgB,GAAW,EAAE,KAAe;;;;;;4BAChF,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;4BACT,KAAA,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,CAAA;oCAAnC,wBAAmC;4BAAI,qBAAM,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,EAAA;;kCAA1C,SAA0C;;;4BAA1F,MAAM,KAAoF;4BAC9F,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gCACpD,sBAAO;6BACV;4BACD,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,EAAE;gCAC7B,KAAK,IAAI,KAAK,EAAE,CAAC;gCACjB,sBAAO;6BACV;4BACD,MAAM,CAAC,MAAM,EAAE,CAAC;4BAChB,IAAI,IAAI,CAAC,YAAY,EAAE;gCACnB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;6BAC9B;4BACD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;4BAC3B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;4BAC1B,KAAK,IAAI,KAAK,EAAE,CAAC;;;;;SACpB,CAAC;QAEF,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAgB,GAAW,EAAE,OAAe,EAAE,KAAe;;;;;;4BACjG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;4BACJ,KAAA,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,CAAA;oCAAnC,wBAAmC;4BAAI,qBAAM,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC,EAAA;;kCAA1C,SAA0C;;;4BAA/F,MAAM,KAAyF;4BACnG,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gCACpD,sBAAO;6BACV;4BACG,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;4BAC3C,IAAI,CAAC,KAAK,EAAE;gCACR,sBAAO;6BACV;4BACD,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;gCAC5B,KAAK,IAAI,KAAK,EAAE,CAAC;gCACjB,sBAAO;6BACV;4BACD,MAAM,CAAC,MAAM,EAAE,CAAC;4BAChB,IAAI,IAAI,CAAC,YAAY,EAAE;gCACnB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;6BAC9B;4BACD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;4BAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;4BACzB,KAAK,IAAI,KAAK,EAAE,CAAC;;;;;SACpB,CAAC;QAGF,YAAY;QACZ,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QACpE,YAAY;QACZ,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG;YAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC5B;YACD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,CAAC,eAAe;gBAAE,IAAI,CAAC,eAAe,EAAE,CAAC;QACrD,CAAC,CAAC;KACL;CACJ","file":"","sourceRoot":"/","sourcesContent":["if (!CC_EDITOR) {\n    if (!cc.Sprite.prototype[\"__$CCSpriteHack$__\"]) {\n        cc.Sprite.prototype[\"__$CCSpriteHack$__\"] = true;\n\n        cc.Sprite.prototype.changeSpriteFrame = async function (url: string, endCb: Function) {\n            this.dynamicUrl = url;\n            let result = c2f.res.getRes(url, cc.SpriteFrame) || await c2f.res.loadOne(url, cc.SpriteFrame);\n            if (this.dynamicUrl != url || !result || !this.isValid) {\n                return;\n            }\n            if (this.spriteFrame === result) {\n                endCb && endCb();\n                return;\n            }\n            result.addRef();\n            if (this.dynamicAsset) {\n                this.dynamicAsset.decRef();\n            }\n            this.dynamicAsset = result;\n            this.spriteFrame = result;\n            endCb && endCb();\n        };\n\n        cc.Sprite.prototype.changeSFWithAtlas = async function (url: string, subFile: string, endCb: Function) {\n            this.dynamicUrl = url;\n            let result: any = c2f.res.getRes(url, cc.SpriteAtlas) || await c2f.res.loadOne(url, cc.SpriteAtlas);\n            if (this.dynamicUrl != url || !result || !this.isValid) {\n                return;\n            }\n            let frame = result.getSpriteFrame(subFile);\n            if (!frame) {\n                return;\n            }\n            if (this.spriteFrame === frame) {\n                endCb && endCb();\n                return;\n            }\n            result.addRef();\n            if (this.dynamicAsset) {\n                this.dynamicAsset.decRef();\n            }\n            this.dynamicAsset = result;\n            this.spriteFrame = frame;\n            endCb && endCb();\n        };\n\n\n        //@ts-ignore\n        cc.Sprite.prototype.engineOnDestory = cc.Sprite.prototype.onDestroy;\n        //@ts-ignore\n        cc.Sprite.prototype.onDestroy = function () {\n            if (this.dynamicAsset) {\n                this.dynamicAsset.decRef(true);\n                this.dynamicAsset = null;\n            }\n            this.dynamicUrl = '';\n            if (this.engineOnDestory) this.engineOnDestory();\n        };\n    }\n}\n\ndeclare module cc {\n    interface Sprite {\n        dynamicAsset: any;\n        dynamicUrl: string;\n        changeSpriteFrame: (url: string) => void;\n        engineOnDestory: () => void;\n    }\n}\n\nexport { };"]}