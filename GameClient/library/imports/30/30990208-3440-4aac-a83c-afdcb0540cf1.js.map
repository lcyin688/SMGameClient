{"version":3,"sources":["assets/c2f-framework/component/common/LinkPrefab.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, executeInEditMode, property, menu } = cc._decorator;\n\n// cc.Flags.DontSave          // 当前节点不会被保存到prefab文件里\n// cc.Flags.LockedInEditor    // 当前节点及子节点在编辑器里不会被点击到\n// cc.Flags.HideInHierarchy   // 当前节点及子节点在编辑器里不显示\n\n@ccclass\n@menu('c2f/common/LinkPrefab')\n@executeInEditMode\nexport default class LinkPrefab extends cc.Component {\n\n    private _realNode: cc.Node = null\n\n    @property\n    private _prefab: cc.Prefab = null\n    @property({ type: cc.Prefab, visible: true, displayName: \"预制体\" })\n    set prefab(value: cc.Prefab) {\n        this.onPrefabChanged(value)\n    }\n    get prefab(): cc.Prefab {\n        return this._prefab\n    }\n\n    protected onLoad(): void {\n        this.checkRealNode();\n    }\n\n    protected onDestroy(): void {\n        this._realNode = null;\n        this._prefab = null;\n    }\n\n    private resetFlag(node: cc.Node) {\n        if (CC_EDITOR) {\n            //@ts-ignore\n            node[\"_objFlags\"] |= cc.Object.Flags.DontSave;\n            //@ts-ignore\n            node[\"_objFlags\"] |= cc.Object.Flags.LockedInEditor;\n            //@ts-ignore\n            node[\"_objFlags\"] |= cc.Object.Flags.HideInHierarchy;\n        }\n    }\n\n    private resetRealNode() {\n        if (!this._prefab) {\n            return;\n        }\n        let find = false;\n\n        if (this.node.children.length > 0) {\n            for (let one of this.node.children) {\n                if (one.name == this._prefab.name) {\n                    find = true;\n                    this._realNode = one;\n                }\n            }\n        }\n        if (!find) {\n            let newNode = null;\n            if (CC_EDITOR) {\n                newNode = cc.instantiate(this._prefab);\n            } else {\n                newNode = c2f.utils.view.instantiateMVCPrefab(this._prefab);\n            }\n            if (!newNode) {\n                return;\n            }\n            this.resetFlag(newNode);\n            newNode.setPosition(0, 0);\n            this.node.insertChild(newNode, -1) //添加到最底层\n            this._realNode = newNode;\n            this.resetSize();\n        }\n    }\n\n    private resetSize() {\n        if (this.node.width == 0 && this.node.height == 0) {\n            this.node.setContentSize(this._realNode.width, this._realNode.height);\n        }\n        let widget = this._realNode.getComponent(cc.Widget);\n        if (widget) {\n            widget.enabled = true;\n        }\n    }\n\n    private onPrefabChanged(newPfab: cc.Prefab) {\n        if (this._realNode) {\n            this._realNode.destroy();\n            this._realNode = null;\n        }\n        this._prefab = newPfab;\n        this.resetRealNode();\n    }\n\n    private checkRealNode() {\n        if (!this._realNode) {\n            this.resetRealNode();\n        }\n    }\n\n    public getPrefabNode(): cc.Node {\n        if (!this._realNode) {\n            this.resetRealNode();\n        }\n        return this._realNode\n    }\n\n    public getComponentEx<T extends cc.Component>(type: { prototype: T }): T {\n        this.checkRealNode();\n        let prefabNode = this._realNode\n        if (!prefabNode || !cc.isValid(prefabNode)) {\n            return null;\n        }\n        return prefabNode.getComponent(type);\n    }\n\n    public getRealComponent(name: string) {\n        this.checkRealNode();\n        let prefabNode = this._realNode\n        return prefabNode ? prefabNode.getComponent(name) : null;\n    }\n}"]}