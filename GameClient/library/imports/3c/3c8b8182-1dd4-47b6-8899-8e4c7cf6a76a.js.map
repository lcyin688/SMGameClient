{"version":3,"sources":["assets/c2f-framework/define/C2FUIDef.ts"],"names":[],"mappings":";;;;;;;AAyDA,gCAAgC;AAChC;IAoBI;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IACL,iBAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,gCAAU;AAgCvB,YAAY;AACZ,IAAY,SAgBX;AAhBD,WAAY,SAAS;IACjB,UAAU;IACV,+BAAkB,CAAA;IAClB,cAAc;IACd,2BAAc,CAAA;IACd,cAAc;IACd,iCAAoB,CAAA;IACpB,YAAY;IACZ,mCAAsB,CAAA;IACtB,yBAAyB;IACzB,mCAAsB,CAAA;IACtB,yBAAyB;IACzB,mCAAsB,CAAA;IACtB,YAAY;IACZ,iCAAoB,CAAA;AAExB,CAAC,EAhBW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAgBpB","file":"","sourceRoot":"/","sourcesContent":["/*** 界面回调参数对象定义 */\nexport interface UICallbacks {\n    /**\n     * 节点添加到层级以后的回调\n     * @param node   当前界面节点\n     * @param params 外部传递参数\n     */\n    onUIAdded?: (node: cc.Node, params: any) => void,\n\n    /**\n     * 窗口节点 remove 时回调\n     * @param node   当前界面节点\n     * @param params 外部传递参数\n     */\n    onUIRemoved?: (node: cc.Node | null, params: any) => void,\n\n    /** \n     * 注意：调用`delete`或`$delete`才会触发此回调，如果`this.node.destroy()`，该回调将直接忽略。\n     * \n     * 如果指定onUIBeforeRemove，则next必须调用，否则节点不会被正常删除。\n     * \n     * 比如希望节点做一个FadeOut然后删除，则可以在`onUIBeforeRemove`当中播放action动画，动画结束后调用next\n     * @param node   当前界面节点\n     * @param next   回调方法\n     */\n    onUIBeforeRemove?: (node: cc.Node, next: Function) => void\n\n    /**\n     * 窗口节点 destroy 时回调\n     * @param node   当前界面节点\n     * @param params 外部传递参数\n     */\n    onUIDestroy?: (node: cc.Node | null, params: any) => void,\n\n    /**\n     * 弹窗入场通用动画，可自定义替换\n     * @param node   当前界面节点\n     * @param params 外部传递参数\n     */\n    inAnima?: (node: cc.Node, params: any) => void,\n    /** \n     * 弹窗关闭通用动画，可自定义替换\n     * @param node   当前界面节点\n     * @param next   回调方法\n     */\n    outAnima?: (node: cc.Node, next: Function) => void\n}\n\n/** 弹框层回调对象定义 */\nexport interface PopViewParams extends UICallbacks {\n    /** 是否触摸背景关闭弹窗 */\n    touchClose?: boolean,\n\n    /** 控制暗色背景的透明度 默认为190*/\n    opacity?: number;\n}\n\n/** 本类型仅供gui模块内部使用，请勿在功能逻辑中使用 */\nexport class ViewParams {\n    /** 界面唯一标识 */\n    uuid: string;\n    /** 传递给打开界面的参数 */\n    params: any;\n    /** 窗口事件 */\n    callbacks: UICallbacks;\n    /** 是否在使用状态 */\n    valid: boolean;\n    /** 界面根节点 */\n    node: cc.Node;\n\n    /** 预制路径 */\n    prefabPath: string;\n    /** 包名 */\n    bundle: string;\n\n    /** 窗口配置 */\n    uiCfg: UIConfig;\n\n    constructor() {\n        this.uuid = null;\n        this.prefabPath = null;\n        this.params = null;\n        this.callbacks = null;\n        this.valid = true;\n        this.node = null;\n        this.bundle = null;\n        this.uiCfg = null;\n    }\n}\n\n/** 界面层类型 */\nexport enum LayerType {\n    /** 游戏层 */\n    Game = \"LayerGame\",\n    /** 全屏类弹出界面 */\n    UI = \"LayerUI\",\n    /** 窗口类弹出界面 */\n    PopUp = \"LayerPopUp\",\n    /** 模式窗口层 */\n    Dialog = \"LayerDialog\",\n    /** 系统触发模式窗口层 eg.断网提示等 */\n    System = \"LayerSystem\",\n    /** 滚动消息提示层 eg.走马灯,冒泡提示*/\n    Notify = \"LayerNotify\",\n    /** 新手引导层 */\n    Guide = \"LayerGuide\",\n\n}\n\nexport interface UIConfig {\n    /** 远程包名 */\n    bundle?: string;\n    /** 窗口层级 */\n    layer: LayerType;\n    /** 预制资源相对路径 */\n    prefab: string;\n    /** 显示顶部信息 */\n    showTop?: boolean;\n    /** 无模糊背景*/\n    noBlurScn?: boolean;\n}\n\nexport type ViewConfig = { [key: number]: UIConfig };"]}