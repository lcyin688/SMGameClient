{"version":3,"sources":["assets/c2f-framework/mvvm/VMEvent.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import VMBase from './VMBase';\n\n//todo\n\n// +普通 label 更新数据的情况,label.string = xxx;\n// +frameIndex 插件，通过number 数值设置 BhvFrameIndex 来切换当前贴图\n// +spriteFrame 直接替换贴图的情况 , \n//  读取本地路径 data.spriteFrame = $res:/pic/com1\n//  读取网页路径 data.spriteFrame = $url:http:xxxxxxxxxx.png\n// +特殊条件控制 \n\n// 比较条件:,如果传入值 > /< />= /<= /== 某值时，执行的action类型\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n// enum WatchMode {\n//     ccLabel,\n//     ccRichText,\n//     ccSlider,\n//     ccProgressBar,\n// }\n\nenum FILTER_MODE {\n    \"none\",\n    \"==\", //正常计算，比较 等于\n    \"!=\", //正常计算，比较 不等于\n    \">\",  //正常计算，比较>\n    \">=\", //正常计算，比较>=\n    \"<\",  //正常计算，比较<\n    \"<=\", // 正常计算，比较>=\n}\n\n/**\n *  [VM-Event]\n * 提供  ViewModel 的相关基础功能,\n * 如果值发生变化将会调用对应的函数方法\n */\n@ccclass\n@executeInEditMode\n@menu('ModelViewer/VM-EventCall(调用函数)')\nexport default class VMEvent extends VMBase {\n\n    @property({\n        tooltip: '使用模板模式，可以使用多路径监听'\n    })\n    public templateMode: boolean = false;\n\n    @property({\n        tooltip: '监听获取值的路径',\n        visible: function () { return this.templateMode === false }\n    })\n    watchPath: string = \"\";\n\n    @property({\n        tooltip: '触发一次后会自动关闭该事件'\n    })\n    triggerOnce: boolean = false;\n\n    @property({\n        tooltip: '监听获取值的多条路径,这些值的改变都会通过这个函数回调,请使用 pathArr 区分获取的值 ',\n        type: [cc.String],\n        visible: function () { return this.templateMode === true }\n    })\n    protected watchPathArr: string[] = [];\n\n    @property({\n        tooltip: '过滤模式，会根据条件过滤掉时间的触发',\n        type: cc.Enum(FILTER_MODE)\n    })\n    public filterMode: FILTER_MODE = FILTER_MODE.none;\n\n    @property({\n        visible: function () { return this.filterMode !== FILTER_MODE.none }\n    })\n    public compareValue: string = '';\n\n    @property([cc.Component.EventHandler])\n    changeEvents: cc.Component.EventHandler[] = [];\n\n    onValueInit() {\n    }\n\n    onValueChanged(newVar: any, oldVar: any, pathArr: any[]) {\n        let res = this.conditionCheck(newVar, this.compareValue);\n        if (!res) return;\n\n        if (Array.isArray(this.changeEvents)) {\n            this.changeEvents.forEach(v => {\n                v.emit([newVar, oldVar, pathArr]);\n            })\n        }\n\n        //激活一次后，自动关闭组件\n        if (this.triggerOnce === true) {\n            this.enabled = false;\n        }\n    }\n\n    /**条件检查 */\n    private conditionCheck(a, b): boolean {\n        let cod = FILTER_MODE;\n\n        switch (this.filterMode) {\n            case cod.none:\n                return true;\n            case cod[\"==\"]:\n                if (a == b) return true;\n                break;\n            case cod[\"!=\"]:\n                if (a != b) return true;\n                break;\n            case cod[\"<\"]:\n                if (a < b) return true;\n                break;\n            case cod[\">\"]:\n                if (a > b) return true;\n                break;\n            case cod[\">=\"]:\n                if (a >= b) return true;\n                break;\n            case cod[\"<\"]:\n                if (a < b) return true;\n                break;\n            case cod[\"<=\"]:\n                if (a <= b) return true;\n                break;\n\n            default:\n                break;\n        }\n\n        return false;\n    }\n}\n\n"]}