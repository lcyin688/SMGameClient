{"version":3,"sources":["assets/c2f-framework/mvvm/VMCustom.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA8B;AAExB,IAAA,KAAiD,EAAE,CAAC,UAAU,EAA5D,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,iBAAiB,uBAAA,EAAE,IAAI,UAAkB,CAAC;AAErE,iCAAiC;AACjC,IAAM,gBAAgB,GAAG;IACrB,CAAC,eAAe,EAAE,OAAO,EAAE,KAAK,CAAC;IACjC,CAAC,gBAAgB,EAAE,OAAO,EAAE,KAAK,CAAC;IAClC,CAAC,eAAe,EAAE,aAAa,EAAE,KAAK,CAAC;IACvC,sBAAsB;IACtB,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC;IAC7B,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC;IAChC,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,CAAC;IAC9B,CAAC,WAAW,EAAE,UAAU,EAAE,IAAI,CAAC;IAC/B,CAAC,gBAAgB,EAAE,UAAU,EAAE,KAAK,CAAC;IACrC,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC;CACnC,CAAC;AAEF;;;GAGG;AAIH;IAAsC,4BAAM;IAA5C;QAAA,qEA0IC;QAtIG,gBAAU,GAAY,KAAK,CAAC;QAG5B,eAAS,GAAW,EAAE,CAAC;QAKvB,mBAAa,GAAW,EAAE,CAAC;QAK3B,uBAAiB,GAAW,EAAE,CAAC;QAQ/B,iBAAW,GAAW,GAAG,CAAC;QAE1B,KAAK;QACG,YAAM,GAAG,CAAC,CAAC;QACnB,aAAa;QACL,qBAAe,GAAQ,IAAI,CAAC;QACpC,gBAAgB;QACR,wBAAkB,GAAY,KAAK,CAAC;QAC5C,UAAU;QACF,eAAS,GAAQ,IAAI,CAAC;;IAwGlC,CAAC;IAtGG,wBAAwB;IACxB,yBAAM,GAAN;QACI,iBAAM,MAAM,WAAE,CAAC;QACf,iBAAiB;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAA,OAAO;QACnC,IAAI,CAAC,SAAS,EAAE;YACZ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClE,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;IACL,CAAC;IAED,4BAAS,GAAT;QACI,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAED,wBAAK,GAAL;QACI,qBAAqB;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,qBAAqB;IACrB,uCAAoB,GAApB;QACI,IAAI,SAAS,EAAE;YACX,IAAI,UAAU,GAAG,gBAAgB,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAW,CAAC,CAAC;gBACvD,IAAI,IAAI,EAAE;oBACN,IAAI,IAAI,CAAC,aAAa,IAAI,EAAE;wBAAE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAW,CAAC;oBACvE,IAAI,IAAI,CAAC,iBAAiB,IAAI,EAAE;wBAAE,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,CAAC,CAAW,CAAC;oBAC/E,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI;wBAAE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAY,CAAC;oBAE/D,MAAM;iBACT;aACJ;SACJ;IACL,CAAC;IAED,sCAAmB,GAAnB;QACI,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAAE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAAC,OAAO;SAAE;QACnE,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAAE,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAAC,OAAO;SAAE;QACzE,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAAC,OAAO;SAAE;QACzG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,oCAAiB,GAAjB;QACI,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC;IAED,oCAAiB,GAAjB,UAAkB,KAAU;QACxB,4BAA4B;QAC5B,IAAI,IAAI,CAAC,aAAa,IAAI,WAAW,EAAE;YACnC,IAAI,KAAK,IAAI,IAAI,EAAE;gBACf,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;aAC7C;YACD,IAAI,KAAK,IAAI,KAAK,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;aAC/C;SACJ;aAAM;YACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;SACxD;IACL,CAAC;IAED,aAAa;IACb,8BAAW,GAAX;QACI,IAAI,SAAS;YAAE,OAAO,CAAC,WAAW;QAClC,MAAM;QACN,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,2BAA2B;IAC3B,oCAAiB,GAAjB,UAAkB,QAAQ,EAAE,QAAQ;QAChC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,kBAAkB;IAClB,iCAAc,GAAd,UAAe,CAAC,EAAE,CAAC,EAAE,OAAiB;QAClC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,yBAAM,GAAN,UAAO,EAAE;QACL,mBAAmB;QACnB,IAAI,SAAS,IAAI,IAAI;YAAE,OAAO;QAC9B,2DAA2D;QAC3D,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAC7B,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,KAAK;YAAE,OAAO;QAElF,QAAQ;QACR,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW;YAAE,OAAO;QAC3C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAExC,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ;YAAE,OAAO;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAE/C,CAAC;IArID;QAHC,QAAQ,CAAC;YACN,OAAO,EAAE,+BAA+B;SAC3C,CAAC;gDAC0B;IAG5B;QADC,QAAQ;+CACc;IAKvB;QAHC,QAAQ,CAAC;YACN,OAAO,EAAE,SAAS;SACrB,CAAC;mDACyB;IAK3B;QAHC,QAAQ,CAAC;YACN,OAAO,EAAE,YAAY;SACxB,CAAC;uDAC6B;IAQ/B;QANC,QAAQ,CAAC;YACN,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACb,OAAO,EAAE,cAAc,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI,CAAA,CAAC,CAAC;SAC3D,CAAC;iDACwB;IAzBT,QAAQ;QAH5B,OAAO;QACP,iBAAiB;QACjB,IAAI,CAAC,+BAA+B,CAAC;OACjB,QAAQ,CA0I5B;IAAD,eAAC;CA1ID,AA0IC,CA1IqC,gBAAM,GA0I3C;kBA1IoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import VMBase from './VMBase';\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n/**自动检查识别的数组,你可以准备自己的组件放上去自动识别 */\nconst COMP_ARRAY_CHECK = [\n    ['BhvFrameIndex', 'index', false],\n    ['BhvGroupToggle', 'index', false],\n    ['BhvRollNumber', 'targetValue', false],\n    //组件名、默认属性、controller值\n    ['cc.Label', 'string', false],\n    ['cc.RichText', 'string', false],\n    ['cc.EditBox', 'string', true],\n    ['cc.Slider', 'progress', true],\n    ['cc.ProgressBar', 'progress', false],\n    ['cc.Toggle', 'isChecked', true]\n];\n\n/**\n * [VM-Custom]\n * 自定义数值监听, 可以快速对该节点上任意一个组件上的属性进行双向绑定\n */\n@ccclass\n@executeInEditMode\n@menu('ModelViewer/VM-Custom (自定义VM)')\nexport default class VMCustom extends VMBase {\n    @property({\n        tooltip: '激活controller,以开启双向绑定，否则只能接收消息'\n    })\n    controller: boolean = false;\n\n    @property\n    watchPath: string = \"\";\n\n    @property({\n        tooltip: '绑定组件的名字'\n    })\n    componentName: string = \"\";\n\n    @property({\n        tooltip: '组件上需要监听的属性'\n    })\n    componentProperty: string = \"\";\n\n    @property({\n        tooltip: '刷新间隔频率(只影响脏检查的频率)',\n        step: 0.01,\n        range: [0, 1],\n        visible: function () { return this.controller === true }\n    })\n    refreshRate: number = 0.1;\n\n    //计时器\n    private _timer = 0;\n    /**监听的组件对象 */\n    private _watchComponent: any = null;\n    /**是否能监听组件的数据 */\n    private _canWatchComponent: boolean = false;\n    /**检查的值 */\n    private _oldValue: any = null;\n\n    // LIFE-CYCLE CALLBACKS:\n    onLoad() {\n        super.onLoad();\n        //只在运行时检查组件是否缺失可用\n        this.checkEditorComponent();//编辑器检查\n        if (!CC_EDITOR) {\n            this._watchComponent = this.node.getComponent(this.componentName);\n            this.checkComponentState();\n        }\n    }\n\n    onRestore() {\n        this.checkEditorComponent();\n    }\n\n    start() {\n        //从 watch 的路径中获取一个初始值\n        this.onValueInit();\n    }\n\n    //挂在对应节点后，自动获取组件属性和名字\n    checkEditorComponent() {\n        if (CC_EDITOR) {\n            let checkArray = COMP_ARRAY_CHECK;\n            this.controller = false;\n            for (let i = 0; i < checkArray.length; i++) {\n                const params = checkArray[i];\n                let comp = this.node.getComponent(params[0] as string);\n                if (comp) {\n                    if (this.componentName == '') this.componentName = params[0] as string;\n                    if (this.componentProperty == '') this.componentProperty = params[1] as string;\n                    if (params[2] !== null) this.controller = params[2] as boolean;\n\n                    break;\n                }\n            }\n        }\n    }\n\n    checkComponentState() {\n        this._canWatchComponent = false;\n        if (!this._watchComponent) { console.error('未设置需要监听的组件'); return; }\n        if (!this.componentProperty) { console.error('未设置需要监听的组件 的属性'); return; }\n        if (this.componentProperty in this._watchComponent === false) { console.error('需要监听的组件的属性不存在'); return; }\n        this._canWatchComponent = true;\n    }\n\n    getComponentValue() {\n        return this._watchComponent[this.componentProperty];\n    }\n\n    setComponentValue(value: any) {\n        //如果遇到cc.Toggle 组件就调用上面的方法解决\n        if (this.componentName == \"cc.Toggle\") {\n            if (value == true) {\n                this.node.getComponent(cc.Toggle).check();\n            }\n            if (value == false) {\n                this.node.getComponent(cc.Toggle).uncheck();\n            }\n        } else {\n            this._watchComponent[this.componentProperty] = value;\n        }\n    }\n\n    /**初始化获取数据 */\n    onValueInit() {\n        if (CC_EDITOR) return; //编辑器模式不初始化\n        //更新信息\n        this.setComponentValue(this.VM.getValue(this.watchPath));\n    }\n\n    /**[可重写]组件的值发生变化后，触发更新此值 */\n    onValueController(newValue, oldValue) {\n        this.VM.setValue(this.watchPath, newValue);\n    }\n\n    /**[可重写]初始化改变数据 */\n    onValueChanged(n, o, pathArr: string[]) {\n        this.setComponentValue(n);\n    }\n\n    update(dt) {\n        //脏检查（组件是否存在，是否被激活）\n        if (CC_EDITOR == true) return;\n        //if (this.templateMode == true) return; //todo 模板模式下不能计算  \n        if (!this.controller) return;\n        if (!this._canWatchComponent || this._watchComponent['enabled'] === false) return;\n\n        //刷新频率检查\n        this._timer += dt;\n        if (this._timer < this.refreshRate) return;\n        this._timer = 0;\n\n        let oldValue = this._oldValue;\n        let newValue = this.getComponentValue();\n\n        if (this._oldValue === newValue) return;\n        this._oldValue = this.getComponentValue();\n        this.onValueController(newValue, oldValue);\n\n    }\n}\n"]}