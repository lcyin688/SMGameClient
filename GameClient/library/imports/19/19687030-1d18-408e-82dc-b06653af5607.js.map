{"version":3,"sources":["assets/c2f-framework/component/ui/button/ButtonChildGray.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ButtonHackEvent, ButtonState } from \"../../../hack/ButtonHack\";\n\nconst { ccclass, property, menu, requireComponent, executeInEditMode } = cc._decorator;\n\n/**\n * 根据button组件过渡状态，置灰子节点\n */\n@ccclass\n@executeInEditMode\n@requireComponent(cc.Button)\n@menu(\"c2f/UI/ButtonChildGray\")\nexport default class ButtonChildGray extends cc.Component {\n\n    @property({ type: cc.Node, tooltip: CC_DEV && \"需要同步置灰的关联节点\" }) public relatedNodes: cc.Node[] = [];\n    @property(cc.Material) public normalMaterial: cc.Material = null;\n    @property(cc.Material) public grayMaterial: cc.Material = null;\n\n    protected onLoad(): void {\n        this.node.on(ButtonHackEvent.STATE_CHANGE, this.onStateChange, this);\n    }\n\n    private onStateChange(state: ButtonState): void {\n        if (state === ButtonState.DISABLED) {\n            if (!this.grayMaterial) {\n                this.grayMaterial = cc.Material.getBuiltinMaterial(\"2d-gray-sprite\");\n            }\n            let cb = (n: cc.Node): void => {\n                let rc = n.getComponent(cc.RenderComponent);\n                if (rc && (rc instanceof cc.Sprite || rc instanceof cc.Label)) {\n                    rc.setMaterial(0, this.grayMaterial);\n                }\n            };\n            c2f.utils.view.nodeRecursive(this.node.children, cb);\n            c2f.utils.view.nodeRecursive(this.relatedNodes, cb);\n        } else {\n            if (!this.normalMaterial) {\n                this.normalMaterial = cc.Material.getBuiltinMaterial(\"2d-sprite\");\n            }\n            let cb = (n: cc.Node): void => {\n                let rc = n.getComponent(cc.RenderComponent);\n                if (rc && (rc instanceof cc.Sprite || rc instanceof cc.Label)) {\n                    rc.setMaterial(0, this.normalMaterial);\n                }\n            };\n            c2f.utils.view.nodeRecursive(this.node.children, cb);\n            c2f.utils.view.nodeRecursive(this.relatedNodes, cb);\n        }\n    }\n}\n"]}