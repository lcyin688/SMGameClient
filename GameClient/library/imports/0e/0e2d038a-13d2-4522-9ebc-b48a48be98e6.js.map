{"version":3,"sources":["assets/c2f-framework/utils/ViewUtil.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/** 显示对象工具 */\nclass ViewUtil {\n    /**\n     * 把Node当前的节点树结构根据Node命名转成一个js对象,重名的组件会覆盖，\n     * Node的name首字符为'_'加入列表，其他不加\n     * @param parent 被遍历的Node组件\n     * @param obj    绑定的js对象 (可选)\n     */\n    static nodeTreeInfoLite(parent: cc.Node, obj?: Map<string, cc.Node>): Map<string, cc.Node> | null {\n        let map: Map<string, cc.Node> = obj || new Map();\n        let items = parent.children;\n        for (let i = 0; i < items.length; i++) {\n            let one = items[i];\n            let name = one.name.trim();\n            //if (name.startsWith('_') && name.endsWith('_')) {\n            map.set(name, one);\n            //}\n            ViewUtil.nodeTreeInfoLite(one, map);\n        }\n        return map;\n    }\n\n    /**\n     * 正则搜索节点名字,符合条件的节点将会返回\n     * @param reg     正则表达式\n     * @param parent  要搜索的父节点\n     * @param nodes   返回的数组（可选）\n     */\n    static findNodes(reg: RegExp, parent: cc.Node, nodes?: Array<cc.Node>): Array<cc.Node> {\n        let ns: Array<cc.Node> = nodes || [];\n        let items = parent.children;\n        for (let i = 0; i < items.length; i++) {\n            let name: string = items[i].name;\n            if (reg.test(name)) {\n                ns.push(items[i]);\n            }\n            ViewUtil.findNodes(reg, items[i], ns);\n        }\n        return ns;\n    };\n\n    /**\n     * 获取组件名称\n     * @param target 组件对象\n     */\n    static getComponentName(target: cc.Component) {\n        const regex = /<([^>]*)>/g; // 正则表达式匹配尖括号内的字符串  \n        const matches = target.name.match(regex); // 获取匹配结果  \n        const result = matches ? matches.map(match => match.replace(/<|>/g, '')) : [''];\n        const name = result[0];\n        return name;\n    }\n\n    /**\n     * 节点之间坐标互转\n     * @param a         A节点\n     * @param b         B节点\n     * @param aPos      A节点空间中的相对位置\n     */\n    static calculateASpaceToBSpacePos(a: cc.Node, b: cc.Node, aPos: cc.Vec3): cc.Vec3 {\n        let world: cc.Vec3 = a.convertToWorldSpaceAR(aPos);\n        let space: cc.Vec3 = b.convertToNodeSpaceAR(world);\n        return space;\n    }\n\n    /**\n     * 屏幕转空间坐标\n     * @param event 触摸事件\n     * @param space 转到此节点的坐标空间\n     */\n    static calculateScreenPosToSpacePos(event: cc.Event.EventTouch, space: cc.Node): cc.Vec3 {\n        let uil = event.getLocation();\n        let worldPos: cc.Vec3 = cc.v3(uil.x, uil.y);\n        let mapPos: cc.Vec3 = space.convertToNodeSpaceAR(worldPos);\n        return mapPos;\n    }\n\n    /**\n     * 显示对象等比缩放\n     * @param targetWidth       目标宽\n     * @param targetHeight      目标高\n     * @param defaultWidth      默认宽\n     * @param defaultHeight     默认高\n     */\n    static uniformScale(targetWidth: number, targetHeight: number, defaultWidth: number, defaultHeight: number) {\n        let widthRatio = defaultWidth / targetWidth;\n        let heightRatio = defaultHeight / targetHeight;\n        let ratio = widthRatio < heightRatio ? widthRatio : heightRatio;\n        let size = new cc.Size(Math.floor(targetWidth * ratio), Math.floor(targetHeight * ratio));\n        return size;\n    }\n\n    /**\n     * 检测节点是否在屏幕之内\n     * @param node 目标节点\n     */\n    static nodeIsInView(node: cc.Node): boolean {\n        let inView = true;\n\n        let szVisible = cc.view.getVisibleSize();\n        let posW = node.convertToWorldSpaceAR(cc.Vec3.ZERO);\n        if (posW.x <= 0) {\n            let rightX = posW.x + node.width * (1 - node.anchorX);\n            inView = rightX < 0 ? false : true;\n        } else {\n            let leftX = posW.x - node.width * node.anchorX;\n            inView = leftX > szVisible.width ? false : true;\n        }\n        if (inView) {\n            if (posW.y <= 0) {\n                let topY = posW.y + node.height * (1 - node.anchorY);\n                inView = topY < 0 ? false : true;\n            } else {\n                let bottomY = posW.y - node.height * node.anchorY;\n                inView = bottomY > szVisible.height ? false : true;\n            }\n        }\n        return inView;\n    }\n\n    /**\n     * 检测节点是否在屏幕之内\n     * @param node 目标节点\n     */\n    static nodeFullInView(node: cc.Node): boolean {\n        let fullInView = true;\n\n        let szVisible = cc.view.getVisibleSize();\n        let posW = node.convertToWorldSpaceAR(cc.Vec3.ZERO);\n        //console.log('pos in world:', posW, node);\n        if (posW.x <= 0) {\n            let leftX = posW.x - node.width * node.anchorX;\n            fullInView = leftX >= 0 ? true : false;\n        } else {\n            let rightX = posW.x + node.width * (1 - node.anchorX);\n            fullInView = rightX <= szVisible.width ? true : false;\n        }\n        if (fullInView) {\n            if (posW.y <= 0) {\n                let bottomY = posW.y - node.height * node.anchorY;\n                fullInView = bottomY >= 0 ? true : false;\n            } else {\n                let topY = posW.y + node.height * (1 - node.anchorY);\n                fullInView = topY <= szVisible.height ? true : false;\n            }\n        }\n        return fullInView;\n    }\n\n    /**\n     * 检测节点在Y轴方向是否已在屏幕之外\n     * @param node 目标节点\n     */\n    static nodeIsOutByHeight(node: cc.Node): boolean {\n        let outView = false;\n        let szVisible = cc.view.getVisibleSize();\n        let posW = node.convertToWorldSpaceAR(cc.Vec3.ZERO);\n        if (posW.y <= 0) {\n            let topY = posW.y + node.height * (1 - node.anchorY);\n            outView = topY < 0 ? true : false;\n        } else {\n            let bottomY = posW.y - node.height * node.anchorY;\n            outView = bottomY > szVisible.height ? true : false;\n        }\n        return outView;\n    }\n\n    /**\n     * 检测节点在X轴方向是否已在屏幕之外\n     * @param node 目标节点\n     */\n    static nodeIsOutByWidth(node: cc.Node): boolean {\n        let outView = false;\n\n        let szVisible = cc.view.getVisibleSize();\n        let posW = c2f.utils.node.getNodeWorldPosition(node);\n        if (posW.x <= 0) {\n            let rightX = posW.x + node.width * (1 - node.anchorX);\n            outView = rightX < 0 ? true : false;\n        } else {\n            let leftX = posW.x - node.width * node.anchorX;\n            outView = leftX > szVisible.width ? true : false;\n        }\n        return outView;\n    }\n\n    /**\n     * 两节点之间的距离\n     * @param node1 节点1\n     * @param node1 节点2\n     */\n    static getNodeDistance(node1: cc.Node, node2: cc.Node) {\n        let distance = 0;\n        let direction = cc.v3(0, 0, 0)\n        let posW1 = c2f.utils.node.getNodeWorldPosition(node1);\n        let posW2 = c2f.utils.node.getNodeWorldPosition(node2);\n        distance = c2f.utils.vec.distance(posW1, posW2);\n        direction = c2f.utils.vec.direction(posW1, posW2);\n        return { distance, direction };\n    }\n\n    /**\n     * 节点1到节点2连线与x轴方向的夹角\n     * @param node1 节点1\n     * @param node1 节点2\n     */\n    static getTwoNodeAngle(node1: cc.Node, node2: cc.Node) {\n        let posW1 = c2f.utils.node.getNodeWorldPosition(node1);\n        let posW2 = c2f.utils.node.getNodeWorldPosition(node2);\n        let angle: number = c2f.utils.vec.angleEx(posW1, posW2);\n        return angle;\n    }\n\n    /**\n     * 世界坐标点到节点连线与x轴方向的夹角\n     * @param node1 节点1\n     * @param node1 节点2\n     */\n    static getWorldPosToNodeAngle(worldPos: cc.Vec3, node: cc.Node) {\n        let nodePosW = c2f.utils.node.getNodeWorldPosition(node);\n        let centerPos = nodePosW;\n        centerPos.x = nodePosW.x + (0.5 - node.anchorX) * node.width;\n        centerPos.y = nodePosW.y + (0.5 - node.anchorY) * node.height;\n        let angle = c2f.utils.vec.angleEx(worldPos, centerPos);\n        return angle;\n    }\n\n    /**\n     * 节点node在panel下的坐标\n     * @param node 节点1\n     * @param panel 节点2\n     */\n    static getNodeInPanelPos(node: cc.Node, panel: cc.Node, out?: cc.Vec2) {\n        let posL = node.getPosition();\n        let posW = node.parent.convertToWorldSpaceAR(posL);\n        if (out) {\n            panel.parent.convertToNodeSpaceAR(posW, out);\n            return out;\n        } else {\n            let tarPos = panel.parent.convertToNodeSpaceAR(posW);\n            return tarPos;\n        }\n    }\n\n    /**\n     * 从资源缓存中找到预制资源名并创建一个显示对象\n     * @param path 资源路径\n     */\n    static createPrefabNode(path: string): cc.Node {\n        let p: cc.Prefab = c2f.res.get(path, cc.Prefab)!;\n        let n = c2f.res.instantiate(p);\n        return n;\n    }\n\n    /**\n     * 加载预制并创建预制节点\n     * @param path 资源路径\n     */\n    static createPrefabNodeAsync(path: string): Promise<cc.Node> {\n        return new Promise(async (resolve, reject) => {\n            c2f.res.load(path, cc.Prefab, (err: Error | null, content: cc.Prefab) => {\n                if (err) {\n                    console.error(`名为【${path}】的资源加载失败`);\n                    return;\n                }\n                let node = this.createPrefabNode(path);\n                resolve(node);\n            });\n        });\n    }\n\n    /**\n     * 加载预制节点\n     * @param path          资源路径\n     * @param callback      资源加载完成回调\n     */\n    static loadPrefabNode(path: string, callback: Function) {\n        c2f.res.load(path, cc.Prefab, (err: Error | null, content: cc.Prefab) => {\n            if (err) {\n                console.error(`名为【${path}】的资源加载失败`);\n                return;\n            }\n            let node = this.createPrefabNode(path);\n            callback(node);\n        });\n    }\n\n    /**\n     * 添加节点动画\n     * @param path              资源路径\n     * @param node              目标节点\n     * @param onlyOne           是否唯一\n     * @param isDefaultClip     是否播放默认动画剪辑\n     */\n    static addNodeAnimation(path: string, node: cc.Node, onlyOne: boolean = true, isDefaultClip: boolean = false) {\n        if (!node || !node.isValid) {\n            return;\n        }\n        let anim = node.getComponent(cc.Animation);\n        if (anim == null) {\n            anim = node.addComponent(cc.Animation);\n        }\n        let clip = c2f.res.get(path, cc.AnimationClip) as cc.AnimationClip;\n        if (!clip) {\n            return;\n        }\n        if (onlyOne && anim.getAnimationState(clip!.name) && anim.getAnimationState(clip!.name).isPlaying) {\n            return;\n        }\n        if (isDefaultClip) {\n            anim.defaultClip = clip;\n            anim.play();\n            return;\n        }\n\n        // 播放完成后恢复播放默认动画\n        anim.once(cc.Animation.EventType.FINISHED, () => {\n            if (anim!.defaultClip) {\n                anim!.play();\n            }\n        }, this);\n\n        if (anim.getAnimationState(clip!.name)) {\n            anim.play(clip!.name);\n            return\n        }\n        //anim.createaState(clip, clip!.name);\n        anim.play(clip!.name);\n    }\n\n    /**\n    * 给按钮添加监听\n    * @param node 目标节点\n    */\n    static addButtonListen(node: cc.Node, caller: any, func: Function) {\n        let button = node.getComponent(cc.Button);\n        if (button) {\n            node.on('click', func, caller);\n        } else {\n            let path = this.getNodePath(node);\n            cc.warn(\"don't find Button component for node:\", path);\n        }\n    }\n\n    /**\n     * 获得节点路径\n     * @param node 目标节点\n     */\n    static getNodePath(node: cc.Node) {\n        let path = node.name;\n        if (node.parent) {\n            let prePath = this.getNodePath(node.parent);\n            path = prePath + '/' + path;\n        }\n        return path;\n    }\n\n    /**\n     * 移除所有子节点\n     * @param node \n     */\n    static clearChildren(node: cc.Node) {\n        if (node != null && node.children.length > 0) {\n            let childrenArray = node.children;\n            while (childrenArray.length > 0) {\n                let child = childrenArray[0];\n                child.removeFromParent();\n                child.destroy();\n            }\n        }\n    }\n\n    /** 图片置灰 */\n    static setSpriteGray(icon: cc.Sprite, isGray: boolean) {\n        if (isGray) {\n            let matGray = cc.Material.getBuiltinMaterial(\"2d-gray-sprite\");\n            icon.setMaterial(0, matGray);\n        } else {\n            let matDef = cc.Material.getBuiltinMaterial(\"2d-sprite\");\n            icon.setMaterial(0, matDef);\n        }\n    }\n\n    /** 节点置灰 */\n    static setNodeGray(node: cc.Node, isGray: boolean) {\n        let sprite = node.getComponent(cc.Sprite);\n        if (sprite) {\n            this.setSpriteGray(sprite, isGray);\n        }\n        for (let i = 0; i < node.children.length; ++i) {\n            this.setNodeGray(node.children[i], isGray);\n        }\n    }\n\n    //获得该名称的所有子节点\n    static getChildrenByName(node: cc.Node, dstName: string) {\n        let children: cc.Node[] = [];\n        for (let i = 0; i < node.children.length; ++i) {\n            if (node.children[i].name == dstName) {\n                children.push(node.children[i]);\n            }\n            let subNodes = this.getChildrenByName(node.children[i], dstName);\n            children = children.concat(subNodes);\n        }\n        return children;\n    }\n\n    //获得该名称的第一个子节点\n    static getFirstChildByName(node: cc.Node, dstName: string) {\n        let firstChild: cc.Node = null;\n        let children = this.getChildrenByName(node, dstName);\n        if (children.length > 0) {\n            firstChild = children[0];\n        }\n        return firstChild;\n    }\n\n    /** 从子节点中查找对应组件·不递归 */\n    static getChildrenByComponent<T extends cc.Component>(node: cc.Node, type: { prototype: T }) {\n        let result: T[] = [];\n        for (let i = 0; i < node.children.length; ++i) {\n            const one = node.children[i];\n            let comp = one.getComponent(type);\n            if (comp) {\n                result.push(comp);\n            }\n        }\n        return result;\n    }\n\n    static getAllChildCount(root: string, node: cc.Node) {\n        let url = root + '_' + node.name;\n        //console.log('getAllChildCount:', url);\n        let count = node.children.length;\n        for (let one of node.children) {\n            count += this.getAllChildCount(url, one);\n        }\n        return count;\n    }\n\n    /** 偏移矩形 */\n    static offsetRect(box: cc.Rect, offset: cc.Vec2) {\n        let offWidth = offset.x;\n        let offHeigt = offset.y;\n\n        box.x += -offWidth;\n        box.y += -offHeigt;\n        box.width += 2 * offWidth;\n        box.height += offHeigt;\n        return box;\n    }\n\n    /** 自动调整弹出页面位置，保证其在可视界面内 \n     * popNode: 弹出节点\n     * clickPos2World： 点击位置\n     * alignType：对齐方式(1:左对齐， 2：右对齐， 3：上对齐， 4：下对齐， 5：自动, 6:居中下对齐)\n    */\n    static autoAdjustPopWinPos(popNode: cc.Node, clickPos2World: cc.Vec2, alignType: number = 5) {\n        if (popNode == null || clickPos2World == null) {\n            return;\n        }\n        const szVisible = cc.view.getVisibleSize();\n\n        let height = popNode.height * popNode.scaleY;\n        let width = popNode.width * popNode.scaleX;\n        const winH = szVisible.height;\n        const winW = szVisible.width;\n\n        let willPos = clickPos2World.clone();\n        let align = alignType || 5;\n        switch (align) {\n            case 1:\n                willPos.x += popNode.anchorX * width;\n                willPos.y += (popNode.anchorY - 0.5) * height;\n                break;\n            case 2:\n                willPos.x -= (1 - popNode.anchorX) * width;\n                willPos.y += (popNode.anchorY - 0.5) * height;\n                break;\n            case 3:\n                willPos.y -= (1 - popNode.anchorY) * height;\n                willPos.x += (popNode.anchorX - 0.5) * width;\n                break;\n            case 4:\n                willPos.y += popNode.anchorY * height;\n                willPos.x += (popNode.anchorX - 0.5) * width;\n                break;\n            case 5:\n                {\n                    let willPosX = clickPos2World.x;\n                    if (clickPos2World.x <= winW * 0.5) {\n                        //以layout_bg右侧目标点，对齐clickPos\n                        willPosX += width * popNode.anchorX;\n                    } else {\n                        //以layout_bg左侧为目标点，对齐clickPos            \n                        willPosX -= width * (1 - popNode.anchorX);\n                    }\n                    let willPosY = clickPos2World.y + height * popNode.anchorY;\n                    willPos = cc.v2(willPosX, willPosY);\n                }\n                break;\n            case 6:\n                willPos.y -= (1 - popNode.anchorY) * height;\n                willPos.x = winW / 2;\n                break;\n        }\n        //x方向不能出屏幕\n        if (willPos.x > winW * 0.5) {\n            let edge2Right = willPos.x + width * (1 - popNode.anchorX);\n            let disX = edge2Right - winW;\n            if (disX > 0) {\n                willPos.x -= disX;\n            }\n        } else {\n            let edge2Left = willPos.x - width * popNode.anchorX - 70;\n            if (edge2Left < 0) {\n                willPos.x -= edge2Left;\n            }\n        }\n        //y方向不能出屏幕\n        if (willPos.y > winH * 0.5) {\n            let edge2Top = willPos.y + height * (1 - popNode.anchorY);\n            let disY = edge2Top - winH;\n            if (disY > 0) {\n                willPos.y -= disY;\n            }\n        } else {\n            let edge2Bottom = willPos.y - height * popNode.anchorY;\n            if (edge2Bottom < 0) {\n                willPos.y -= edge2Bottom;\n            }\n        }\n        let pos = popNode.parent.convertToNodeSpaceAR(willPos)\n        cc.log(pos, popNode.name)\n        popNode.setPosition(pos);\n    }\n\n\n\n\n    /**\n     * 子节点递归处理\n     * @param node 需要递归处理的节点或节点数组\n     * @param cb 节点处理函数\n     * @param thisArg cb绑定的this对象\n     */\n    static nodeRecursive(node: cc.Node | cc.Node[], cb: (n: cc.Node) => void, thisArg: any = undefined): void {\n        if (node instanceof cc.Node) {\n            cb.call(thisArg, node);\n            node.children.forEach((n: cc.Node) => { this.nodeRecursive(n, cb, thisArg); });\n        } else if (Array.isArray(node)) {\n            node.forEach((n: cc.Node) => { this.nodeRecursive(n, cb, thisArg); });\n        }\n    }\n\n    /**\n     * 更改spriteframe\n     * @param sprite \n     * @param url \n     */\n    static changeSpriteFrame(sprite: cc.Sprite, url: string, endCb?: Function) {\n        sprite.changeSpriteFrame(url, endCb);\n    }\n\n    /**\n     * 更改spriteframe\n     * @param sprite \n     * @param url \n     */\n    static changeSFWithAtlas(sprite: cc.Sprite, url: string, subFile: string, endCb?: Function) {\n        sprite.changeSFWithAtlas(url, subFile, endCb);\n    }\n    /**\n     * 更改spine\n     * @param sprite \n     * @param url \n     */\n    static changeSkeletonData(spine: sp.Skeleton, url: string, endCb?: Function) {\n        spine.changeSkeletonData(url, endCb);\n    }\n\n    /** 重置Ctrl中的view和model对象 */\n    static resetControlMVObj(node: cc.Node) {\n        let clsName = node.name;\n        if (clsName.startsWith('P_') || clsName.startsWith('V_') || clsName.startsWith('F_')) {\n            clsName = clsName.substring(2);\n        }\n        if (!clsName.startsWith('C_')) {\n            let ctrlComp = node.getComponent(clsName);\n            if (ctrlComp) {\n                let modelComp = node.getComponent(`${clsName}Model`);\n                if (modelComp) {\n                    ctrlComp.model = modelComp;\n                }\n                let viewComp = node.getComponent(`${clsName}View`);\n                if (viewComp) {\n                    ctrlComp.view = viewComp;\n                }\n            }\n        }\n        for (let one of node.children) {\n            this.resetControlMVObj(one);\n        }\n    }\n\n    /** 实例化MVC预制体 */\n    static instantiateMVCPrefab(prefab: cc.Prefab | cc.Node, related?: cc.Node | cc.Prefab) {\n        let newNode: cc.Node = c2f.res.instantiate(prefab, related);\n        let clsName = prefab.name;\n        if (clsName.startsWith('P_') || clsName.startsWith('V_') || clsName.startsWith('F_')) {\n            clsName = clsName.substring(2);\n        }\n        if (!clsName.startsWith('C_')) {\n            let modelComp = newNode.getComponent(`${clsName}Model`);\n            if (!modelComp) {\n                modelComp = newNode.addComponent(`${clsName}Model`);\n            }\n            let viewComp = newNode.getComponent(`${clsName}View`);\n            if (!viewComp) {\n                viewComp = newNode.addComponent(`${clsName}View`);\n                viewComp.initViewProperty();\n            }\n            let ctrlComp = newNode.getComponent(clsName);\n            if (!ctrlComp) {\n                ctrlComp = newNode.addComponent(clsName);\n            }\n            ctrlComp.model = modelComp;\n            ctrlComp.view = viewComp;\n        }\n        if (prefab instanceof cc.Node) {\n            this.resetControlMVObj(newNode);\n        }\n        return newNode;\n    }\n}\n\ndeclare global {\n    interface IUtil {\n        view: typeof ViewUtil;\n    }\n}\nc2f.utils.view = ViewUtil;\nexport { };"]}