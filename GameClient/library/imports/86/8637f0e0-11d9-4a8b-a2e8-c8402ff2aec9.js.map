{"version":3,"sources":["assets/c2f-framework/utils/SpineUtil.ts"],"names":[],"mappings":";;;;;;AAAA,cAAc;AACd;IAAA;IAqDA,CAAC;IApDG;;;;OAIG;IACI,0BAAgB,GAAvB,UAAwB,KAAkB,EAAE,QAAgB;QACxD,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,EAAE;YACP,EAAE,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;SACxC;aAAM;YACH,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAChD;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;OAIG;IACI,2BAAiB,GAAxB,UAAyB,KAAkB,EAAE,IAAmB,EAAE,GAAa;QAC3E,IAAI,CAAC,GAAG,EAAE;YACN,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB;QACD,IAAI,IAAI,EAAE;YACN,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;SAC1E;aAAM;YACH,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SACb;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;;;OAKG;IACI,oBAAU,GAAjB,UAAkB,KAAkB,EAAE,QAAgB;QAClD,IAAI,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,IAAI,EAAE;YACN,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5C,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;SAC/C;aAAM;YACH,EAAE,CAAC,IAAI,CAAC,oBAAkB,QAAQ,iBAAc,CAAE,CAAC;SACtD;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,gBAAC;AAAD,CArDA,AAqDC,IAAA;AAOD,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC","file":"","sourceRoot":"/","sourcesContent":["/** Spine工具 */\nclass SpineUtil {\n    /**\n     * 获得spine中某骨骼的世界坐标\n     * @param spine     spine组件\n     * @param boneName  骨骼名称\n     */\n    static getBonePos2World(spine: sp.Skeleton, boneName: string) {\n        let dstPos = cc.Vec3.ZERO;\n        let bone = spine.findBone(boneName);\n        if (!bone) {\n            cc.log('dont find bone: ', boneName);\n        } else {\n            dstPos = this.spineBoneWorldPos(spine, bone);\n        }\n        return dstPos;\n    }\n\n    /**\n     * 获得spine中某骨骼的世界坐标\n     * @param spine     spine组件\n     * @param boneName  骨骼名称\n     */\n    static spineBoneWorldPos(spine: sp.Skeleton, bone: sp.spine.Bone, out?: cc.Vec3) {\n        if (!out) {\n            out = cc.v3(0, 0, 0);\n        }\n        if (bone) {\n            spine.node.convertToWorldSpaceAR(cc.v3(bone.worldX, bone.worldY), out);\n        } else {\n            out.x = 0;\n            out.y = 0;\n            out.z = 0;\n        }\n        return out;\n    }\n\n    /**\n     * 获得spine中某骨骼的坐标\n     * @param spine \n     * @param boneName \n     * @returns \n     */\n    static getBonePos(spine: sp.Skeleton, boneName: string) {\n        let bonePos = cc.v2(0, 0);\n        let bone = spine.findBone(boneName);\n        if (bone) {\n            bonePos.x = bone.worldX * spine.node.scaleX;\n            bonePos.y = bone.worldY * spine.node.scaleY;\n        } else {\n            cc.warn(`dont find bone[${boneName}] in spine: `,);\n        }\n        return bonePos;\n    }\n}\n\ndeclare global {\n    interface IUtil {\n        spine: typeof SpineUtil;\n    }\n}\nc2f.utils.spine = SpineUtil;\nexport { };\n"]}