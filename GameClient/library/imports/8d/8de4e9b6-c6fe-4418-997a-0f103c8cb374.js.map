{"version":3,"sources":["assets/c2f-framework/core/language/LanguageManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAAiD;AACjD,4DAA2D;AAC3D,+CAA8C;AAC9C,0CAAyC;AAEzC,IAAY,aAKX;AALD,WAAY,aAAa;IACrB,aAAa;IACb,gDAA+B,CAAA;IAC/B,eAAe;IACf,0DAAyC,CAAA;AAC7C,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB;AAGD;IAA8B,mCAAe;IAKzC;QAAA,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;IACvB,CAAC;IAGD,sBAAW,oCAAO;QADlB,aAAa;aACb;YACI,OAAO,2BAAY,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAGD,sBAAW,sCAAS;QADpB,iBAAiB;aACjB;YACI,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;gBACjB,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;aACvC;iBAAM;gBACH,OAAO,EAAE,CAAC;aACb;QACL,CAAC;;;OAAA;IAED,eAAe;IACR,iCAAO,GAAd,UAAe,IAAY;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED;;;;OAIG;IACI,qCAAW,GAAlB,UAAmB,KAAa,EAAE,KAAkB;QAAlB,sBAAA,EAAA,UAAkB;QAChD,IAAI,KAAK,GAAG,2BAAY,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACnD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACI,+BAAK,GAAZ,UAAa,EAAU;QAAE,gBAAS;aAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;YAAT,+BAAS;;QAC9B,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAgB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;YAAnB,IAAI,GAAG,eAAA;YACR,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtB,QAAQ,GAAG,EAAE,GAAG,GAAG,CAAC;aACvB;iBAAM;gBACH,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC;aACzB;SACJ;QACD,OAAO,2BAAY,CAAC,WAAW,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAED,cAAc;IACD,sCAAY,GAAzB,UAA0B,KAAe;;;;;;6BACjC,CAAA,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAA,EAAzB,wBAAyB;wBACrB,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;wBAChE,IAAI,KAAK,EAAE;4BACP,2BAAY,CAAC,OAAO,GAAG,KAAK,CAAC;yBAChC;6BAAM;4BACH,2BAAY,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;yBAC1D;wBACD,qBAAM,IAAI,CAAC,aAAa,EAAE,EAAA;;wBAA1B,SAA0B,CAAC;wBAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;;wBAE1B,KAAK,IAAI,KAAK,EAAE,CAAC;;;;;;KAExB;IAED,gBAAgB;IACT,uCAAa,GAApB,UAAqB,KAAe;QAApC,iBAWC;QAVG,IAAI,GAAG,GAAG,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QACzD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,SAAS,EAAE,UAAC,GAAiB,EAAE,KAAmB;YACtF,IAAI,GAAG,EAAE;gBACL,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACzB;iBAAM;gBACH,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC;aAC9B;YACD,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACtD,KAAK,IAAI,KAAK,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;IACf,sCAAY,GAAnB,UAAoB,IAAY;QAC5B,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC5B,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAChC;SACJ;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,aAAa;IACA,uCAAa,GAA1B;;;;;;6BACQ,CAAA,IAAI,CAAC,OAAO,IAAI,mBAAQ,CAAC,WAAW,CAAC,EAAE,CAAA,EAAvC,wBAAuC;wBACvC,2BAAY,CAAC,IAAI,GAAG,aAAK,CAAC;;;wBAEtB,UAAU,GAAG,mBAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;wBAClD,GAAG,GAAG,QAAM,UAAU,WAAQ,CAAC;wBACN,qBAAM,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,EAAA;;wBAAjE,QAAQ,GAAiB,SAAwC;wBACrE,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;4BAC3B,2BAAY,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;yBAC3C;wBACD,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;;;;;;KAE1C;IAIa,2BAAW,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,eAAe,EAAE,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAPD,WAAW;IACI,yBAAS,GAAoB,IAAI,CAAA;IAOpD,sBAAC;CAzHD,AAyHC,CAzH6B,iCAAe,GAyH5C;AAQD,GAAG,CAAC,QAAQ,GAAG,eAAe,CAAC,WAAW,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { C2FConst } from \"../../define/C2FConst\";\nimport { EventDispatcher } from \"../event/EventDispatcher\";\nimport { LanguageData } from \"./LanguageData\";\nimport { words } from \"../../game/words\";\n\nexport enum LanguageEvent {\n    /** 语种变化事件 */\n    CHANGE = 'LanguageEvent.CHANGE',\n    /** 语种资源释放事件 */\n    RELEASE_RES = \"LanguageEvent.RELEASE_RES\"\n}\n\n\nclass LanguageManager extends EventDispatcher {\n\n    /** 多语言配置 */\n    private mulLGRes: any;\n\n    constructor() {\n        super();\n        this.mulLGRes = {};\n    }\n\n    /** 获取当前语种 */\n    public get current(): string {\n        return LanguageData.current;\n    }\n\n    /** 获取支持的多语种数组 */\n    public get languages(): string[] {\n        if (c2f.config.game) {\n            return c2f.config.game.languageList;\n        } else {\n            return [];\n        }\n    }\n\n    /** 当前语言是否存在 */\n    public isExist(lang: string): boolean {\n        return this.languages.indexOf(lang) > -1;\n    }\n\n    /**\n     * 根据data获取对应语种的字符\n     * @param labId \n     * @param arr \n     */\n    public getLangByID(labId: number, param: string = ''): string {\n        let value = LanguageData.getLangByID(labId, param);\n        return value;\n    }\n\n    /**\n     * 根据data获取对应语种的字符\n     * @param labId \n     * @param arr \n     */\n    public words(id: number, ...params): string {\n        let strParam = '';\n        for (let one of params) {\n            if (strParam.length <= 0) {\n                strParam = '' + one;\n            } else {\n                strParam += '|' + one;\n            }\n        }\n        return LanguageData.getLangByID(id, strParam);\n    }\n\n    /** 初始化语言设置 */\n    public async initLanguage(endCb: Function) {\n        if (this.languages.length > 0) {\n            let lgSet = c2f.storage.getPlainItem(C2FConst.localLGSet, null);\n            if (lgSet) {\n                LanguageData.current = lgSet;\n            } else {\n                LanguageData.current = c2f.config.game.languageDefault;\n            }\n            await this.resetCurWords();\n            this.loadLGResJson(endCb);\n        } else {\n            endCb && endCb();\n        }\n    }\n\n    /** 加载多语言配置文件 */\n    public loadLGResJson(endCb: Function) {\n        let url = 'statistic/' + c2f.config.game.languageCfgFile;\n        c2f.res.load(cc.resources.name, url, cc.JsonAsset, (err: Error | null, asset: cc.JsonAsset) => {\n            if (err) {\n                cc.error(err.message);\n            } else {\n                this.mulLGRes = asset.json;\n            }\n            c2f.res.release(url, cc.JsonAsset, cc.resources.name);\n            endCb && endCb();\n        });\n    }\n\n    /** 根据uuid获得多语言对应ID */\n    public getLGResUuid(uuid: string) {\n        let retUuid = null;\n        if (this.languages.length > 0) {\n            let find = this.mulLGRes[uuid];\n            if (find && find[this.current]) {\n                retUuid = find[this.current];\n            }\n        }\n        return retUuid;\n    }\n\n    /** 重置程序文本 */\n    public async resetCurWords() {\n        if (this.current == C2FConst.LanguageKey.zh) {\n            LanguageData.data = words;\n        } else {\n            let bundleName = C2FConst.mulBundlePre + this.current;\n            let url = `ab:${bundleName}/words`;\n            let assetRes: cc.TextAsset = await c2f.res.loadOne(url, cc.TextAsset);\n            if (assetRes && assetRes.text) {\n                LanguageData.data = eval(assetRes.text);\n            }\n            c2f.res.release(url, cc.TextAsset);\n        }\n    }\n\n    /** 静态成员 */\n    private static _instance: LanguageManager = null\n    public static getInstance(): LanguageManager {\n        if (!this._instance) {\n            this._instance = new LanguageManager();\n        }\n        return this._instance;\n    }\n}\n\ndeclare global {\n    interface IC2F {\n        language: LanguageManager;\n    }\n}\n\nc2f.language = LanguageManager.getInstance();\nexport { };"]}