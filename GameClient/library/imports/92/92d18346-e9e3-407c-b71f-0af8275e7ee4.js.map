{"version":3,"sources":["assets/c2f-framework/utils/ObjectUtil.ts"],"names":[],"mappings":";;;;;;AAAA,WAAW;AACX;IAAA;IAqGA,CAAC;IApGG;;;OAGG;IACI,mBAAQ,GAAf,UAAgB,KAAU;QACtB,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB,CAAC;IACvE,CAAC;IAED;;;OAGG;IACI,mBAAQ,GAAf,UAAgB,MAAW;QACvB,IAAI,MAAM,IAAI,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9C,OAAO,MAAM,CAAC;SACjB;QAED,IAAI,MAAM,GAAQ,IAAI,CAAC;QAEvB,IAAI,MAAM,YAAY,IAAI,EAAE;YACxB,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACpB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;YACjC,OAAO,MAAM,CAAC;SACjB;QAED,IAAI,MAAM,YAAY,KAAK,EAAE;YACzB,MAAM,GAAG,EAAE,CAAC;YACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACxC;YACD,OAAO,MAAM,CAAC;SACjB;QAED,IAAI,MAAM,YAAY,MAAM,EAAE;YAC1B,MAAM,GAAG,EAAE,CAAC;YACZ,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;gBACtB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC5B,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC5C;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;QAED,OAAO,CAAC,IAAI,CAAC,+CAAU,MAAQ,CAAC,CAAC;IACrC,CAAC;IAID;;;OAGG;IACI,sBAAW,GAAlB,UAAmB,MAAW;QAC1B,SAAS,QAAQ,CAAC,GAAG,EAAE,KAAK;YACxB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;gBAC7C,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACvB,2CAA2C;oBAC3C,OAAO;iBACV;gBACD,gCAAgC;gBAChC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;YACD,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IACxD,CAAC;IAED;;;OAGG;IACI,eAAI,GAAX,UAAY,MAAc;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW;IACJ,8BAAmB,GAA1B,UAA2B,MAAW;QAClC,IAAI,MAAM,IAAI,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9C,OAAO,MAAM,CAAC;SACjB;QACD,IAAI,MAAM,YAAY,KAAK,EAAE;YACzB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACnD;YACD,OAAO,MAAM,CAAC;SACjB;QACD,IAAI,MAAM,YAAY,MAAM,EAAE;YAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;gBACtB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC5B,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;oBACpD,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;iBACzD;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;IACL,CAAC;IACL,iBAAC;AAAD,CArGA,AAqGC,IAAA;AAOD,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC","file":"","sourceRoot":"/","sourcesContent":["/** 对象工具 */\nclass ObjectUtil {\n    /**\n     * 判断指定的值是否为对象\n     * @param value 值\n     */\n    static isObject(value: any): boolean {\n        return Object.prototype.toString.call(value) === '[object Object]';\n    }\n\n    /**\n     * 深拷贝\n     * @param target 目标\n     */\n    static deepCopy(target: any): any {\n        if (target == null || typeof target !== 'object') {\n            return target;\n        }\n\n        let result: any = null;\n\n        if (target instanceof Date) {\n            result = new Date();\n            result.setTime(target.getTime());\n            return result;\n        }\n\n        if (target instanceof Array) {\n            result = [];\n            for (let i = 0, length = target.length; i < length; i++) {\n                result[i] = this.deepCopy(target[i]);\n            }\n            return result;\n        }\n\n        if (target instanceof Object) {\n            result = {};\n            for (const key in target) {\n                if (target.hasOwnProperty(key)) {\n                    result[key] = this.deepCopy(target[key]);\n                }\n            }\n            return result;\n        }\n\n        console.warn(`不支持的类型：${result}`);\n    }\n\n\n\n    /**\n     * 防止json循环引用 深拷贝\n     * @param target 目标\n     */\n    static deepCopyOne(target: any): object {\n        function replacer(key, value) {\n            if (typeof value === 'object' && value !== null) {\n                if (cache.includes(value)) {\n                    // If circular reference found, discard key\n                    return;\n                }\n                // Store value in our collection\n                cache.push(value);\n            }\n            return value;\n        }\n        target.self = target;\n        let cache = [];\n        return JSON.parse(JSON.stringify(target, replacer));\n    }\n\n    /**\n     * 拷贝对象\n     * @param target 目标\n     */\n    static copy(target: object): object {\n        return JSON.parse(JSON.stringify(target));\n    }\n\n    /** 修改小写 */\n    static modifyKeysLowercase(target: any): any {\n        if (target == null || typeof target !== 'object') {\n            return target;\n        }\n        if (target instanceof Array) {\n            let retArr = [];\n            for (let i = 0, length = target.length; i < length; i++) {\n                retArr[i] = this.modifyKeysLowercase(target[i]);\n            }\n            return retArr;\n        }\n        if (target instanceof Object) {\n            let retObj = {};\n            for (const key in target) {\n                if (target.hasOwnProperty(key)) {\n                    let lcKey = c2f.utils.str.lowercaseFirstLetter(key);\n                    retObj[lcKey] = this.modifyKeysLowercase(target[key]);\n                }\n            }\n            return retObj;\n        }\n    }\n}\n\ndeclare global {\n    interface IUtil {\n        obj: typeof ObjectUtil;\n    }\n}\nc2f.utils.obj = ObjectUtil;\nexport { };\n"]}