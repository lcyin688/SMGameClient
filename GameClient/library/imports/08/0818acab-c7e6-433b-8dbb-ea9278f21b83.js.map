{"version":3,"sources":["assets/Script/game/GameCalculator.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/** 计算器：\n * 1、约定规则计算\n * \n */\n\nimport { GameConsts } from \"./GameConsts\";\n\n\nexport class GameCalc {\n    /** 先取最多两位小数 在缩写数字 */\n    static getShortNumFix(num: number): string {\n        return this.getShortNum(Math.floor(num * 100) / 100)\n    }\n    /** 取整在缩写 */\n    static getShortNumInteger(num: number, len: number = 7): string {\n        return this.getShortNum(Math.floor(num), len)\n    }\n    /** 获得缩写数字\n     * @param num 目标数字\n     * @param len 最大显示位，目标小于该位时显示全写，大于该位时显示简写 \n     */\n    static getShortNum(num: number, len: number = 6) {\n        const rule = GameConsts.ShortNum_CN;\n        let dstNum: any = num;\n        let maxVal: number = Math.pow(10, len);\n        if (dstNum >= 0 && !isNaN(dstNum) && dstNum >= maxVal) {\n            let matched = false;\n            for (let i = 0; i < rule.length; ++i) {\n                let value = rule[i].value;\n                if (dstNum >= value) {\n                    matched = true;\n                    let short = dstNum / value;\n                    //整数位数\n                    let intCnt = Math.floor(short).toString().length;\n                    //小数位数\n                    let decimal = rule[i].fixNum - intCnt;\n                    //小数值·保留N位小数，小数末尾为舍弃\n                    let arrNum = short.toString().split('.');\n                    if (arrNum.length > 1) {\n                        let decValue = '0.' + arrNum[1].substring(0, decimal);\n                        let decVLen = decValue.length;\n                        while (decVLen > 0 && decValue[decVLen - 1] == '0') {\n                            decValue = decValue.substring(0, decVLen - 1);\n                            decVLen = decValue.length;\n                        }\n                        dstNum = Math.floor(short).toString();\n                        if (decValue.length > 2) {\n                            dstNum += decValue.substring(1);\n                        }\n                    } else {\n                        dstNum = short;\n                    }\n                    dstNum = dstNum + c2f.language.words(rule[i].txt);\n                }\n            }\n        }\n        return \"\" + dstNum;\n    }\n    /**价格(分)转化元 */\n    static getFomatPrice(priceNum: number) {\n        let num = priceNum / 100;\n        return num\n    }\n}\n"]}