{"version":3,"sources":["assets/gameYngy/script/YngyMain/YngyMainModel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameConsts } from '../../../Script/game/GameConsts';\nimport { UIPa } from '../../../Script/game/UIParam';\nimport { YngyCfg } from '../YngyCfg';\nimport { UIModelBase } from './../../../c2f-framework/gui/layer/UIModelBase';\n\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport default class YngyMainModel extends UIModelBase {\n    /** 预制名 给实例调用 */\n    public prefabName = 'F_YngyMain';\n    public itemMap1: Map<number, Map<number, UIPa.YngyItemArgs>> = null\n    public itemMap2: Map<number, Map<number, UIPa.YngyItemArgs>> = null\n    public itemMap3: Map<number, Map<number, UIPa.YngyItemArgs>> = null\n    public itemMap4: Map<number, Map<number, UIPa.YngyItemArgs>> = null\n    public itemMapArr: Map<number, Map<number, UIPa.YngyItemArgs>>[] = []\n\n    public selectedPool: UIPa.YngyItemArgs[] = []\n    public initDataByLv(lv: number, clickFun: Function) {\n        this.selectedPool = []\n        let totalCount = this.getAllCount(lv)\n        let count = Math.floor(totalCount / 3)\n        let allData = this.getRadomTypeArr(count)\n        this.itemMap1 = new Map()\n        this.itemMap2 = new Map()\n        this.itemMap3 = new Map()\n        this.itemMap4 = new Map()\n        let index = 0\n        this.pushItemArr(YngyCfg[lv - 1].lay1, index, allData, 0, clickFun)\n        this.pushItemArr(YngyCfg[lv - 1].lay2, index, allData, 1, clickFun)\n        this.pushItemArr(YngyCfg[lv - 1].lay3, index, allData, 2, clickFun)\n        this.pushItemArr(YngyCfg[lv - 1].lay4, index, allData, 3, clickFun)\n        this.itemMapArr = []\n        this.itemMapArr.push(this.itemMap1, this.itemMap2, this.itemMap3, this.itemMap4)\n        this.reflashHideStatestate()\n    }\n    private reflashHideStatestate() {\n        for (let i = 0; i < this.itemMapArr.length; i++) {\n            let vCeng = this.itemMapArr[i];\n            vCeng.forEach((vHang, keyHang) => {\n                vHang.forEach((vItem, keyLie) => {\n                    let hideState = this.getHideState(vItem)\n                    vItem.hideState = hideState\n                });\n            });\n        }\n    }\n    private getHideState(vItem: UIPa.YngyItemArgs) {\n        let cengIndex = vItem.cengIndex\n        let hideState = false\n        let pad = GameConsts.YngyConst.ItemWidthHeight\n        for (let i = cengIndex; i < 4; i++) {\n            let vCeng = this.itemMapArr[i];\n            vCeng.forEach(vv => {\n                vv.forEach(vItemTemp => {\n                    //x,y 同时小于一个单位的时候说明被压着了\n                    if (vItemTemp.pos.x - vItem.pos.x < pad && vItemTemp.pos.y - vItem.pos.y < pad) {\n                        hideState = true\n                    }\n                });\n            });\n        }\n        return hideState\n    }\n\n\n    private pushItemArr(data: number[][], index: number, allData: Array<number>, ceng: number, clickFun: Function) {\n        let itemMap: Map<number, Map<number, UIPa.YngyItemArgs>>\n        let pad = GameConsts.YngyConst.ItemWidthHeight\n        let startPos = new cc.Vec2(0, 0)\n        switch (ceng) {\n            case 0:\n                itemMap = this.itemMap1\n                break;\n            case 1:\n                itemMap = this.itemMap2\n                startPos = new cc.Vec2(pad / 2, pad / 2)\n                break;\n            case 2:\n                itemMap = this.itemMap3\n                break;\n            case 3:\n                itemMap = this.itemMap4\n                startPos = new cc.Vec2(pad / 2, pad / 2)\n                break;\n        }\n\n        for (let x = 0; x < data.length; x++) {\n            const v = data[x];\n            for (let y = 0; y < v.length; y++) {\n                const vv = v[y];\n                if (vv == 1) {\n                    let posX = x * pad\n                    let posY = y * pad\n                    let pos: cc.Vec2 = new cc.Vec2(posX, posY).add(startPos)\n                    let itemData: UIPa.YngyItemArgs = {\n                        pos: pos,\n                        cengIndex: ceng,\n                        xIndex: x,\n                        YIndex: y,\n                        typ: allData[index],\n                        state: UIPa.YngyItemArgsStates.Alive,\n                        hideState: false,\n                        clickFun: clickFun\n                    }\n                    let mapItem1 = itemMap.get(x)\n                    if (mapItem1) {\n                        mapItem1.set(y, itemData)\n                    } else {\n                        let mapItem1 = new Map<number, UIPa.YngyItemArgs>()\n                        mapItem1.set(y, itemData)\n                        itemMap.set(x, mapItem1)\n                    }\n                    index++\n                }\n            }\n\n        }\n    }\n\n\n    private getAllCount(lv: number) {\n        let count = 0;\n        this.getCount(YngyCfg[lv - 1].lay1, count)\n        this.getCount(YngyCfg[lv - 1].lay2, count)\n        this.getCount(YngyCfg[lv - 1].lay3, count)\n        this.getCount(YngyCfg[lv - 1].lay4, count)\n        return count\n    }\n\n    private getCount(data: number[][], count: number) {\n        data.forEach(v => {\n            v.forEach(vv => {\n                if (vv == 1) {\n                    count++\n                }\n            });\n        });\n    }\n\n\n\n    private getRadomTypeArr(allCount: number) {\n        let allData: Array<number> = [];\n        let types: Array<number> = [0, 1, 2, 3, 4, 5];\n        for (let i = 0; i < allCount; i) {\n            let index = Math.floor(Math.random() * types.length);\n            if (types.length == 0) {\n                types = [0, 1, 2, 3, 4, 5];\n            }\n            allData.push(types[index]);\n            allData.push(types[index]);\n            allData.push(types[index]);\n            types.splice(index, 1);\n        }\n\n        return allData;\n    }\n\n\n}"]}