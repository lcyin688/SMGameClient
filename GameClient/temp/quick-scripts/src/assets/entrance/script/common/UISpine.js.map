{"version":3,"sources":["assets/entrance/script/common/UISpine.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,KAAgD,EAAE,CAAC,UAAU,EAA3D,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,gBAAgB,sBAAA,EAAE,IAAI,UAAkB,CAAC;AAGpE;IAAqC,2BAAY;IAAjD;QAAA,qEA8BC;QA5BW,qBAAe,GAAa,IAAI,CAAC;QACjC,kBAAY,GAAa,IAAI,CAAC;;IA2B1C,CAAC;IAxBU,+BAAa,GAApB,UAAqB,UAAoB,EAAE,OAAiB;QACxD,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAChC,CAAC;IAES,wBAAM,GAAhB;QAAA,iBAkBC;QAjBG,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,KAAK,CAAC,gBAAgB,CAAC,UAAC,KAA0B,EAAE,KAA8B;YAC9E,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;gBAC1B,OAAO;aACV;YACD,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAClC,IAAI,SAAS,IAAI,OAAO,EAAE;gBACtB,0CAA0C;aAC7C;YACD,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,mBAAmB,CAAC,UAAC,IAAI;YAC3B,KAAI,CAAC,eAAe,IAAI,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CAAA;IACN,CAAC;IA7BgB,OAAO;QAF3B,OAAO;QACP,gBAAgB,CAAC,EAAE,CAAC,QAAQ,CAAC;OACT,OAAO,CA8B3B;IAAD,cAAC;CA9BD,AA8BC,CA9BoC,EAAE,CAAC,SAAS,GA8BhD;kBA9BoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["import { UIHelper } from \"../../../Script/game/UIHelper\";\n\nconst { ccclass, property, requireComponent, menu } = cc._decorator;\n@ccclass\n@requireComponent(sp.Skeleton)\nexport default class UISpine extends cc.Component {\n\n    private completeHandler: Function = null;\n    private eventHandler: Function = null;\n\n\n    public setListenerCb(completeCb: Function, eventCb: Function) {\n        this.completeHandler = completeCb;\n        this.eventHandler = eventCb;\n    }\n\n    protected onLoad(): void {\n        let spine = this.node.getComponent(sp.Skeleton);\n        if (!spine) {\n            return;\n        }\n        spine.setEventListener((entry: sp.spine.TrackEntry, event: sp.spine.Event | number) => {\n            if (typeof event == 'number') {\n                return;\n            }\n            const eventName = event.data.name;\n            if (eventName == 'sound') {\n                // UIHelper.playEffect(event.stringValue);\n            }\n            this.eventHandler && this.eventHandler(entry, event);\n        });\n        spine.setCompleteListener((data) => {\n            this.completeHandler && this.completeHandler(data);\n        })\n    }\n}"]}