{"version":3,"sources":["assets/entrance/script/game/EntranceDefine.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAiB,QAAQ,CAmHxB;AAnHD,WAAiB,QAAQ;IAOrB,SAAS;IACT,IAAY,YAKX;IALD,WAAY,YAAY;QACpB,yDAAa,CAAA;QACb,iDAAS,CAAA;QACT,+CAAQ,CAAA;QACR,uDAAY,CAAA;IAChB,CAAC,EALW,YAAY,GAAZ,qBAAY,KAAZ,qBAAY,QAKvB;IAED,qBAAqB;IACrB;QAAA;QAQA,CAAC;QAAD,kBAAC;IAAD,CARA,AAQC,IAAA;IARY,oBAAW,cAQvB,CAAA;IAED,aAAa;IACb;QAAA;QAKA,CAAC;QAAD,eAAC;IAAD,CALA,AAKC,IAAA;IALY,iBAAQ,WAKpB,CAAA;IAED,WAAW;IACX;QAKI;YACI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACtB,CAAC;QACL,iBAAC;IAAD,CAXA,AAWC,IAAA;IAXY,mBAAU,aAWtB,CAAA;IAED,WAAW;IACX;QAAA;QAaA,CAAC;QAAD,aAAC;IAAD,CAbA,AAaC,IAAA;IAbY,eAAM,SAalB,CAAA;IAED,YAAY;IACZ;QAaI;YACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YACb,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACnB,CAAC;QACL,cAAC;IAAD,CA5BA,AA4BC,IAAA;IA5BY,gBAAO,UA4BnB,CAAA;IAED,YAAY;IACZ,IAAY,OASX;IATD,WAAY,OAAO;QACf,UAAU;QACV,wBAAa,CAAA;QACb,UAAU;QACV,0BAAe,CAAA;QACf,SAAS;QACT,sBAAW,CAAA;QACX,SAAS;QACT,sBAAW,CAAA;IACf,CAAC,EATW,OAAO,GAAP,gBAAO,KAAP,gBAAO,QASlB;IAED,iBAAiB;IACjB,IAAY,QAIX;IAJD,WAAY,QAAQ;QAChB,6CAAW,CAAA;QACX,2CAAU,CAAA;QACV,iDAAa,CAAA;IACjB,CAAC,EAJW,QAAQ,GAAR,iBAAQ,KAAR,iBAAQ,QAInB;AAGL,CAAC,EAnHgB,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAmHxB","file":"","sourceRoot":"/","sourcesContent":["export namespace EntraDef {\n\n    /** 请求netCfg回调 */\n    export type QuestNetCfgFunc = (code: QuestErr, info: NetCfg) => void;\n    /** 确认是否使用白名单 */\n    export type ComfirmWhiteFunc = (resultCb: (ret: boolean) => void) => void;\n\n    //服务器大区类型\n    export enum AreaItemType {\n        recommend = 1,  //推荐\n        owned = 2,      //已拥有\n        area = 3,       //普通\n        svrGroup = 4,   //服务器组 \n    }\n\n    /** 保存于服务器列表中的玩家信息 */\n    export class PlrInfo2Svr {\n        svrid: string;\n        svrSeq: number;\n        level: number;\n        head: number;\n        username: string;\n        atkpwr: number;\n        lastTs: number;  //最后一次登录时间戳\n    }\n\n    /** 大区配置信息 */\n    export class AreaUnit {\n        areaId: number;     //大区id\n        name: string;       //大区名称\n        svrlist: string;    //服务器列表URL\n        userinfo: string;   //查找已有角色\n    }\n\n    /** 大区详情 */\n    export class AreaDetail {\n        areaId: number;\n        name: string;\n        svrUrl: string;\n        svrList: SvrUnit[];\n        constructor() {\n            this.areaId = 0;\n            this.name = '';\n            this.svrUrl = '';\n            this.svrList = [];\n        }\n    }\n\n    /** 网络配置 */\n    export class NetCfg {\n        area: { [key: number]: AreaUnit };  //大区信息\n        noticeUrl: string;                  //公告地址\n        checkWhite: string;                 //白名单检测地址\n        reportUrl: string;                  //未使用\n        resUrlLine: string;                 //正式更新地址\n        resUrlWhite: string;                //白名单更新地址\n        nginx: string;                      //H5代理访问socket\n        timeZone: string;                   //服务器时区\n        miniVersion: string;                //线上包最低版本，如果用户包AppVer比这个版本还低，则需要用户换包\n        resVerLine: string;                 //热更资源版本，先根据这个和客户端资源版本比较看是否需要热更\n        resVerWhite: string;                //热更资源版本(白名单用户使用)\n        autoPopNotice: string;              //自动弹出公告: 0：不弹出， 非0：弹出\n    }\n\n    /** 服务器数据 */\n    export class SvrUnit {\n        svrKey: string;     //唯一编号名称：game1 game2 ...\n        seq: number;        //area*10000+id\n        id: number;         //id\n        ip: string;         //服务器ip\n        port: number;       //端口\n        wsport: number;     //WS端口\n        status: number;     //状态(流畅·满服·维护)\n        text: string;       //服务器名称\n        tips: string;       //维护提示\n        flag: string;       //标记(新服·热服·提审·测试)\n        recommend: number;  //是否推荐\n        order: number;      //排序ID\n        constructor() {\n            this.svrKey = '';\n            this.seq = 0;\n            this.id = 0;\n            this.ip = '';\n            this.port = 0;\n            this.status = 0;\n            this.svrKey = '';\n            this.text = '';\n            this.tips = '';\n            this.wsport = 0;\n            this.flag = '';\n            this.recommend = 0;\n            this.order = 0;\n        }\n    }\n\n    /** 服务器标志 */\n    export enum SvrFlag {\n        /** 测试服 */\n        test = 'test',\n        /** 提审服 */\n        audit = 'audit',\n        /** 新服 */\n        new = 'new',\n        /** 热服 */\n        hot = 'hot',\n    }\n\n    /** http请求错误类型 */\n    export enum QuestErr {\n        unknown = 0,    //无错误\n        netCfg = 1,     //获取switch信息失败\n        whiteName = 2,  //获取白名单信息失败\n    }\n\n\n}"]}