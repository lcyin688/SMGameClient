{"version":3,"sources":["assets/c2f-framework/net/BindHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAI,WAAW,GAAkB,EAAE,CAAC;AAEpC,gBAAgB;AAChB;IAKI;IAAgB,CAAC;IAEjB,0BAAI,GAAJ,UAAK,EAAY,EAAE,IAAW;QAAX,qBAAA,EAAA,WAAW;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;QACnC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,0BAAI,GAAJ;QAAK,gBAAS;aAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;YAAT,2BAAS;;QACV,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;IACL,kBAAC;AAAD,CAhBA,AAgBC,IAAA;AAhBY,kCAAW;AAkBxB,SAAgB,UAAU,CAAC,EAAY,EAAE,IAAgB;IAAhB,qBAAA,EAAA,WAAgB;IAAE,cAAc;SAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;QAAd,6BAAc;;IACrE,IAAI,MAAM,GAAgB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW,EAAE,CAAA;IACxF,sDAAsD;IACtD,MAAM,CAAC,IAAI,OAAX,MAAM,kBAAM,EAAE,EAAE,IAAI,GAAK,IAAI,GAAE;IAC/B,OAAO,MAAM,CAAC;AAClB,CAAC;AALD,gCAKC","file":"","sourceRoot":"/","sourcesContent":["let handlerPool: BindHandler[] = [];\n\n//用于绑定回调函数this指针\nexport class BindHandler {\n    private cb: Function;\n    private host: any;\n    private args: any[];\n\n    constructor() { }\n\n    init(cb: Function, host = null, ...args) {\n        this.cb = cb;\n        this.host = host;\n        this.args = args;\n    }\n\n    exec(...extras) {\n        this.cb.apply(this.host, this.args.concat(extras));\n    }\n}\n\nexport function genHandler(cb: Function, host: any = null, ...args: any[]): BindHandler {\n    let single: BindHandler = handlerPool.length < 0 ? handlerPool.pop() : new BindHandler()\n    //这里要展开args, 否则会将args当数组传给wrapper, 导致其args参数变成2维数组[[]]\n    single.init(cb, host, ...args);\n    return single;\n}\n"]}