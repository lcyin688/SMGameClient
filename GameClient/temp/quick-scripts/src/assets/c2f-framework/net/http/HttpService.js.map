{"version":3,"sources":["assets/c2f-framework/net/http/HttpService.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { HttpCode } from \"./HttpCode\";\n\nclass HttpService {\n    private static _inst: HttpService;\n\n    private constructor() {\n    }\n\n    static getInst(): HttpService {\n        if (!this._inst) {\n            this._inst = new HttpService();\n        }\n        return this._inst;\n    }\n\n    public doGet(url: string, headers, params, cb: Function, timeout: number = 0) {\n        if (params) {\n            if (url.indexOf(\"?\") == -1) {\n                url += \"?\";\n            }\n            url += this.getQueryString(params);\n        }\n        this.doHttp(url, headers, null, \"GET\", cb, timeout);\n    }\n\n    public doPost(url: string, headers, params, cb: Function, timeout: number = 0) {\n        if (headers) {\n            if (url.indexOf(\"?\") == -1) {\n                url += \"?\";\n            }\n            url += this.getQueryString(headers);\n        }\n        this.doHttp(url, null, params, \"POST\", cb, timeout);\n    }\n\n    public doDownload() {\n    }\n\n    private doHttp(url: string, headers: any, params: any, method: string, cb: Function, timeout: number = 0) {\n        const xhr = new XMLHttpRequest();\n        if (timeout) {\n            xhr.timeout = timeout;\n        }\n        xhr.responseType = \"text\";\n        xhr.onreadystatechange = this.onReadyStateChange.bind(this, xhr, cb);\n        xhr.ontimeout = this.onTimeout.bind(this, xhr, url, cb);\n        xhr.onerror = this.onError.bind(this, xhr, url, cb);\n        xhr.onabort = this.onAbort.bind(this, xhr, url, cb);\n\n        cc.log(`http_service, doHttp url=${url}, method=${method}, parmas=${params}`)\n        xhr.open(method, url, true);\n        if (headers) {\n            this.setHttpHeaders(xhr, headers);\n        }\n        if (cc.sys.isNative) {\n            this.setHttpHeaders(xhr, { \"Accept-Encoding\": \"gzip,deflate\" });\n        }\n        if (params && typeof params === \"object\") {\n            params = JSON.stringify(params);\n        }\n        xhr.send(params);\n    }\n\n    private onReadyStateChange(xhr: XMLHttpRequest, cb: Function) {\n        cc.log(`http_service, onReadyStateChange, readyState=${xhr.readyState}, status=${xhr.status}`);\n        if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\n            c2f.log.logNet(`http_service, onReadyStateChange, responseText=${xhr.responseText}`);\n            let data = null;\n            let code = HttpCode.kUnknown;\n\n            let response = null;\n            try {\n                response = JSON.parse(xhr.responseText);\n            } catch (error) {\n            }\n            if (response && response.code) {\n                code = response.code;\n                data = response.content;\n            }\n            else {\n                code = HttpCode.kSuccess;\n                data = response;\n            }\n            this.notifyCallback(cb, code, data);\n            this.removeXhrEvent(xhr);\n        }\n    }\n\n    private onTimeout(xhr: XMLHttpRequest, url: string, cb: Function) {\n        cc.warn(`${url}, request ontimeout`);\n        this.notifyCallback(cb, HttpCode.kTimeout, null);\n        this.removeXhrEvent(xhr);\n    }\n\n    private onError(xhr: XMLHttpRequest, url: string, cb: Function) {\n        cc.warn(`${url}, request onerror`);\n        this.notifyCallback(cb, HttpCode.kUnknown, null);\n        this.removeXhrEvent(xhr);\n    }\n\n    private onAbort(xhr: XMLHttpRequest, url: string, cb: Function) {\n        cc.warn(`${url}, request onabort`);\n        this.notifyCallback(cb, HttpCode.kUnknown, null);\n        this.removeXhrEvent(xhr);\n    }\n\n    private removeXhrEvent(xhr: XMLHttpRequest) {\n        xhr.ontimeout = null;\n        xhr.onerror = null;\n        xhr.onabort = null;\n        xhr.onreadystatechange = null;\n    }\n\n    private notifyCallback(cb: Function, code: number, data?) {\n        if (cb) {\n            cb(code, data);\n        }\n    }\n\n    private setHttpHeaders(xhr: XMLHttpRequest, headers) {\n        for (let key in headers) {\n            xhr.setRequestHeader(key, headers[key]);\n        }\n    }\n\n    private getQueryString(params) {\n        const tmps: string[] = [];\n        for (let key in params) {\n            tmps.push(`${key}=${params[key]}`);\n        }\n        return tmps.join(\"&\");\n    }\n}\n\ndeclare global {\n    interface IC2F {\n        http: HttpService;\n    }\n}\n\nc2f.http = HttpService.getInst();\nexport { };"]}