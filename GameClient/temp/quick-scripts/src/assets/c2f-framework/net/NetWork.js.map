{"version":3,"sources":["assets/c2f-framework/net/NetWork.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { RC4 } from \"../libs/rc4/RC4\";\nimport { WSByProtobuf } from \"./ws/WSByProtobuf\";\nimport { SocketState } from \"./ws/WebService\";\nimport { msgname } from \"../../resources/proto/msgname\";\nimport { INetToUI } from \"./INetToUI\";\nimport { C2FConst } from \"../define/C2FConst\";\nvar msgpack = require('msgpack');\n\nconst rc4Key = [37, 19, 8, 169, 132, 244, 222, 112, 172, 185, 164, 69, 131, 210, 85, 37];\n\nclass NetWork {\n    private enRc4: RC4;\n    private deRc4: RC4;\n    private service: WSByProtobuf;\n\n    private waitHeartTimer: NodeJS.Timeout; //心跳等待timer\n    private heartbeatTimer: NodeJS.Timeout; //心跳timer\n\n    private msgListeners: any[];\n    private waitListenerCnt: number; //消息锁屏等待数量\n\n    /** 模块消息分发 */\n    private plrMsgHandle: Function;\n    /** UI交互接口 */\n    private _toUI: INetToUI;\n    public get toUI(): INetToUI {\n        return this._toUI;\n    }\n    public set toUI(v: INetToUI) {\n        this._toUI = v;\n    }\n\n    constructor() {\n        this.enRc4 = null;\n        this.deRc4 = null;\n\n        this.waitHeartTimer = null;\n        this.heartbeatTimer = null;\n\n        this.msgListeners = [];\n        this.waitListenerCnt = 0;\n\n        this.plrMsgHandle = null;\n    }\n\n    public async initService() {\n        if (this.service) {\n            this.service.purge();\n        } else {\n            this.service = new WSByProtobuf();\n            this.service.setWsEventCb(this.onWSEvent.bind(this));\n            let result = await this.loadProtoFile();\n            if (result) {\n                this.initMsgIds();\n            } else {\n                c2f.log.logNet('failed to load proto!');\n            }\n        }\n    }\n\n    private initMsgIds() {\n        this.service.setMessageCb(this.onWSMsg.bind(this));\n    }\n\n    /** 重置加解密 */\n    private reInitRc4() {\n        this.enRc4 = new RC4(rc4Key);\n        this.deRc4 = new RC4(rc4Key);\n\n        // this.service.setEncryptCb(this.enRc4.encrypt.bind(this.enRc4));\n        // this.service.setDecryptCb(this.deRc4.decrypt.bind(this.deRc4));\n    }\n\n    private async loadProtoFile() {\n        return new Promise<boolean>((resolve, reject) => {\n            let protobuf = require('protobuf');\n            protobuf.loadProtoFile(\"proto/game\", (err, result) => {\n                if (err) {\n                    cc.log(err);\n                    resolve(false);\n                } else {\n                    this.service.setRoot(result);\n                    resolve(true);\n                }\n            });\n        });\n    }\n\n    public setPlrMsgHandle(handle: Function) {\n        this.plrMsgHandle = handle;\n    }\n\n    /** tcp连接 */\n    public connect(url: string, callback: Function) {\n        this.service.tcpConnet(url, callback);\n    }\n\n    /** 添加监听 */\n    public addListener(view, ops, callback, getErr = false) {\n        this.msgListeners.push({ view: view, ops: ops, callback: callback, type: \"persist\", getErr: getErr });\n    }\n\n    /** 网络事件 */\n    private onWSEvent(state: SocketState) {\n        switch (state) {\n            case SocketState.Connected:\n                this.reInitRc4();\n                break;\n            case SocketState.Error:\n                this.toUI.hideWaitUI();\n                this.toUI.showErrorMsg(C2FConst.NetErrOffline);\n                break;\n            case SocketState.ConnectTimeOut:\n                this.toUI.showWaitUI();\n                break;\n            case SocketState.ReconnectSuc:\n                this.toUI.hideWaitUI();\n                this.toUI.showReloginView();\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** 请求消息 */\n    public sendMsg(op: number, data: any, params?: any) {\n        let result = this.service.tcpSend(op, data);\n        if (!result) {\n            if (params && params.callback) {\n                params.callback(op, { ErrorCode: C2FConst.NetErrOffline })\n            }\n            return;\n        }\n        if (params === undefined) {\n            params = {};\n        }\n        this.msgListeners.push(\n            {\n                view: params.view,\n                ops: params.ops,\n                callback: params.callback,\n                waitNet: params.waitNet,\n                getErr: params.getErr,\n                type: \"once\"\n            });\n        if (params.waitNet) {\n            this.waitListenerCnt += 1;\n            if (this.waitListenerCnt > 0) {\n                this.toUI.showWaitUI();\n            }\n        }\n    }\n\n    /** 网络消息回调 */\n    private onWSMsg(op: number, data: any) {\n        let success = data.ErrorCode === undefined || data.ErrorCode === 0;\n        const msgName = msgname[op];\n        if (msgName === undefined) {\n            cc.log(\"network.dispatch msgName is nil: op = \" + op);\n        }\n\n        if (success) {\n            this.plrMsgHandle && this.plrMsgHandle(op, data);\n        }\n\n        let needRemove = [];\n        let count = this.msgListeners.length;\n\n        //倒序遍历，也就是说在最直接请求的地方最先响应，其他均获取刷新\n        for (let idx = count - 1; idx >= 0; idx--) {\n            const info = this.msgListeners[idx];\n            if (info.view !== undefined && info.view.node == null) {\n                needRemove.push(idx);\n                continue;\n            }\n            if (info.ops === undefined || info.ops === null) {\n                needRemove.push(idx);\n                continue;\n            }\n            let ops = info.ops;\n            for (let index = 0; index < ops.length; index++) {\n                let val = ops[index];\n                if (val === op) {\n                    if (success || info.getErr) {\n                        info.callback && info.callback(op, data);\n                    }\n                    if (info.type == \"once\") {\n                        needRemove.push(idx);\n                    }\n                    break;\n                }\n            }\n        }\n\n        //let quickDisplay = this.getQuickDisPlay();\n        for (let idx = 0; idx < needRemove.length; idx++) {\n            const listenerIndex = needRemove[idx];\n            if (this.msgListeners[listenerIndex] && this.msgListeners[listenerIndex].waitNet) {\n                this.waitListenerCnt -= 1;\n                this.toUI.hideWaitUI();\n            }\n            this.msgListeners.splice(listenerIndex, 1);\n        }\n        if (!success) {\n            this.toUI.showErrorMsg(data.ErrorCode)\n        }\n    }\n\n    /** 开始心跳检查 */\n    public startHeartbeat() {\n        let heartWaitTimeout = () => {\n            //检测是否正处于可重连状态，如果是就不用断开了\n            if (this.toUI.isOpenReloginView()) {\n                this.clearHeartbeatTimer();\n                this.clearWaitHeartTimer();\n            } else {\n                this.purge();\n                this.toUI.showErrorMsg(C2FConst.NetErrOffline);\n            }\n        }\n        const rate = 6000;\n        // const heartMsgId = msgid.C_TimeSync;\n        // const heartRetId = msgid.GS_TimeSync_R;\n        let sendHeartMsg = () => {\n            // this.sendMsg(\n            //     heartMsgId,\n            //     {},\n            //     {\n            //         ops: [heartRetId],\n            //         callback: this.clearWaitHeartTimer.bind(this)\n            //     });\n            if (!this.waitHeartTimer) {\n                this.waitHeartTimer = setTimeout(heartWaitTimeout, rate * 5);\n            }\n        }\n        this.clearHeartbeatTimer();\n        //立即执行一次\n        sendHeartMsg();\n        this.heartbeatTimer = setInterval(sendHeartMsg, rate);\n    }\n\n    /** 清除心跳等待timer */\n    private clearWaitHeartTimer() {\n        if (this.waitHeartTimer) {\n            clearTimeout(this.waitHeartTimer);\n            this.waitHeartTimer = null;\n        }\n    }\n\n    /** 清除心跳timer */\n    private clearHeartbeatTimer() {\n        if (this.heartbeatTimer) {\n            clearInterval(this.heartbeatTimer);\n            this.heartbeatTimer = null;\n        }\n    }\n\n    /** 停止网络 */\n    public purge() {\n        this.clearHeartbeatTimer();\n        this.clearWaitHeartTimer();\n        this.service.purge();\n    }\n\n    /** 获得消息ID名称 */\n    public getMsgName(id: number) {\n        return msgname[id];\n    }\n\n    /** 解码二进制数据 */\n    public decodeBinary(binary) {\n        let data = msgpack.decode(binary.toBuffer());\n        return data;\n    }\n\n\n    /** 静态成员 */\n    private static _instance: NetWork = null\n    public static getInstance(): NetWork {\n        if (!this._instance) {\n            this._instance = new NetWork();\n        }\n        return this._instance;\n    }\n}\n\ndeclare global {\n    interface IC2F {\n        net: NetWork;\n    }\n}\n\nc2f.net = NetWork.getInstance();\nexport { };"]}