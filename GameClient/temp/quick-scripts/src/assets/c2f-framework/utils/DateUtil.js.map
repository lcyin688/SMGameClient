{"version":3,"sources":["assets/c2f-framework/utils/DateUtil.ts"],"names":[],"mappings":";;;;;;AAAA,eAAe;AACf,IAAK,QAKJ;AALD,WAAK,QAAQ;IACT,iCAAC,CAAA;IACD,iCAAC,CAAA;IACD,iCAAC,CAAA;IACD,iCAAC,CAAA;AACL,CAAC,EALI,QAAQ,KAAR,QAAQ,QAKZ;AAED;IAAA;IAqwBA,CAAC;IApwBG;;;;OAIG;IACI,eAAM,GAAb,UAAc,MAAc,EAAE,IAAU;QACpC,IAAI,CAAC,GAAQ;YACT,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;YACzB,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;YACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;YACrB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3C,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,CAAqB,eAAe;SAClE,CAAA;QACD,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;SAC9F;QAED,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBACxC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAClH;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;OAuBG;IACW,yBAAgB,GAA9B,UAA+B,GAAW,EAAE,MAA6F;QAA7F,uBAAA,EAAA,4BAA6F;QACrI,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAC/C,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QAE/C,IAAI,OAAO,GAAa,QAAQ,CAAC,CAAC,CAAC;QACnC,IAAI,MAAM,GAAW,EAAE,CAAC;QAExB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC5B,iBAAiB;YACjB,MAAM,GAAG,MAAM,CAAC;YAChB,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBACxB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;aACxB;iBAAM,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC/B,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;aACxB;iBAAM,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC/B,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;aACxB;SACJ;aAAM;YACH,eAAe;YACf,IAAI,IAAI,GAAG,CAAC,EAAE;gBACV,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;iBAAM,IAAI,KAAK,GAAG,CAAC,EAAE;gBAClB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;iBAAM,IAAI,OAAO,GAAG,CAAC,EAAE;gBACpB,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;iBAAM;gBACH,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;aACrB;SACJ;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAE;YACtB,OAAO,IAAI,EAAE,CAAC;SACjB;QACD,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAE;YACtB,OAAO,IAAI,EAAE,CAAC;SACjB;QACD,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAE;YACtB,KAAK,IAAI,EAAE,CAAC;SACf;QAED,IAAI,IAAI,GAAG;YACP,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,IAAM,CAAC,CAAC,CAAC,KAAG,IAAM;YACtC,CAAC,EAAE,KAAG,IAAM;YACZ,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO;YACzC,CAAC,EAAE,KAAG,KAAO;YACb,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;YACf,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;SAClB,CAAC;QACF,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;;;;OAQG;IACW,yBAAgB,GAA9B,UAA+B,IAAmB,EAAE,MAAwD,EAAE,KAAsB;QAAhF,uBAAA,EAAA,gDAAwD;QAAE,sBAAA,EAAA,aAAsB;QAChI,IAAI,GAAG,GAAG,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC5D,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACpD,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACvD,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC7D,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAE7D,IAAI,IAAI,GAAG;YACP,IAAI,EAAE,KAAG,IAAM;YACf,EAAE,EAAE,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,IAAI,GAAG,GAAK,CAAC,CAAC,CAAC,KAAG,IAAI,GAAG,GAAK;YACxD,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO;YACzC,CAAC,EAAE,KAAG,KAAO;YACb,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,IAAM,CAAC,CAAC,CAAC,KAAG,IAAM;YACtC,CAAC,EAAE,KAAG,IAAM;YACZ,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,KAAO,CAAC,CAAC,CAAC,KAAG,KAAO;YACzC,CAAC,EAAE,KAAG,KAAO;YACb,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;YACf,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,MAAI,OAAS,CAAC,CAAC,CAAC,KAAG,OAAS;YAC/C,CAAC,EAAE,KAAG,OAAS;SAClB,CAAA;QACD,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,cAAc;IACP,qBAAY,GAAnB;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,oBAAoB;IACb,kBAAS,GAAhB,UAAiB,GAAW,EAAE,GAAW;QACrC,IAAI,MAAM,GAAY,KAAK,CAAC;QAC5B,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;YAC5B,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACnD,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACnD,MAAM,GAAG,MAAM,IAAI,MAAM,CAAA;SAC5B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;MAGE;IACK,mBAAU,GAAjB,UAAkB,GAAW,EAAE,GAAW;QACtC,IAAI,MAAM,GAAY,KAAK,CAAC;QAC5B,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;YAC5B,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,MAAM,EAAE,EAAC,KAAK;gBAC5B,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;gBACjC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;gBACjC,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;gBAC1B,WAAW;gBACX,IAAI,IAAI,IAAI,CAAC,EAAE;oBACX,IAAI,GAAG,CAAC,CAAA;iBACX;gBACD,IAAI,IAAI,IAAI,CAAC,EAAE;oBACX,IAAI,GAAG,CAAC,CAAA;iBACX;gBACD,uBAAuB;gBACvB,mBAAmB;gBACnB,IAAI,IAAI,IAAI,IAAI,EAAE;oBACd,MAAM,GAAG,IAAI,CAAA;iBAChB;aACJ;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAGD,aAAa;IACN,gBAAO,GAAd,UAAe,EAAU;QACrB,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;IAID,aAAa;IACN,uBAAc,GAArB,UAAsB,IAAY;QAC9B,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,IAAI,GAAG,SAAS,CAAC;YACrB,IAAI,IAAI,IAAI,CAAC,EAAE;gBACX,IAAI,IAAI,GAAG,CAAA;aACd;YACD,IAAI,IAAI,IAAI,CAAC;YACb,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC9B;aAAM;YACH,EAAE,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;SAC/B;IACL,CAAC;IAED;;OAEG;IACI,sBAAa,GAApB;QACI,yDAAyD;QACzD,IAAI,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAC/C,OAAO,UAAU,CAAA;IACrB,CAAC;IAAA,CAAC;IAEF;;OAEG;IACI,sBAAa,GAApB,UAAqB,EAAU;QAC3B,QAAQ;QACR,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;QACrB,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,sBAAa,GAApB;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACI,wBAAe,GAAtB;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC9D,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACI,wBAAe,GAAtB;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,wBAAe,GAAtB;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,2BAAkB,GAAzB,UAA0B,SAAiB;QACvC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,IAAI,KAAK,GAAG,SAAS,GAAG,SAAS,CAAC;QAClC,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,yBAAgB,GAAvB,UAAwB,MAAsC;QAAtC,uBAAA,EAAA,8BAAsC;QAC1D,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,2BAAkB,GAAzB,UAA0B,MAAsC;QAAtC,uBAAA,EAAA,8BAAsC;QAC5D,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACpB,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SAC1C;aAAM;YACH,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SACzC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACI,2BAAkB,GAAzB,UAA0B,MAAc,EAAE,IAAY;QAClD,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC;IACnB,CAAC;IAED;;;OAGG;IACI,qBAAY,GAAnB,UAAoB,UAAkB;QAClC,IAAI,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;OAGG;IACI,wBAAe,GAAtB,UAAuB,IAAa;QAChC,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,sBAAa,GAApB,UAAqB,IAAa;QAC9B,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxC,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;;OAGG;IACI,uBAAc,GAArB,UAAsB,IAAa;QAC/B,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACI,yBAAgB,GAAvB,UAAwB,IAAa;QACjC,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;OAGG;IACI,yBAAgB,GAAvB,UAAwB,IAAa;QACjC,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;OAGG;IACI,uBAAc,GAArB,UAAsB,IAAa;QAC/B,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,uBAAc,GAArB,UAAsB,IAAa;QAC/B,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,wBAAe,GAAtB,UAAuB,IAAY,EAAE,IAAY;QAC7C,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,QAAQ,IAAI,EAAE;YACV,KAAK,GAAG;gBACJ,OAAO,QAAQ,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;YACrD,KAAK,GAAG;gBACJ,OAAO,QAAQ,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC;YACtD,KAAK,GAAG;gBACJ,OAAO,QAAQ,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,OAAO,CAAC,CAAC;YACxD,KAAK,GAAG;gBACJ,OAAO,QAAQ,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,QAAQ,CAAC,CAAC;YACzD,KAAK,GAAG;gBACJ,OAAO,QAAQ,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/D,KAAK,GAAG;gBACJ,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACtG,KAAK,GAAG;gBACJ,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;SAChE;IACL,CAAC;IAED;;;;;OAKG;IACI,sBAAa,GAApB,UAAqB,KAAsB;QACvC,IAAI,IAAI,GAAW,CAAC,CAAC;QACrB,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;YAC1B,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;gBACnB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;aAClC;YACD,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAClD;aAAM,IAAI,KAAK,GAAG,SAAS,EAAE;YAC1B,IAAI,SAAS,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC;YACpC,IAAI,SAAS,IAAI,EAAE,EAAE;gBACjB,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC3C;iBAAM;gBACH,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACpC;SACJ;aAAM;YACH,IAAI,IAAI,GAAG,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;YACxC,IAAI,KAAK,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;YACjD,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;YACtB,IAAI,GAAG,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACrD;QAED,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAM,SAAS,GAAG,KAAK,CAAC;QACxB,IAAI,MAAM,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC;QAC7C,IAAI,OAAO,GAAG,MAAM,GAAG,SAAS,CAAC;QACjC,IAAI,OAAO,GAAG,CAAC,EAAE;YACb,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACrC,IAAI,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,CAAC;YAChD,IAAI,OAAO,GAAG,OAAO,EAAE;gBACnB,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;aACzB;SACJ;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,kBAAkB;IACX,4BAAmB,GAA1B,UAA2B,IAAY;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACjC,IAAM,SAAS,GAAG,KAAK,CAAC;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QAChC,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,GAAG,IAAI,MAAM,GAAG,SAAS,CAAC;SAC7B;aAAM;YACH,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;SACnC;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAGD,qBAAqB;IACd,gCAAuB,GAA9B,UAA+B,IAAY,EAAE,IAAY;QACrD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACjC,IAAM,SAAS,GAAG,KAAK,CAAC;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QAChC,qBAAqB;QACrB,GAAG,IAAI,MAAM,GAAG,SAAS,CAAC;QAC1B,WAAW;QACX,uCAAuC;QACvC,IAAI;QAEJ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,IAAI,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,IAAI,EAAE;gBACN,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,GAAG,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,GAAG,EAAE;oBACL,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,IAAI,GAAG,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtC,IAAI,GAAG,EAAE;wBACL,GAAG,IAAI,GAAG,CAAC;qBACd;iBACJ;aACJ;SACJ;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IACD,eAAe;IACR,wCAA+B,GAAtC,UAAuC,GAAW;QAC9C,IAAI,OAAO,GAAG,GAAG,CAAA;QACjB,IAAI,GAAG,GAAG,CAAC,EAAE;YACT,OAAO,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,CAAA;SAC5B;QACD,OAAO,OAAO,CAAA;IAClB,CAAC;IAGD,mBAAmB;IACZ,6CAAoC,GAA3C;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACjC,IAAI,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACpD,cAAc;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,CAAC;QAClE,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAA;QAC5C,OAAO,UAAU,CAAA;IACrB,CAAC;IAEM,6BAAoB,GAA3B;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,IAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACrE,IAAM,QAAQ,GAAG,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC7E,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAMD,oBAAoB;IACb,2BAAkB,GAAzB,UAA0B,IAAY;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,IAAI,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,IAAI,EAAE;gBACN,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,GAAG,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,GAAG,EAAE;oBACL,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,IAAI,GAAG,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtC,IAAI,GAAG,EAAE;wBACL,GAAG,IAAI,GAAG,CAAC;qBACd;iBACJ;aACJ;SACJ;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED,mBAAmB;IACZ,4BAAmB,GAA1B,UAA2B,IAAY;QACnC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;QAEjD,IAAM,UAAU,GAAG,IAAI,CAAC;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QAChC,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,GAAG,IAAI,MAAM,GAAG,UAAU,CAAC;SAC9B;aAAM;YACH,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC;SACrC;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;GAED;IACQ,8BAAqB,GAA5B,UAA6B,GAAW;QACpC,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAA;QAC/C,IAAI,GAAG,GAAG,KAAK,EAAE;YACb,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;YAC3C,OAAO,KAAG,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAG,CAAA;SAC9C;aAAM,IAAI,GAAG,GAAG,IAAI,EAAE;YACnB,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;YAC3C,OAAO,KAAG,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAG,CAAA;SAC/C;aAAM,IAAI,GAAG,GAAG,EAAE,EAAE;YACjB,IAAI,MAAM,GAAW,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;YAC1C,OAAO,KAAG,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAG,CAAA;SAChD;aAAM;YACH,OAAO,KAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAG,CAAA;SAC7C;IACL,CAAC;IAGD;;;;OAIG;IACI,yBAAgB,GAAvB,UAAwB,GAAW,EAAE,IAAgB;QAAhB,qBAAA,EAAA,QAAgB;QACjD,QAAQ,IAAI,EAAE;YACV,KAAK,CAAC;gBACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;YACjC,KAAK,CAAC;gBACF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;SACrC;QACD,OAAO,CAAC,CAAC;IACb,CAAC;IAGD;;;;;;;OAOG;IACI,yBAAgB,GAAvB,UAAwB,GAAW;QAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,CAAA;QACxC,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACpC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAA;YACtB,OAAO,IAAI,CAAA;SACd;QACD,IAAI,OAAO,GAAG,UAAU,GAAG,GAAG,CAAA;QAC9B,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAC/C,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YACpC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAA;SACzB;aAAM,IAAI,OAAO,GAAG,EAAE,EAAE;YACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;SACvD;aAAM,IAAI,KAAK,GAAG,EAAE,EAAE;YACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACrD;aAAM,IAAI,IAAI,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SACpD;aAAM;YACH,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACjD;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAED;;OAEG;IACI,uBAAc,GAArB,UAAsB,GAAW;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,CAAA;SACX;QACD,IAAI,OAAO,GAAG,UAAU,GAAG,GAAG,CAAA;QAC9B,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAA;IACf,CAAC;IAED,qBAAqB;IACd,gCAAuB,GAA9B,UAA+B,IAAY,EAAE,IAAY;QACrD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACjC,IAAM,SAAS,GAAG,KAAK,CAAC;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC;QAChC,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,GAAG,IAAI,MAAM,GAAG,SAAS,CAAC;SAC7B;aAAM;YACH,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;SACnC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,IAAI,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,IAAI,EAAE;gBACN,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,GAAG,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,GAAG,EAAE;oBACL,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,IAAI,GAAG,GAAW,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtC,IAAI,GAAG,EAAE;wBACL,GAAG,IAAI,GAAG,CAAC;qBACd;iBACJ;aACJ;SACJ;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED,YAAY;IACL,mCAA0B,GAAjC,UAAkC,GAAW;QACzC,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QACtE,OAAO,GAAG,CAAA;IACd,CAAC;IAED;;;OAGG;IACI,4BAAmB,GAA1B,UAA2B,IAAY;QACnC,IAAI,GAAG,GAAG,CAAC,CAAA;QACX,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACnC,IAAI,IAAI,GAAW,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,IAAI,EAAE;gBACN,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,IAAI,GAAG,GAAW,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,GAAG,EAAE;oBACL,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC;iBACnB;gBACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACtB,IAAI,GAAG,GAAW,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,GAAG,EAAE;wBACL,GAAG,IAAI,GAAG,CAAC;qBACd;iBACJ;aACJ;SACJ;QACD,OAAO,GAAG,CAAA;IACd,CAAC;IACD,YAAY;IACL,gCAAuB,GAA9B,UAA+B,SAAiB,EAAE,IAAY;QAC1D,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;QACtC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAA;QAC1C,OAAO,GAAG,CAAA;IACd,CAAC;IAED,oBAAoB;IACb,oCAA2B,GAAlC;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,0BAA0B,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAA;QAC9D,OAAO,GAAG,CAAA;IACd,CAAC;IAEM,mCAA0B,GAAjC,UAAkC,SAAiB;QAC/C,oBAAoB;QACpB,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,uCAAuC;QACvC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAChC,uBAAuB;QACvB,0BAA0B;QAC1B,IAAM,cAAc,GAAG,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,wBAAwB;QACtF,+BAA+B;QAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1B,wBAAwB;QACxB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAzjBD,SAAS;IACF,iBAAQ,GAAW,SAAS,CAAC;IA2jBxC,eAAC;CArwBD,AAqwBC,IAAA;AAWD,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC","file":"","sourceRoot":"/","sourcesContent":["/** 日期(时间)工具 */\nenum TimeUnit {\n    S,\n    M,\n    H,\n    D\n}\n\nclass DateUtil {\n    /**\n     * 格式化日期显示\n     * @param format 格式化字符串（例：yyyy-MM-dd hh:mm:ss）\n     * @param date   时间对象\n     */\n    static format(fmtStr: string, date: Date): string {\n        let o: any = {\n            \"M+\": date.getMonth() + 1,                      // month \n            \"d+\": date.getDate(),                           // day \n            \"h+\": date.getHours(),                          // hour \n            \"m+\": date.getMinutes(),                        // minute \n            \"s+\": date.getSeconds(),                        // second \n            \"q+\": Math.floor((date.getMonth() + 3) / 3),    // quarter \n            \"S\": date.getMilliseconds()                     // millisecond \n        }\n        if (/(y+)/.test(fmtStr)) {\n            fmtStr = fmtStr.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        }\n\n        for (let k in o) {\n            if (new RegExp(\"(\" + k + \")\").test(fmtStr)) {\n                fmtStr = fmtStr.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substring((\"\" + o[k]).length));\n            }\n        }\n        return fmtStr;\n    }\n\n    /**\n     * 对一段时间返回格式化时间字符串\n     * @param sec 时间s\n     * @param format 格式化字符串\n     * @example\n     * // 当format为string时，会以format中的最大时间单位进行格式化\n     * c2f.utils.date.formatTimeString(3601, \"%{m}:%{s}\"); // 60:1\n     * c2f.utils.date.formatTimeString(3601, \"%{mm}:%{ss}\"); // 60:01\n     * c2f.utils.date.formatTimeString(3601, \"%{hh}:%{mm}:%{ss}\"); // 01:00:01\n     * \n     * // 当format为object时，会以传入的sec计算最大的时间单位，并选择format对应的字符串进行格式化\n     * c2f.utils.date.formatTimeString(100, {\n     *     S: \"%{s}秒\",\n     *     M: \"%{m}分%{s}秒\",\n     *     H: \"%{h}时%{m}分%{s}秒\",\n     *     D: \"%{d}天%{h}时%{m}分%{s}秒\"\n     * }); // 1分40秒\n     * c2f.utils.date.formatTimeString(100000, {\n     *     S: \"%{s}秒\",\n     *     M: \"%{m}分%{s}秒\",\n     *     H: \"%{h}时%{m}分%{s}秒\",\n     *     D: \"%{d}天%{h}时%{m}分%{s}秒\"\n     * }); // 1天3时46分40秒\n     */\n    public static formatTimeString(sec: number, format: string | { \"S\": string; \"M\": string; \"H\": string; \"D\": string } = \"%{hh}:%{mm}:%{ss}\"): string {\n        let seconds: number = Math.floor(sec);\n        let minutes: number = Math.floor(seconds / 60);\n        let hours: number = Math.floor(seconds / 3600);\n        let days: number = Math.floor(seconds / 86400);\n\n        let maxUnit: TimeUnit = TimeUnit.S;\n        let result: string = \"\";\n\n        if (typeof format === \"string\") {\n            // 查询格式化字符串中最大的单位\n            result = format;\n            if (/%\\{d+\\}/.test(format)) {\n                maxUnit = TimeUnit.D;\n            } else if (/%\\{h+\\}/.test(format)) {\n                maxUnit = TimeUnit.H;\n            } else if (/%\\{m+\\}/.test(format)) {\n                maxUnit = TimeUnit.M;\n            }\n        } else {\n            // 以传入的数值判断最大单位\n            if (days > 0) {\n                maxUnit = TimeUnit.D;\n                result = format.D;\n            } else if (hours > 0) {\n                maxUnit = TimeUnit.H;\n                result = format.H;\n            } else if (minutes > 0) {\n                maxUnit = TimeUnit.M;\n                result = format.M;\n            } else {\n                maxUnit = TimeUnit.S;\n                result = format.S;\n            }\n        }\n\n        if (maxUnit > TimeUnit.S) {\n            seconds %= 60;\n        }\n        if (maxUnit > TimeUnit.M) {\n            minutes %= 60;\n        }\n        if (maxUnit > TimeUnit.H) {\n            hours %= 24;\n        }\n\n        let data = {\n            dd: days < 10 ? `0${days}` : `${days}`,\n            d: `${days}`,\n            hh: hours < 10 ? `0${hours}` : `${hours}`,\n            h: `${hours}`,\n            mm: minutes < 10 ? `0${minutes}` : `${minutes}`,\n            m: `${minutes}`,\n            ss: seconds < 10 ? `0${seconds}` : `${seconds}`,\n            s: `${seconds}`\n        };\n        result = c2f.utils.str.formatWithObj(result, data);\n        return result;\n    }\n\n    /**\n     * 将一个Date对象或Date时间戳返回格式化日期字符串\n     * @param date Date对象或Date时间戳\n     * @param format 格式化字符串\n     * @param isUTC true:UTC时间 false:本地时间\n     * @example\n     * c2f.utils.date.formatDateString(0, \"%{YYYY}-%{MM}-%{dd} %{hh}:%{mm}:%{ss}\", true); // \"1970-01-01 00:00:00\"\n     * c2f.utils.date.formatDateString(0, \"%{dd}/%{MM}/%{YY}\", true); // \"01/01/70\"\n     */\n    public static formatDateString(date: number | Date, format: string = \"%{YYYY}-%{MM}-%{dd} %{hh}:%{mm}:%{ss}\", isUTC: boolean = false): string {\n        let src = date instanceof Date ? date : new Date(date);\n        let year = isUTC ? src.getUTCFullYear() : src.getFullYear();\n        let month = isUTC ? src.getUTCMonth() + 1 : src.getMonth() + 1;\n        let days = isUTC ? src.getUTCDate() : src.getDate();\n        let hours = isUTC ? src.getUTCHours() : src.getHours();\n        let minutes = isUTC ? src.getUTCMinutes() : src.getMinutes();\n        let seconds = isUTC ? src.getUTCSeconds() : src.getSeconds();\n\n        let data = {\n            YYYY: `${year}`,\n            YY: year % 100 < 10 ? `0${year % 100}` : `${year % 100}`,\n            MM: month < 10 ? `0${month}` : `${month}`,\n            M: `${month}`,\n            dd: days < 10 ? `0${days}` : `${days}`,\n            d: `${days}`,\n            hh: hours < 10 ? `0${hours}` : `${hours}`,\n            h: `${hours}`,\n            mm: minutes < 10 ? `0${minutes}` : `${minutes}`,\n            m: `${minutes}`,\n            ss: seconds < 10 ? `0${seconds}` : `${seconds}`,\n            s: `${seconds}`\n        }\n        let result = c2f.utils.str.formatWithObj(format, data);\n        return result;\n    }\n\n    /** 获得当前时间戳 */\n    static getLocalTick() {\n        return Math.floor(new Date().getTime() / 1000);\n    }\n\n    /** 判断2个时间戳是否是同一天 */\n    static isSameDay(ts1: number, ts2: number) {\n        let isSame: boolean = false;\n        if (ts1 != null && ts2 != null) {\n            let time_a = moment(ts1 * 1000).format(\"YYYYMMDD\");\n            let time_b = moment(ts2 * 1000).format(\"YYYYMMDD\");\n            isSame = time_a == time_b\n        }\n        return isSame;\n    }\n\n    /** 判断2个时间戳是否是同一周 \n     * ts1 现在的\n     * ts2 之前的\n    */\n    static isSameWeek(ts1: number, ts2: number) {\n        let isSame: boolean = false;\n        if (ts1 != null && ts2 != null) {\n            let secondsDiff = Math.abs(ts2 - ts1);\n            if (secondsDiff < 604800) {//7天内\n                let date1 = new Date(ts1 * 1000);\n                let date2 = new Date(ts2 * 1000);\n                let day1 = date1.getDay();\n                let day2 = date2.getDay();\n                //周末是0 单独处理\n                if (day1 == 0) {\n                    day1 = 7\n                }\n                if (day2 == 0) {\n                    day2 = 7\n                }\n                //还需要每周1重置 比如 一个是周2一个周末\n                //现在的礼拜几 一定要大于之前的礼拜\n                if (day1 >= day2) {\n                    isSame = true\n                }\n            }\n        }\n        return isSame;\n    }\n\n\n    /** 是否为是今天 */\n    static isToday(ts: number) {\n        let svrTime = this.getSerVerTime();\n        return this.isSameDay(ts, Math.floor(svrTime * 1000));\n    }\n\n    /** 时区 */\n    static timeZone: number = undefined;\n    /** 设置默认时区 */\n    static setDefTimeZone(zone: number) {\n        if (zone != null && zone >= -12 && zone <= 12) {\n            this.timeZone = zone;\n            let name = \"Etc/GMT\";\n            if (zone >= 0) {\n                name += \"+\"\n            }\n            name += zone;\n            moment.tz.setDefault(name);\n        } else {\n            cc.log(\"修改时区错误 ==>\" + zone);\n        }\n    }\n\n    /**\n     * 获取毫秒级服务器是时间\n     */\n    static getSerVerTime() {\n        // let serverTime = szg.player.time.getServerTs() * 1000;\n        let serverTime = c2f.utils.date.getLocalTick();\n        return serverTime\n    };\n\n    /**\n     * 获取某时间0时时间戳\n     */\n    static getDayStartTS(ts: number) {\n        //转换成毫秒级\n        let time = ts * 1000;\n        let startTime = moment(time).startOf(\"day\").format(\"x\");\n        return Math.floor(startTime / 1000);\n    }\n\n    /**\n     * 获取当天24时时间戳\n     */\n    static getTodayEndTS() {\n        let serverTime = this.getSerVerTime();\n        let endTime = moment(serverTime).endOf(\"day\").format(\"x\");\n        return Math.floor(endTime / 1000);\n    }\n\n    /**\n     * 获取当天0时时间戳\n     */\n    static getTodayStartTS() {\n        let serverTime = this.getSerVerTime();\n        let startTime = moment(serverTime).startOf(\"day\").format(\"x\");\n        return Math.floor(startTime / 1000);\n    }\n\n    /**\n     * 获取当天剩余时长\n     */\n    static getTodayRestDur() {\n        let serverTime = this.getSerVerTime();\n        let endTime = moment(serverTime).endOf(\"day\").format(\"x\");\n        let time = (endTime - serverTime) >= 0 ? endTime - serverTime : 0;\n        return Math.floor(time / 1000);\n    }\n\n    /**\n     * 获取当天已过时长\n     */\n    static getTodayPassDur() {\n        let serverTime = this.getSerVerTime();\n        let startTime = moment(serverTime).startOf(\"day\").format(\"x\");\n        let time = (serverTime - startTime) >= 0 ? serverTime - startTime : 0;\n        return Math.floor(time / 1000);\n    }\n\n    /** \n     * 获取今天按秒偏移后的时间戳 \n     */\n    static getTodayTsByOffset(offSecond: number) {\n        let startTime = this.getTodayStartTS();\n        let dstTs = startTime + offSecond;\n        return dstTs;\n    }\n\n    /**\n     * 获取格式化时间\n     * @fmtStr \"YYYY/MM/DD HH:mm:ss\"\n     */\n    static formatServerTime(fmtStr: string = \"YYYY-MM-DD HH:mm:ss\") {\n        let serverTime = this.getSerVerTime();\n        let time = moment(serverTime).format(fmtStr);\n        return time;\n    }\n\n    /**\n     * 获取添加了时区的格式时间\n     * @fmtStr \"YYYY/MM/DD HH:mm:ss\"\n     */\n    static getDateStrWithZone(fmtStr: string = \"YYYY/MM/DD HH:mm:ss\") {\n        let time = this.formatServerTime(fmtStr);\n        if (this.timeZone >= 0) {\n            time += \" GMT(+\" + this.timeZone + \")\";\n        } else {\n            time += \" GMT(\" + this.timeZone + \")\";\n        }\n        return time;\n    }\n\n    /**\n     * 获取指定时间，指定格式的时间字符串\n     * @fmtStr \"YYYY/MM/DD HH:mm:ss\"\n     * @time 时间 = 时间戳 x 1000\n     * eg. c2f.utils.date.formatStringByTime(\"YYYY/MM/DD\", ts * 1000);\n     * eg. c2f.utils.date.formatStringByTime(\"HH:mm:ss\", data.Ts * 1000);\n     */\n    static formatStringByTime(fmtStr: string, time: number) {\n        let forTime = moment(time).format(fmtStr);\n        return forTime;\n    }\n\n    /**\n     * 根据时间字符串获取时间戳\n     * eg. c2f.utils.date.getTimeBySting(\"2023-10-11 15:35:59\");\n     */\n    static getTsBySting(timeString: string) {\n        let time = moment(timeString).format(\"X\");\n        return Math.floor(time / 1000);\n    }\n\n    /**\n     * 获取月份\n     * @time 时间 = 时间戳 x 1000\n     */\n    static getMonthForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let month = moment(timeValue).format(\"M\");\n        return month;\n    }\n\n    /**\n     * 获取日期\n     * @time 时间 = 时间戳 x 1000\n     */\n    static getDayForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let day = moment(timeValue).format(\"D\");\n        return day;\n    }\n\n    /**\n     * 获取小时\n     * @time 时间 = 时间戳 x 1000\n     */\n    static getHourForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let hour = moment(timeValue).format(\"HH\");\n        return hour;\n    }\n\n    /**\n     * 获取分钟\n     * @time 时间 = 时间戳 x 1000\n     */\n    static getMinuteForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let minute = moment(timeValue).format(\"mm\");\n        return minute;\n    }\n\n    /**\n     * 获取秒\n     * @time 时间 = 时间戳 x 1000\n     */\n    static getSecondForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let second = moment(timeValue).format(\"ss\");\n        return second;\n    }\n\n    /**\n     * 获取年\n     * @time 时间 = 时间戳 x 1000\n     */\n    static getYearForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let year = moment(timeValue).format(\"YYYY\");\n        return year;\n    }\n\n    /**\n     * 获取周几\n     */\n    static getWeekForTime(time?: number) {\n        let timeValue = time || this.getSerVerTime();\n        let week = moment(timeValue).format(\"E\");\n        return week;\n    }\n\n    /**\n     * 获取时间和服务器时间的时间差\n     * @time 时间 = 时间戳 x 1000\n     * eg. c2f.utils.date.getOffsetByType(\"d\", ts * 1000)\n     */\n    static getOffsetByType(type: string, time: number) {\n        let serverTime = this.getSerVerTime();\n        switch (type) {\n            case 's':\n                return parseInt(\"\" + (time - serverTime) / 1000);\n            case 'n':\n                return parseInt(\"\" + (time - serverTime) / 60000);\n            case 'h':\n                return parseInt(\"\" + (time - serverTime) / 3600000);\n            case 'd':\n                return parseInt(\"\" + (time - serverTime) / 86400000);\n            case 'w':\n                return parseInt(\"\" + (time - serverTime) / (86400000 * 7));\n            case 'm':\n                return this.getOffsetByType(\"y\", time) * 12 + this.getMonthForTime(time) - this.getMonthForTime();\n            case 'y':\n                return this.getYearForTime(time) - this.getYearForTime();\n        }\n    }\n\n    /**\n     * 与服务器时间间隔几天\n     * @param 1、2023/10/11   => string\n     *        2、时间戳或time  => number\n     *        3、20231211     => number\n     */\n    static getOffsetDays(param: string | number) {\n        let time: number = 0;\n        if (typeof param == 'string') {\n            if (param.length > 10) {\n                param = param.substring(0, 10);\n            }\n            time = moment(param + ' 00:00:00').format(\"x\");\n        } else if (param > 100000000) {\n            let numBitLen = ('' + param).length;\n            if (numBitLen == 10) {\n                time = moment(param * 1000).format(\"x\");\n            } else {\n                time = moment(param).format(\"x\");\n            }\n        } else {\n            let year = parseInt(\"\" + param / 10000);\n            let month = parseInt(\"\" + (param % 10000) / 100);\n            let day = param % 100;\n            time = moment([year, month - 1, day]).format(\"x\");\n        }\n\n        let serverTime = this.getSerVerTime();\n        const secOneDay = 86400;\n        let offset = (serverTime - time) / 1000;\n        let passDay = Math.floor(offset / secOneDay);\n        let restSec = offset % secOneDay;\n        if (restSec > 0) {\n            let startTs = this.getTodayStartTS();\n            let targeTs = time / 1000 + passDay * secOneDay;\n            if (targeTs < startTs) {\n                passDay = passDay + 1;\n            }\n        }\n        return passDay;\n    }\n\n    /** 到下一个周几还有多少秒 */\n    static getSecondToNextWeek(week: number) {\n        let dur = this.getTodayRestDur();\n        const secOneDay = 86400;\n        let curWeek = this.getWeekForTime();\n        let offset = week - curWeek - 1;\n        if (offset >= 0) {\n            dur += offset * secOneDay;\n        } else {\n            dur += (7 + offset) * secOneDay;\n        }\n        return dur;\n    }\n\n\n    /** 到本周几的指定时间还有多少秒 */\n    static getSecondToThisWeekTime(week: number, time: string) {\n        let dur = this.getTodayRestDur();\n        const secOneDay = 86400;\n        let curWeek = this.getWeekForTime();\n        let offset = week - curWeek - 1;\n        // if (offset >= 0) {\n        dur += offset * secOneDay;\n        // } else {\n        //     dur += (7 + offset) * secOneDay;\n        // }\n\n        let strArr = time.split(\":\");\n        if (strArr && strArr.length > 0) {\n            let hour: number = parseInt(strArr[0]);\n            if (hour) {\n                dur += hour * 3600;\n            }\n            if (strArr.length > 1) {\n                let min: number = parseInt(strArr[1]);\n                if (min) {\n                    dur += min * 60;\n                }\n                if (strArr.length > 2) {\n                    let sen: number = parseInt(strArr[2]);\n                    if (sen) {\n                        dur += sen;\n                    }\n                }\n            }\n        }\n\n        return dur;\n    }\n    /**通过本周相差时间  */\n    static getSecondToNextWeekTimeByDisSec(sec: number): number {\n        let secTemp = sec\n        if (sec < 0) {\n            secTemp = 7 * 86400 + sec\n        }\n        return secTemp\n    }\n\n\n    /** 到下月(1号)还有多少秒 */\n    static getTimeDifferenceToNextMonthFirstDay() {\n        let serverTime = this.getSerVerTime();\n        let dur = this.getTodayRestDur();\n        let nextMonthFirstDay = this.getNextMonthFirstDay();\n        // 计算时间差（毫秒）  \n        let timeDiff = Math.abs(nextMonthFirstDay.getTime() - serverTime);\n        let timeSceond = Math.floor(timeDiff / 1000)\n        return timeSceond\n    }\n\n    static getNextMonthFirstDay(): Date {\n        let serverTime = this.getSerVerTime();\n        let now = new Date(serverTime);\n        const nextMonth = now.getMonth() + 1 === 12 ? 0 : now.getMonth() + 1;\n        const nextYear = nextMonth === 0 ? now.getFullYear() + 1 : now.getFullYear();\n        return new Date(nextYear, nextMonth, 1);\n    }\n\n\n\n\n\n    /**hh:mm:ss  获取时间戳*/\n    static getSecondByTimeStr(time: string) {\n        let sec = this.getTodayStartTS();\n        let strArr = time.split(\":\");\n        if (strArr && strArr.length > 0) {\n            let hour: number = parseInt(strArr[0]);\n            if (hour) {\n                sec += hour * 3600;\n            }\n            if (strArr.length > 1) {\n                let min: number = parseInt(strArr[1]);\n                if (min) {\n                    sec += min * 60;\n                }\n                if (strArr.length > 2) {\n                    let sen: number = parseInt(strArr[2]);\n                    if (sen) {\n                        sec += sen;\n                    }\n                }\n            }\n        }\n        return sec;\n    }\n\n    /** 到下一个x整点还有多少秒 */\n    static getSecondToNextHour(hour: number) {\n        let svrTime = this.getSerVerTime();\n        let endTime = moment(svrTime).endOf(\"hour\").format(\"x\");\n        let dur = Math.floor((endTime - svrTime) / 1000);\n\n        const secOneHour = 3600;\n        let curHour = this.getHourForTime();\n        let offset = hour - curHour - 1;\n        if (offset >= 0) {\n            dur += offset * secOneHour;\n        } else {\n            dur += (24 + offset) * secOneHour;\n        }\n        return dur;\n    }\n\n    /** 获取倒计时到天\n *  @description 一天以上倒计时到几天  一天以内倒计时到小时   一小时以内倒计时到分钟\n */\n    static getDayCountDownCommon(num: number): string {\n        let sec = c2f.utils.date.getSecondToNextWeek(1)\n        if (sec > 86400) {\n            let days: number = Math.floor(sec / 86400);\n            return `${days}${c2f.language.words(2504)}`\n        } else if (sec > 3600) {\n            let hours: number = Math.floor(sec / 3600);\n            return `${hours}${c2f.language.words(2505)}`\n        } else if (sec > 60) {\n            let minute: number = Math.floor(sec / 60);\n            return `${minute}${c2f.language.words(2506)}`\n        } else {\n            return `${sec}${c2f.language.words(2507)}`\n        }\n    }\n\n\n    /**\n     * 生成指定范围的随机整数\n     * @param num   秒\n     * @param type  类型\n     */\n    static getHoursBySceond(num: number, type: number = 1): number {\n        switch (type) {\n            case 1:\n                return Math.ceil(num / 3600);\n            case 2:\n                return Math.floor(num / 3600);\n        }\n        return 0;\n    }\n\n\n    /**\n     * 获取上次下线的时间文本\n     * 在线 显示绿色 文本在线\n     * 5分钟之内算在线\n     * 24小时以内 显示XX小时前\n     * 大于7天内 显示7天前\n     * num 上一次下线的时间戳\n     */\n    static getLastOnLineStr(num: number): { str: string, color: string } {\n        let serverTime = this.getSerVerTime();\n        let data = { str: \"\", color: \"#5D4F49\" }\n        if (num == -1) {\n            data.str = c2f.language.words(20076)\n            data.color = \"#547e49\"\n            return data\n        }\n        let seconds = serverTime - num\n        let minutes: number = Math.floor(seconds / 60);\n        let hours: number = Math.floor(seconds / 3600);\n        let days: number = Math.floor(seconds / 86400);\n        if (minutes < 5) {\n            data.str = c2f.language.words(20076)\n            data.color = \"#547e49\"\n        } else if (minutes < 60) {\n            data.str = c2f.language.words(20103).format(minutes)\n        } else if (hours < 24) {\n            data.str = c2f.language.words(20077).format(hours)\n        } else if (days < 7) {\n            data.str = c2f.language.words(20078).format(days)\n        } else {\n            data.str = c2f.language.words(20078).format(7)\n        }\n        return data\n    }\n\n    /**\n     * 上一次上线几天前\n     */\n    static getLastTimeDay(num: number): number {\n        let serverTime = this.getSerVerTime();\n        if (num = -1) {\n            return 0\n        }\n        let seconds = serverTime - num\n        let days: number = Math.floor(seconds / 86400);\n        return days\n    }\n\n    /** 到下周几的指定时间还有多少秒 */\n    static getSecondToNextWeekTime(week: number, time: string) {\n        let dur = this.getTodayRestDur();\n        const secOneDay = 86400;\n        let curWeek = this.getWeekForTime();\n        let offset = week - curWeek - 1;\n        if (offset >= 0) {\n            dur += offset * secOneDay;\n        } else {\n            dur += (7 + offset) * secOneDay;\n        }\n\n        let strArr = time.split(\":\");\n        if (strArr && strArr.length > 0) {\n            let hour: number = parseInt(strArr[0]);\n            if (hour) {\n                dur += hour * 3600;\n            }\n            if (strArr.length > 1) {\n                let min: number = parseInt(strArr[1]);\n                if (min) {\n                    dur += min * 60;\n                }\n                if (strArr.length > 2) {\n                    let sen: number = parseInt(strArr[2]);\n                    if (sen) {\n                        dur += sen;\n                    }\n                }\n            }\n        }\n\n        return dur;\n    }\n\n    /**周几 多少秒 */\n    static getWeekTimeSecondByTimeStr(str: string): number {\n        let strArr = str.split(\"/\");\n        let dur = this.getWeekTimeSecondByTime(parseInt(strArr[0]), strArr[1])\n        return dur\n    }\n\n    /**\n     * 通过09:00获取秒\n     * \n     */\n    static getTimeSecondByTime(time: string): number {\n        let dur = 0\n        let strArrTwo = time.split(\":\");\n        if (strArrTwo && strArrTwo.length > 0) {\n            let hour: number = parseInt(strArrTwo[0]);\n            if (hour) {\n                dur += hour * 3600;\n            }\n            if (strArrTwo.length > 1) {\n                let min: number = parseInt(strArrTwo[1]);\n                if (min) {\n                    dur += min * 60;\n                }\n                if (strArrTwo.length > 2) {\n                    let sen: number = parseInt(strArrTwo[2]);\n                    if (sen) {\n                        dur += sen;\n                    }\n                }\n            }\n        }\n        return dur\n    }\n    /**周几 多少秒 */\n    static getWeekTimeSecondByTime(weekIndex: number, time: string): number {\n        let secOneDay = 86400;\n        let dur = (weekIndex - 1) * secOneDay;\n        dur = dur + this.getTimeSecondByTime(time)\n        return dur\n    }\n\n    /**获取服务器 本周周一零点时间 */\n    static getServerCurWeekStartSecond(): number {\n        let curTs = this.getSerVerTime();\n        let ret = this.getFirstDayOfWeekTimestamp(curTs * 1000) / 1000\n        return ret\n    }\n\n    static getFirstDayOfWeekTimestamp(timestamp: number): number {\n        // 将时间戳转换为 Date 对象  \n        const date = new Date(timestamp);\n        // 获取当前是星期几（0代表星期日，1代表星期一，...，6代表星期六）  \n        const dayOfWeek = date.getDay();\n        // 如果今天是星期一，则不需要做任何调整  \n        // 否则，需要减去相应的天数以回到上一个星期一  \n        const daysToSubtract = (dayOfWeek === 0) ? 6 : dayOfWeek - 1; // 如果星期日是0，则上一个星期一是6天前  \n        // 设置日期为上一个星期一的日期，并将时间设置为凌晨0点  \n        date.setDate(date.getDate() - daysToSubtract);\n        date.setHours(0, 0, 0, 0);\n        // 将修改后的 Date 对象转换回时间戳  \n        return date.getTime();\n    }\n\n\n}\n\n\n\n\n\ndeclare global {\n    interface IUtil {\n        date: typeof DateUtil;\n    }\n}\nc2f.utils.date = DateUtil;\nexport { };\n"]}