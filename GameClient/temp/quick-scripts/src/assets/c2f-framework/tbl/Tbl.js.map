{"version":3,"sources":["assets/c2f-framework/tbl/Tbl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nconst { ccclass } = cc._decorator;\ninterface _ITbl {\n    keys: Array<string>;\n    data: Array<Array<any>>;\n    index: Record<string, number>;\n    redirect: Record<string, any>;\n}\n@ccclass('Tbl')\nexport class Tbl<T> {\n    cache: T[] = [];\n    name: string;\n    json: _ITbl;\n\n\n    public init(name: string, data: any) {\n        this.name = name;\n        this.json = data;\n    }\n\n    public getLength() {\n        return this.json.data.length;\n    }\n\n    public getDataByIndex(index: number) {\n        return this.warpKeys(index);\n    }\n\n    public getIndex(...keys: string[] | number[]) {\n        let key = keys.join(\"_\");\n        return this.json.index[key];\n    }\n\n    /**\n     * 获取数据\n     *\n     * @param {(...string[] | number[])} keys\n     * @return {*}  {T}\n     * @memberof Tbl\n     */\n    public get(...keys: string[] | number[]): T {\n        let key = keys.join(\"_\");\n        let data: T = this.warpKeys(this.json.index[key]);\n\n        if (!data) {\n            console.error(\"Tbl-> [\" + this.name + \"] 不存在 key = \" + [...keys].toString())\n        }\n\n        return data;\n    }\n\n    private warpKeys(index: number): T {\n        if (this.cache[index] != undefined) {\n            return this.cache[index];\n        } else {\n            let data = this.json.data[index];\n            if (data) {\n                let redirectKeys: string[] = [];\n                let obj: any = {};\n                for (let i = 0; i < this.json.keys.length; i++) {\n                    let key = this.json.keys[i];\n                    obj[key] = data[i];\n                    // 判断是否需要重定向\n                    if (this._needRedirect(key)) {\n                        redirectKeys.push(key);\n                    }\n                }\n                this.cache[index] = obj;\n\n                // 延迟进行重定向，防止死循环\n                for (let j = 0; j < redirectKeys.length; j++) {\n                    const key = redirectKeys[j];\n                    obj[key] = this._redirect(key, obj[key]);\n                }\n                obj = Object.freeze(obj);\n                return obj;\n            }\n        }\n        return null as any;\n    }\n\n    private _needRedirect(key: string) {\n        return key in this.json.redirect;\n    }\n\n    private _redirect(key: string, data: any) {\n        if (key in this.json.redirect) {\n            let tblName = this.json.redirect[key];\n            let tbl = c2f.tbl[tblName];\n            if (tbl) {\n                let finalData = null;\n                if (Array.isArray(data)) {\n                    finalData = tbl.get.apply(tbl, data);\n                } else {\n                    finalData = tbl.get(data);\n                }\n                if (finalData) {\n                    return finalData;\n                }\n            }\n            return null;\n        }\n        return data;\n    }\n    /**\n     * 获取数据数组 - 只读\n     * @return { T[] } \n     * @memberof Tbl\n     */\n    public getDataListReadonly(): T[] {\n        for (let i = 0; i < this.json.data.length; i++) {\n            if (this.cache[i]) {\n                continue;\n            }\n            this.warpKeys(i);\n        }\n        if (!Object.isFrozen(this.cache)) {\n            Object.freeze(this.cache);\n        }\n        return this.cache;\n    }\n\n    /**\n     * 获取数据副本\n     * @return { T[] } \n     * @memberof Tbl\n     */\n    public getDataListCopy(): T[] {\n        let data = this.getDataListReadonly();\n        return JSON.parse(JSON.stringify(data));\n    }\n\n    /**\n     *  过滤出指定数据\n     * @param {(data: T)=> boolean} filterFn\n     * @return { T[] } \n     * @memberof Tbl\n     */\n    public filter(filterFn: (data: T) => boolean): T[] {\n        let list = [];\n        let dataList = this.getDataListReadonly();\n        for (let i = 0; i < dataList.length; i++) {\n            const element = dataList[i];\n            if (filterFn(element)) {\n                list.push(element);\n            }\n        }\n        return list;\n    }\n}\n\ndeclare global {\n    class GTbl<T> extends Tbl<T>{ }\n}\n\nexport { };"]}