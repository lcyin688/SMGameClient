{"version":3,"sources":["assets/c2f-framework/tbl/Alert.ts"],"names":[],"mappings":";;;;;;;AAEQ,IAAA,OAAO,GAAK,EAAE,CAAC,UAAU,QAAlB,CAAmB;AASlC;IAAA;QAQY,UAAK,GAAkB,EAAE,CAAC;IAuJtC,CAAC;IA7JiB,iBAAW,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,yCAAyC;IAGjC,yBAAS,GAAjB,UAAkB,MAAmB;QACjC,IAAI,MAAM,GAAgB,EAAE,CAAC;QAC7B,IAAI,MAAM,CAAC,GAAG,EAAE;YACZ,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SAC3B;QACD,IAAI,MAAM,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SAC7B;QACD,IAAI,MAAM,CAAC,KAAK,EAAE;YACd,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC/B;QACD,IAAI,MAAM,CAAC,aAAa,EAAE;YACtB,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC/C;QACD,IAAI,MAAM,CAAC,YAAY,EAAE;YACrB,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;SAC7C;QACD,IAAI,MAAM,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACrC;QACD,IAAI,MAAM,CAAC,mBAAmB,EAAE;YAC5B,MAAM,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;SAC3D;QACD,IAAI,MAAM,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACrC;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,WAAW;IACX,oBAAI,GAAJ,UAAK,MAAmB;QACpB,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,KAAK,KAAK,EAAE;YACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBAC3B,OAAO,CAAC,IAAI,CAAC,yDAAoB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAG,CAAC,CAAC;gBAC3E,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;IAGhB,CAAC;IAED,iCAAiC;IAC1B,6BAAa,GAApB,UAAqB,GAAoB;QACrC,uBAAuB;QACvB,gDAAgD;QAChD,gCAAgC;QAChC,uBAAuB;QACvB,QAAQ;QACR,IAAI;QACJ,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,8BAA8B;IACvB,2BAAW,GAAlB,UAAmB,GAAqB;QACpC,uBAAuB;QACvB,gDAAgD;QAChD,iBAAiB;QACjB,oCAAoC;QACpC,8BAA8B;QAC9B,YAAY;QACZ,eAAe;QACf,0BAA0B;QAC1B,QAAQ;QACR,IAAI;QACJ,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,6BAA6B;IACtB,wBAAQ,GAAf,UAAgB,GAAoB;QAChC,uBAAuB;QACvB,gDAAgD;QAChD,gCAAgC;QAChC,qFAAqF;QACrF,uBAAuB;QACvB,QAAQ;QACR,WAAW;QACX,oDAAoD;QACpD,oCAAoC;QACpC,iCAAiC;QACjC,sFAAsF;QACtF,2BAA2B;QAC3B,YAAY;QACZ,QAAQ;QACR,IAAI;QACJ,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACI,qBAAK,GAAZ,UAAa,GAAqB;QAC9B,aAAa;QACb,iCAAiC;QACjC,oBAAoB;QACpB,0CAA0C;QAC1C,uCAAuC;QACvC,YAAY;QACZ,QAAQ;QACR,2BAA2B;QAC3B,oDAAoD;QACpD,oCAAoC;QAEpC,kCAAkC;QAClC,YAAY;QACZ,QAAQ;QACR,WAAW;QACX,0BAA0B;QAC1B,IAAI;IACR,CAAC;IAEM,wBAAQ,GAAf;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,2BAAW,GAAlB;QACI,uBAAuB;QACvB,iCAAiC;QACjC,4BAA4B;QAC5B,IAAI;QAEJ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,qBAAK,GAAb,UAAc,MAAmB;QAC7B,wBAAwB;QACxB,iCAAiC;QACjC,uDAAuD;QACvD,6DAA6D;QAC7D,+DAA+D;QAC/D,aAAa;QACb,yDAAyD;QACzD,+DAA+D;QAC/D,aAAa;QACb,QAAQ;QACR,0DAA0D;QAC1D,IAAI;IACR,CAAC;IA5Jc,eAAS,GAAU,IAAI,CAAA;IA8J1C,YAAC;CA/JD,AA+JC,IAAA;AA/JY,sBAAK;AAiKlB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import { Tbl } from \"./Tbl\";\n\nconst { ccclass } = cc._decorator;\n\ndeclare global {\n    interface ITbl { }\n    interface IC2F {\n        alert: Alert;\n    }\n}\n\nexport class Alert {\n    private static _instance: Alert = null\n    public static getInstance(): Alert {\n        if (!this._instance) {\n            this._instance = new Alert();\n        }\n        return this._instance;\n    }\n    private queue: AlertConfig[] = [];\n    //private curPanel: DialoguePopup = null;\n\n\n    private getConfig(config: AlertConfig) {\n        let result: AlertConfig = {};\n        if (config.tag) {\n            result.tag = config.tag;\n        }\n        if (config.text) {\n            result.text = config.text;\n        }\n        if (config.title) {\n            result.title = config.title;\n        }\n        if (config.confirmString) {\n            result.confirmString = config.confirmString;\n        }\n        if (config.cancelString) {\n            result.cancelString = config.cancelString;\n        }\n        if (config.richText) {\n            result.richText = config.richText;\n        }\n        if (config.immediatelyCallback) {\n            result.immediatelyCallback = config.immediatelyCallback;\n        }\n        if (config.isRepeat) {\n            result.isRepeat = config.isRepeat;\n        }\n        return result;\n    }\n\n    /**显示弹出框 */\n    show(config: AlertConfig) {\n        if (config.tag && config.isRepeat === false) {\n            if (this.isRepeat(config.tag)) {\n                console.warn(`弹出框已经存在 config : ${JSON.stringify(this.getConfig(config))}`);\n                return false;\n            }\n        }\n        this.queue.push(config);\n        this._show(config);\n        return true;\n\n\n    }\n\n    /**@description 当前显示的弹出框是否是tag */\n    public isCurrentShow(tag: string | number) {\n        // if (this.curPanel) {\n        //     let current = this.curPanel.model.config;\n        //     if (current.tag == tag) {\n        //         return true;\n        //     }\n        // }\n        return false;\n    }\n\n    /**@description 获取当前显示弹出的配置 */\n    public currentShow(tag?: string | number) {\n        // if (this.curPanel) {\n        //     let current = this.curPanel.model.config;\n        //     if (tag) {\n        //         if (current.tag == tag) {\n        //             return current;\n        //         }\n        //     } else {\n        //         return current;\n        //     }\n        // }\n        return null;\n    }\n\n    /**@description 是否有该类型的弹出框 */\n    public isRepeat(tag: string | number) {\n        // if (this.curPanel) {\n        //     let current = this.curPanel.model.config;\n        //     if (current.tag == tag) {\n        //         console.warn(`重复的弹出框 config ; ${JSON.stringify(this.getConfig(current))}`)\n        //         return true;\n        //     }\n        // } else {\n        //     for (let i = 0; i < this.queue.length; i++) {\n        //         let data = this.queue[i];\n        //         if (data.tag == tag) {\n        //             console.warn(`重复的弹出框 config ; ${JSON.stringify(this.getConfig(data))}`)\n        //             return true;\n        //         }\n        //     }\n        // }\n        return false;\n    }\n\n    /**@description 关闭当前显示的 \n     * @param tag 可不传，关闭当前的弹出框，否则关闭指定tag的弹出框\n     */\n    public close(tag?: string | number) {\n        // if (tag) {\n        //     let j = this.queue.length;\n        //     while (j--) {\n        //         if (this.queue[j].tag == tag) {\n        //             this.queue.splice(j, 1);\n        //         }\n        //     }\n        //     if (this.curPanel) {\n        //         let current = this.curPanel.model.config;\n        //         if (current.tag == tag) {\n\n        //             this.finishAlert();\n        //         }\n        //     }\n        // } else {\n        //     this.finishAlert();\n        // }\n    }\n\n    public closeAll() {\n        this.queue = [];\n        this.finishAlert();\n    }\n\n    public finishAlert() {\n        // if (this.curPanel) {\n        //     this.curPanel.closeView();\n        //     this.curPanel = null;\n        // }\n\n        let config = this.queue.shift();\n        if (this.queue.length != 0) {\n            this._show(this.queue[0]);\n            return this.queue[0];\n        }\n        return config;\n    }\n\n    private _show(config: AlertConfig) {\n        // if (!this.curPanel) {\n        //     let uic: PopViewParams = {\n        //         onUIAdded: (node: cc.Node, params: any) => {\n        //             // console.error(\" onUIAdded params \", params)\n        //             this.curPanel = node.getComponent(DialoguePopup)\n        //         },\n        //         onUIRemoved: (node: cc.Node, params: any) => {\n        //             // console.error(\" onUIRemoved  params\", params)\n        //         },\n        //     }\n        //     c2f.gui.open(MainPackUI.DialoguePopup, config, uic)\n        // }\n    }\n\n}\n\nc2f.alert = Alert.getInstance();\n"]}