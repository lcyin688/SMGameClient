{"version":3,"sources":["assets/c2f-framework/gui/layer/UIPrefabBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { UIBase } from \"./UIBase\";\n\nconst { ccclass } = cc._decorator;\n\n/** 预制组件基类 */\n@ccclass\nexport class UIPrefabBase extends UIBase {\n\n    /** 摊平的节点集合（不能重名） */\n    private mapNode: Map<string, cc.Node> = new Map();\n    /** 红点节点 */\n    private mapRedI: Map<string, number> = new Map();\n\n    /** 通过节点名获取预制上的节点，整个预制不能有重名节点 */\n    public get(name: string): cc.Node | undefined {\n        return this.mapNode.get(name);\n    }\n\n    /** 映射节点到对象 */\n    public initViewProperty() {\n        if (this.mapNode.size <= 0) {\n            c2f.utils.view.nodeTreeInfoLite(this.node, this.mapNode);\n            this.initProperty();\n        }\n    }\n\n    protected onLoad() {\n        this.initViewProperty();\n        this.initDotForUI();\n        this.autoAddTopSafeAreaComp();\n    }\n\n    protected onEnable(): void {\n        if (super.onEnable) {\n            super.onEnable();\n        }\n        this.updateRedDot();\n    }\n\n    protected initProperty() {\n    }\n\n    protected initDotForUI() {\n        if (!c2f.dotMgr.root) {\n            return;\n        }\n        let compName = c2f.utils.view.getComponentName(this);\n        if (compName.endsWith('View')) {\n            compName = compName.substring(0, compName.length - 4);\n        }\n        const allConf = szg.cfg.getCfgData('redDots');\n        if (allConf && allConf.views && allConf.views[compName]) {\n            const node2Id: { [key: string]: number } = allConf.views[compName];\n            for (let key in node2Id) {\n                const id = node2Id[key];\n                if (id <= 0) {\n                    continue;\n                }\n                let dstNode = this.mapNode.get(key);\n                if (dstNode) {\n                    c2f.dotMgr.setDisplayProxy(id, dstNode, null, null);\n                    this.mapRedI.set(key, id);\n                } else {\n                    cc.warn(`auto add redDot in [${compName}], dont find node: [${key}]`);\n                }\n            }\n        }\n    }\n\n    protected updateRedDot() {\n        if (!this.mapRedI) {\n            return;\n        }\n        this.mapRedI.forEach((v, k) => {\n            c2f.dotMgr.refreshRedDotById(v);\n        })\n    }\n\n    protected onDestroy() {\n        // 节点引用数据清除\n        this.mapNode.clear();\n        this.mapRedI.clear();\n        super.onDestroy();\n    }\n\n    private autoAddTopSafeAreaComp() {\n        if (!this.mapNode) {\n            return;\n        }\n        let topNode = this.mapNode.get('_top_') || this.mapNode.get('top');\n        if (!topNode) {\n            return;\n        }\n        let widget = topNode.getComponent(cc.Widget);\n        if (!widget) {\n            return;\n        }\n        let safeAreaComp = topNode.getComponent('C2FSafeArea');\n        if (!safeAreaComp) {\n            safeAreaComp = topNode.addComponent('C2FSafeArea');\n            safeAreaComp.setTopEnable(true);\n        }\n    }\n}"]}