{"version":3,"sources":["assets/c2f-framework/gui/layer/LayerUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\n * UI基础层，允许添加多个预制件节点\n * add          : 添加一个预制件节点到层容器中，该方法将返回一个唯一uuid来标识该操作Node节点。\n * delete       : 根据uuid删除Node节点，如果节点还在队列中也会被删除, 删除节点可以用gui.delete(node)或this.node.destroy()\n * deleteByUuid : 根据预制件路径删除，预制件如在队列中也会被删除，如果该预制件存在多个也会一起删除。\n * get          : 根据uuid获取Node节点，如果节点不存在或者预制件还在队列中，则返回null 。\n * getByUuid    : 根据预制件路径获取当前显示的该预制件的所有Node节点数组。\n * has          : 判断当前层是否包含 uuid或预制件路径对应的Node节点。\n * find         : 判断当前层是否包含 uuid或预制件路径对应的Node节点。\n * size         : 当前层上显示的所有Node节点数。\n * clear        : 清除所有Node节点，队列当中未创建的任务也会被清除。\n */\nimport BlurScreen from \"../../component/common/BlurScreen\";\nimport { C2FConst } from \"../../define/C2FConst\";\nimport { LayerType, UICallbacks, UIConfig, ViewParams } from \"../../define/C2FUIDef\";\nimport { DelegateComponent } from \"./DelegateComponent\";\nimport { UIModelBase } from \"./UIModelBase\";\nimport { UIViewBase } from \"./UIViewBase\";\n\n/** 界面层对象 */\nexport class LayerUI extends cc.Node {\n    /** 界面节点集合 */\n    protected ui_nodes = new Map<string, ViewParams>();\n    /** 被移除的界面缓存数据 */\n    protected ui_cache = new Map<string, ViewParams>();\n    /** 顶部信息 */\n    private topPanel: cc.Node;\n    /** 模糊背景 */\n    private blurScn: BlurScreen;\n    /** 被隐藏的正在出入场的view */\n    private arrPlayingView: cc.Node[];\n    /** 正在添加的界面 */\n    private addingView: string[];\n\n    /**\n     * UI基础层，允许添加多个预制件节点\n     * @param name 该层名\n     * @param container 容器Node\n     */\n    constructor(name: string) {\n        super(name);\n\n        let widget: cc.Widget = this.addComponent(cc.Widget);\n        widget.isAlignLeft = widget.isAlignRight = widget.isAlignTop = widget.isAlignBottom = true;\n        widget.left = widget.right = widget.top = widget.bottom = 0;\n        widget.alignMode = cc.Widget.AlignMode.ON_WINDOW_RESIZE;\n        widget.enabled = true;\n\n        this.arrPlayingView = [];\n        this.addingView = [];\n\n        this.createBlur();\n    }\n\n    private createBlur() {\n        if (this.name != LayerType.UI) {\n            return;\n        }\n        //模糊背景节点\n        let blurNode = new cc.Node('blurScreen');\n        this.addChild(blurNode);\n        this.blurScn = blurNode.addComponent(BlurScreen);\n        this.blurScn.initUI();\n    }\n\n    /** 构造一个唯一标识UUID */\n    protected getUuid(prefabPath: string): string {\n        let uuid = `${this.name}_${prefabPath}`;\n        return uuid.replace(/\\//g, \"_\");\n    }\n\n    /** 获得窗口参数 */\n    public getViewParam(config: UIConfig) {\n        let prefabPath = config.prefab;\n        let uuid = this.getUuid(prefabPath);\n        let viewParams = this.ui_nodes.get(uuid);\n        return viewParams;\n    }\n\n    /** 设置头部节点 */\n    public setTopPanel<T extends cc.Node>(panel: T) {\n        this.topPanel = panel;\n        this.topPanel.parent = this;\n    }\n\n    /**\n     * 添加一个预制件节点到层容器中，该方法将返回一个唯一`uuid`来标识该操作节点\n     * @param prefabPath 预制件路径\n     * @param params     自定义参数\n     * @param callbacks  回调函数对象，可选\n     */\n    public add(config: UIConfig, params?: any, callbacks?: UICallbacks): string {\n        console.log('open layer:', config.prefab);\n        let prefabPath = config.prefab;\n        let uuid = this.getUuid(prefabPath);\n        let viewParams = this.ui_nodes.get(uuid);\n        if (viewParams && viewParams.valid) {\n            cc.warn(`路径为【${prefabPath}】的预制重复加载`);\n            if (viewParams.node && viewParams.node.isValid) {\n                this.removeAboveUI(prefabPath);\n                let clsName = this.getMVCClsName(prefabPath);\n                let comp = viewParams.node.getComponent(clsName);\n                if (comp && comp['onViewRefresh']) {\n                    comp['onViewRefresh'](params);\n                }\n            }\n            return \"\";\n        }\n        if (viewParams == null) {\n            viewParams = new ViewParams();\n            viewParams.uuid = uuid;\n            viewParams.uiCfg = config;\n            viewParams.prefabPath = prefabPath;\n\n            viewParams.bundle = config.bundle;\n            this.ui_nodes.set(viewParams.uuid, viewParams);\n        }\n        viewParams.params = params || {};\n        viewParams.callbacks = callbacks || {};\n        viewParams.valid = true;\n\n        this.load(viewParams, config.bundle)\n\n        return uuid;\n    }\n\n    /**\n     * 加载界面资源\n     * @param viewParams 显示参数\n     * @param bundle     远程资源包名，如果为空就是默认本地资源包\n     */\n    protected load(viewPa: ViewParams, bundle?: string) {\n        let vp: ViewParams = this.ui_nodes.get(viewPa.uuid)!;\n        if (vp && vp.node) {\n            this.createNode(vp);\n        }\n        else {\n            //由于异步，加载完成后在此列表中的界面才加进游戏\n            this.addingView.push(viewPa.prefabPath);\n\n            // 获取预制件资源\n            bundle = bundle || \"resources\";\n            c2f.res.load(bundle, viewPa.prefabPath, this.afterLoadPrefab.bind(this, viewPa));\n        }\n    }\n\n    private afterLoadPrefab(viewPa: ViewParams, err: Error | null, res: cc.Prefab) {\n        if (err) {\n            cc.error(err);\n        }\n        if (this.addingView.indexOf(viewPa.prefabPath) >= 0) {\n            let childNode: cc.Node = c2f.res.instantiate(res);\n            viewPa.node = childNode;\n            let comp: DelegateComponent = childNode.addComponent(DelegateComponent);\n            comp.viewParams = viewPa;\n            //\n            this.addMVCComponet(childNode, viewPa.prefabPath)\n            this.createNode(viewPa);\n            //\n            c2f.utils.arr.fastRemove(this.addingView, viewPa.prefabPath);\n        } else {\n            cc.warn(`failed add view [${viewPa.prefabPath}], don't find in addingView! addingView:`, this.addingView);\n        }\n    }\n\n    private getMVCClsName(prefabPath: string) {\n        let clsName = prefabPath;\n        let idx = prefabPath.lastIndexOf('/');\n        if (idx >= 0) {\n            clsName = prefabPath.substring(idx + 1);\n        }\n        if (clsName.startsWith('P_') || clsName.startsWith('V_') || clsName.startsWith('F_')) {\n            clsName = clsName.substring(2);\n        }\n        return clsName;\n    }\n\n    /** 为view添加mvc组件 */\n    protected addMVCComponet(node: cc.Node, prefabPath: string) {\n        let clsName = this.getMVCClsName(prefabPath);\n        let model = node.addComponent(`${clsName}Model`);\n        let view = node.addComponent(`${clsName}View`) as UIViewBase;\n        let controller = node.addComponent(clsName);\n        controller.model = model as UIModelBase;\n        controller.view = view;\n    }\n\n    /**\n     * 创建界面节点\n     * @param viewParams  视图参数\n     */\n    protected createNode(viewPa: ViewParams) {\n        viewPa.valid = true;\n\n        let children = this.__nodes();\n        let zFloor = 0;\n        const len = children.length;\n        if (len > 0) {\n            zFloor = Math.floor((children[len - 1].node.zIndex || 0) / 10);\n        }\n        viewPa.node.zIndex = (zFloor + 1) * 10;\n        viewPa.node.parent = this;\n\n        let comp: DelegateComponent = viewPa.node.getComponent(DelegateComponent)!;\n        comp.add();\n\n        //弹出界面可见性刷新\n        this.refreshLayerUIVisible();\n        //按配置播放背景音乐\n        let mvcClsName = this.getMVCClsName(viewPa.prefabPath);\n        if (C2FConst.UIBgmNames.hasOwnProperty(mvcClsName)) {\n            let url = C2FConst.UIMusicPath + C2FConst.UIBgmNames[mvcClsName];\n            c2f.audio.playBgmURL(url);\n        }\n        //弹窗音效\n        if (viewPa.uiCfg && viewPa.uiCfg.layer != LayerType.UI) {\n            if (C2FConst.UIViewEftName.hasOwnProperty(mvcClsName)) {\n                let file = C2FConst.UIViewEftName[mvcClsName];\n                if (file.length > 0) {\n                    let url = C2FConst.UIAudioPath + C2FConst.UIViewEftName[mvcClsName];\n                    c2f.audio.playSfxURL(url);\n                }\n            } else {\n            }\n        }\n        return viewPa.node;\n    }\n\n    /** 刷新子节点可见性：\n     * 1、最顶层全屏界面显示，其后面的隐藏\n     * 2、topPanel的层级紧贴其附属层级\n     */\n    private refreshLayerUIVisible() {\n        if (this.name != LayerType.UI) {\n            return;\n        }\n\n        let children = this.__nodes();\n        let lastIdx = children.length - 1;\n\n        let findFull = false;\n        let topOwned = null;\n        for (let i = lastIdx; i >= 0; --i) {\n            const one = children[i];\n            if (!one.isValid) {\n                continue;\n            }\n            one.node.active = !findFull;\n            const viewPa = one.viewParams;\n            //topPanel归属处理\n            if (this.topPanel && !topOwned && viewPa.uiCfg.showTop) {\n                topOwned = one;\n                this.topPanel.zIndex = one.node.zIndex + 1;\n                this.topPanel.active = one.node.active;\n            }\n            //当前为最上层显示界面时，当前为全屏界面则后面全部隐藏，当前为非全屏时，创建模糊背景后全部隐藏。\n            if (one.node.active) {\n                let blurEnable = true;\n                if (viewPa.uiCfg) {\n                    blurEnable = !viewPa.uiCfg.noBlurScn;\n                }\n                if (blurEnable) {\n                    let isPopLayer = !viewPa.uiCfg || viewPa.uiCfg.layer != LayerType.UI;\n                    if (this.blurScn) {\n                        this.blurScn.node.active = isPopLayer;\n                        if (isPopLayer) {\n                            let preFloorW = '';\n                            if (i > 1) {\n                                preFloorW = children[i - 1].node.name;\n                            }\n                            this.blurScn.addBlurBg(one.node.name, () => { }, preFloorW);\n                            this.blurScn.node.zIndex = one.node.zIndex - 1;\n                        }\n                    }\n                    findFull = true;\n                } else {\n                    findFull = viewPa.uiCfg && viewPa.uiCfg.layer == LayerType.UI;\n                }\n            }\n        }\n    }\n\n    /**\n     * 根据预制件路径删除，预制件如在队列中也会被删除，如果该预制件存在多个也会一起删除\n     * @param prefabPath   预制路径\n     * @param isDestroy    移除后是否释放\n     */\n    public remove(prefabPath: string, isDestroy: boolean): void {\n        // 验证是否删除后台缓存界面\n        if (isDestroy) this.removeCache(prefabPath);\n\n        let targetName = '';\n        // 界面移出舞台\n        let children = this.__nodes();\n        for (let i = 0; i < children.length; i++) {\n            let dstComp = children[i];\n            let viewPa = dstComp.viewParams;\n            if (viewPa.prefabPath === prefabPath) {\n                if (isDestroy) {\n                    // 直接释放界面\n                    this.ui_nodes.delete(viewPa.uuid);\n                }\n                else {\n                    // 不释放界面，缓存起来待下次使用\n                    this.ui_cache.set(viewPa.prefabPath, viewPa);\n                }\n\n                dstComp.remove(isDestroy);\n                targetName = dstComp.node.name;\n                viewPa.valid = false;\n            }\n        }\n        this.refreshLayerUIVisible();\n        if (this.blurScn) {\n            this.blurScn.removedBlurBg(targetName);\n        }\n        //按配置结束背景音乐\n        let mvcClsName = this.getMVCClsName(prefabPath);\n        if (C2FConst.UIBgmNames.hasOwnProperty(mvcClsName)) {\n            c2f.audio.endCurMusic();\n        }\n    }\n\n    /** 移除目标界面之上的所有界面 */\n    public removeAboveUI(prefabPath: string) {\n        while (true) {\n            let children = this.__nodes();\n            let lastIdx = children.length - 1;\n            const lastItem = children[lastIdx];\n            const lastViewPa = lastItem.viewParams;\n            if (lastViewPa.prefabPath == prefabPath) {\n                break;\n            }\n            this.remove(lastViewPa.prefabPath, true);\n        }\n    }\n\n    /**\n     * 根据唯一标识删除节点，如果节点还在队列中也会被删除\n     * @param uuid  唯一标识\n     */\n    protected removeByUuid(uuid: string, isDestroy: boolean): void {\n        let viewPa = this.ui_nodes.get(uuid);\n        if (viewPa) {\n            if (isDestroy)\n                this.ui_nodes.delete(viewPa.uuid);\n\n            let childNode = viewPa.node;\n            if (childNode && childNode.isValid) {\n                let comp = childNode.getComponent(DelegateComponent)!;\n                comp.remove(isDestroy);\n            }\n            this.refreshLayerUIVisible();\n        }\n    }\n\n    /** \n     * 删除缓存的界面，当缓存界面被移除舞台时，可通过此方法删除缓存界面\n     */\n    private removeCache(prefabPath: string) {\n        let viewPa = this.ui_cache.get(prefabPath);\n        if (viewPa) {\n            if (viewPa.node && viewPa.node.isValid) {\n                let childNode = viewPa.node;\n                let comp = childNode.getComponent(DelegateComponent)!\n                comp.remove(true);\n            } else {\n                cc.warn('removeCache: dst node is invalid!');\n            }\n\n            this.ui_nodes.delete(viewPa.uuid);\n            this.ui_cache.delete(prefabPath);\n        }\n    }\n\n    /**\n     * 根据唯一标识获取节点，如果节点不存在或者还在队列中，则返回null \n     * @param uuid  唯一标识\n     */\n    public getByUuid(uuid: string): cc.Node {\n        let children = this.__nodes();\n        for (let comp of children) {\n            if (comp.viewParams && comp.viewParams.uuid === uuid) {\n                return comp.node;\n            }\n        }\n        return null!;\n    }\n\n    /**\n     * 根据预制件路径获取当前显示的该预制件的所有Node节点数组\n     * @param prefabPath \n     */\n    public get(prefabPath: string): Array<cc.Node> {\n        let arr: Array<cc.Node> = [];\n        let children = this.__nodes();\n        for (let comp of children) {\n            if (comp.viewParams.prefabPath === prefabPath) {\n                arr.push(comp.node);\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * 判断当前层是否包含 uuid或预制件路径对应的Node节点\n     * @param prefabPathOrUUID 预制件路径或者UUID\n     */\n    public has(prefabPathOrUUID: string): boolean {\n        let children = this.__nodes();\n        for (let comp of children) {\n            if (comp.viewParams.uuid === prefabPathOrUUID || comp.viewParams.prefabPath === prefabPathOrUUID) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 获取当前层包含指定正则匹配的Node节点。\n     * @param prefabPathReg 匹配预制件路径的正则表达式对象\n     */\n    public find(prefabPathReg: RegExp): cc.Node[] {\n        let arr: cc.Node[] = [];\n        let children = this.__nodes();\n        for (let comp of children) {\n            if (prefabPathReg.test(comp.viewParams.prefabPath)) {\n                arr.push(comp.node);\n            }\n        }\n        return arr;\n    }\n\n    /** 获取当前层所有窗口事件触发组件 */\n    protected __nodes(): Array<DelegateComponent> {\n        let result: Array<DelegateComponent> = [];\n        let children = this.children;\n        for (let i = 0; i < children.length; i++) {\n            let comp = children[i].getComponent(DelegateComponent);\n            if (comp && comp.viewParams && comp.viewParams.valid && cc.isValid(comp)) {\n                result.push(comp);\n            }\n        }\n        return result;\n    }\n\n    /** 层节点数量 */\n    public size(): number {\n        return this.children.length;\n    }\n\n    /**\n     * 清除所有节点，队列当中的也删除\n     * @param isDestroy  移除后是否释放\n     */\n    public clearUI(isDestroy: boolean, excludePrefab: string[] = []): void {\n        // 清除所有显示的界面\n        this.ui_nodes.forEach((value: ViewParams, key: string) => {\n            let needDel = true;\n            if (excludePrefab.length > 0) {\n                needDel = excludePrefab.indexOf(value.prefabPath) < 0;\n            }\n            if (needDel) {\n                this.removeByUuid(value.uuid, isDestroy);\n                value.valid = false;\n                this.ui_nodes.delete(key);\n            }\n        });\n\n        // 清除缓存中的界面\n        if (isDestroy) {\n            this.ui_cache.forEach((value: ViewParams, prefabPath: string) => {\n                this.removeCache(prefabPath);\n            });\n        }\n        //\n        if (this.blurScn) {\n            this.blurScn.cleanBlurBg();\n        }\n        //清空adding\n        this.addingView = [];\n    }\n\n    /** 获得节点View参数 */\n    public getPrefabUrlByNode(node: cc.Node) {\n        let prefabUrl: string = null;\n        this.ui_nodes.forEach((value: ViewParams, key: string) => {\n            if (value.node == node) {\n                prefabUrl = value.prefabPath;\n            }\n        });\n        return prefabUrl;\n    }\n\n    public getTopsideView() {\n        let topside: cc.Node = null;\n        let children = this.__nodes();\n        let lastIdx = children.length - 1;\n        for (let i = lastIdx; i >= 0; --i) {\n            const one = children[i];\n            if (!one.isValid) {\n                continue;\n            }\n            const viewPa = one.viewParams;\n            if (!viewPa.valid) {\n                continue;\n            }\n            topside = one.node;\n            break;\n        }\n        return topside;\n    }\n\n    /** 隐藏正在播放出入场动画的view */\n    public hideAnimaPlayingView() {\n        let children = this.__nodes();\n        for (let i = 0; i < children.length; i++) {\n            let dstComp = children[i];\n            if (!dstComp.node.active) {\n                continue;\n            }\n            let viewPa = dstComp.viewParams;\n            if (!viewPa.valid) {\n                continue;\n            }\n            let prefComp = dstComp.node.getComponent(UIViewBase)\n            if (prefComp && prefComp.animaPlaying) {\n                dstComp.node.active = false;\n                this.arrPlayingView.push(dstComp.node);\n            }\n        }\n    }\n\n    /** 显示正在播放出入场动画的view */\n    public showAnimaPlayingView() {\n        for (let one of this.arrPlayingView) {\n            one.active = true;\n        }\n        this.arrPlayingView = [];\n    }\n}"]}