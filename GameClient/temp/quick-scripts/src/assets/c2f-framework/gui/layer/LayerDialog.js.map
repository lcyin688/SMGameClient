{"version":3,"sources":["assets/c2f-framework/gui/layer/LayerDialog.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,kDAA0E;AAC1E,2CAA0C;AAE1C;;GAEG;AACH;IAAiC,+BAAU;IAA3C;QAAA,qEA8DC;QA7DG,aAAa;QACL,WAAK,GAAsB,EAAE,CAAC;QACtC,6BAA6B;QACrB,kBAAY,GAAe,EAAE,CAAC;;IA0D1C,CAAC;IAtDU,yBAAG,GAAV,UAAW,MAAgB,EAAE,MAAY,EAAE,SAAuB;QAAlE,iBAoCC;QAnCG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QAE1B,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAA;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,UAAU,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,IAAI,qBAAU,EAAE,CAAC;YAC9B,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC3C,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;YACnC,UAAU,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;YAEvC,IAAI,iBAAe,GAAG,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;YACvD,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,UAAC,IAAoB,EAAE,MAAW;gBACjE,IAAI,iBAAe,EAAE;oBACjB,iBAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBACjC;gBACD,UAAU,CAAC;oBACP,KAAI,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC,EAAE,CAAC,CAAC,CAAC;YACV,CAAC,CAAA;YACD,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAClD;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACpC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,UAAU,EAAE;gBACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;aACxC;SACJ;aAAM;YACH,UAAU,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,qCAAe,GAAzB;QACI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;IAC3D,CAAC;IAEO,0BAAI,GAAZ;QACI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAG,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAChD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACjC;iBACI;gBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC3B;SACJ;IACL,CAAC;IACL,kBAAC;AAAD,CA9DA,AA8DC,CA9DgC,uBAAU,GA8D1C;AA9DY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["import { UICallbacks, UIConfig, ViewParams } from \"../../define/C2FUIDef\";\nimport { LayerPopUp } from \"./LayerPopup\";\n\n/*\n * 模式弹窗层，该层的窗口同时只能显示一个，删除以后会自动从队列当中取一个弹窗，直到队列为空\n */\nexport class LayerDialog extends LayerPopUp {\n    /** 窗口数据队列 */\n    private queue: Array<ViewParams> = [];\n    /** 窗口参数队列 - 预防同一资源的窗口参数覆盖 */\n    private queue_params: Array<any> = [];\n    /** 当前窗口数据 */\n    private current!: ViewParams;\n\n    public add(config: UIConfig, params?: any, callbacks?: UICallbacks): string {\n        this.black.enabled = true;\n\n        let prefabPath = config.prefab\n        let uuid = this.getUuid(prefabPath);\n        let viewParams = this.ui_nodes.get(uuid);\n        if (viewParams == null) {\n            viewParams = new ViewParams();\n            viewParams.uuid = this.getUuid(prefabPath);\n            viewParams.prefabPath = prefabPath;\n            viewParams.callbacks = callbacks || {};\n\n            let onRemove_Source = viewParams.callbacks.onUIRemoved;\n            viewParams.callbacks.onUIRemoved = (node: cc.Node | null, params: any) => {\n                if (onRemove_Source) {\n                    onRemove_Source(node, params);\n                }\n                setTimeout(() => {\n                    this.next();\n                }, 0);\n            }\n            viewParams.valid = true;\n            this.ui_nodes.set(viewParams.uuid, viewParams);\n        }\n\n        if (this.current && this.current.valid) {\n            if (this.current.prefabPath != prefabPath) {\n                this.queue.push(viewParams);\n                this.queue_params.push(params || {});\n            }\n        } else {\n            viewParams.params = params || {};\n            this.current = viewParams;\n            this.load(viewParams, config.bundle);\n        }\n        return uuid;\n    }\n\n    protected setBlackDisable() {\n        if (this.queue.length == 0) this.black.enabled = false;\n    }\n\n    private next() {\n        if (this.queue.length > 0) {\n            this.current = this.queue.shift()!;\n            this.current.params = this.queue_params.shift();\n            if (this.current.node) {\n                this.createNode(this.current);\n            }\n            else {\n                this.load(this.current);\n            }\n        }\n    }\n}"]}