{"version":3,"sources":["assets/c2f-framework/config/WebQueryConfig.ts"],"names":[],"mappings":";;;;;;;AAAA,+CAA8C;AAE9C;;;;GAIG;AACH;IAsBI,WAAW;IACX;QAPQ,UAAK,GAAQ,IAAI,CAAC;QAQtB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,OAAO;SACV;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE7B,iCAAiC;QACjC,kDAAkD;QAClD,IAAI;QAEJ,wCAAwC;IAC5C,CAAC;IAjCD,sBAAW,iCAAK;QADhB,aAAa;aACb;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAGD,sBAAW,oCAAQ;QADnB,YAAY;aACZ;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC;;;OAAA;IAGD,sBAAW,gCAAI;QADf,SAAS;aACT;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,mBAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;QACzD,CAAC;;;OAAA;IAID,sBAAW,gCAAI;QADf,iBAAiB;aACjB;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAiBO,iCAAQ,GAAhB;QACI,IAAI,OAAO,MAAM,KAAK,QAAQ;YAAE,OAAO,EAAE,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ;YAAE,OAAO,EAAE,CAAC;QAEhC,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnD,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;YAC3B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,GAAG,GAAQ,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACtC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,SAAS;iBACZ;gBACD,IAAI,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/B,GAAG,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC;aACrE;YACD,OAAO,GAAG,CAAC;SACd;aACI;YACD,OAAO,EAAE,CAAC;SACb;IACL,CAAC;IACL,qBAAC;AAAD,CA9DA,AA8DC,IAAA;AA9DY,wCAAc","file":"","sourceRoot":"/","sourcesContent":["import { C2FConst } from \"../define/C2FConst\";\n\n/**\n * 获取和处理浏览器地址栏参数\n * @example\n * config.query.data.username\n */\nexport class WebQueryConfig {\n    /** 调试模式开关 */\n    public get debug(): string {\n        return this._data[\"debug\"];\n    }\n\n    /** 玩家帐号名 */\n    public get username(): string {\n        return this._data[\"username\"];\n    }\n\n    /** 语言 */\n    public get lang(): string {\n        return this._data[\"lang\"] || C2FConst.LanguageKey.zh;\n    }\n\n    private _data: any = null;\n    /** 浏览器地址栏原始参数 */\n    public get data(): any {\n        return this._data;\n    }\n\n    /** 构造函数 */\n    constructor() {\n        if (!cc.sys.isBrowser) {\n            this._data = {};\n            return;\n        }\n        this._data = this.parseUrl();\n\n        // if (!this._data[\"username\"]) {\n        //     this._data[\"username\"] = StringUtil.guid();\n        // }\n\n        // YT.log.logConfig(this._data, \"查询参数\");\n    }\n\n    private parseUrl() {\n        if (typeof window !== \"object\") return {};\n        if (!window.document) return {};\n\n        let url = window.document.location.href.toString();\n        let u = url.split(\"?\");\n        if (typeof (u[1]) == \"string\") {\n            u = u[1].split(\"&\");\n            let get: any = {};\n            for (let i = 0, l = u.length; i < l; ++i) {\n                let j = u[i];\n                let x = j.indexOf(\"=\");\n                if (x < 0) {\n                    continue;\n                }\n                let key = j.substring(0, x);\n                let value = j.substring(x + 1);\n                get[decodeURIComponent(key)] = value && decodeURIComponent(value);\n            }\n            return get;\n        }\n        else {\n            return {};\n        }\n    }\n}"]}