{"version":3,"sources":["assets/c2f-framework/core/audio/AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { C2FConst } from \"../../define/C2FConst\";\nimport { C2FTween } from \"../timer/C2FTween\";\n\n/**\n * 音效类型\n */\nexport enum SfxType {\n    NORMAL,\n    UI\n}\n\n/**\n * 音频播放参数\n */\nexport interface AudioPlayArgs {\n    /** AudioClip */\n    clip: cc.AudioClip;\n    /** 是否循环，默认false */\n    loop?: boolean;\n    /** 音量渐变时长，单位s。默认0 */\n    fadeDuration?: number;\n    /** 播放结束的回调 */\n    finishCall?: Function;\n}\n\nenum AudioMessage {\n    /** 游戏从后台进入 */\n    Audio = \"Audio.Config\",\n}\n\n/**\n * Audio缓存数据\n */\ninterface AudioData {\n    /** audioID */\n    id: number;\n    /** 用于单独控制的音量 */\n    volume: number;\n    /** 音量渐变tween对象 */\n    tween: C2FTween<AudioData>;\n}\n\n/**\n * 单个AudioClip对应的sfx(音效)缓存数据\n */\ninterface SfxData {\n    /** 已缓存的音效数据数组 */\n    audioList: AudioData[];\n    /** 此音效最大同时播放的数量 */\n    maxNum: number;\n    /** 超过最大数量时是否stop未播完的音效并缓存新的音效 */\n    overStop: boolean;\n}\n\nclass AudioConfig {\n    static bgmVolume: number = 1;\n    static sfxVolume: number = 1;\n    static bgmOff: boolean = false;\n    static sfxOff: boolean = false;\n\n    static saveCfg() {\n        let info: any = {\n            bv: this.bgmVolume,\n            sv: this.sfxVolume,\n            bof: this.bgmOff,\n            sof: this.sfxOff\n        }\n        c2f.storage.setPlainItem(AudioMessage.Audio, JSON.stringify(info));\n    }\n\n    static loadCfg() {\n        let info: any = null;\n        try {\n            info = JSON.parse(c2f.storage.getPlainItem(AudioMessage.Audio, ''));\n        } catch (error) {\n        }\n        if (info) {\n            this.bgmVolume = info.bv;\n            this.sfxVolume = info.sv;\n            this.bgmOff = info.bof;\n            this.sfxOff = info.sof;\n        }\n    }\n}\n\n/**\n * 音频管理类\n */\nclass AudioManager {\n    /** 缓存的bgm数据 */\n    private _bgmMap: Map<cc.AudioClip, AudioData>;\n    /** 缓存的普通音效数据 */\n    private _normalSfxMap: Map<cc.AudioClip, SfxData>;\n    /** 缓存的ui音效数据 */\n    private _uiSfxMap: Map<cc.AudioClip, SfxData>;\n    /** 背景列表 */\n    private bgmList: string[] = [];\n    /** 背景音乐延时timer */\n    private bgmDelayTimer: any = null;\n\n    constructor() {\n        this._bgmMap = new Map();\n        this._normalSfxMap = new Map();\n        this._uiSfxMap = new Map();\n        this.bgmList = [];\n\n        AudioConfig.loadCfg();\n    }\n\n\n    /** 全局bgm音量 */\n    public get bgmVolume(): number { return AudioConfig.bgmVolume; }\n    public set bgmVolume(volume: number) {\n        if (AudioConfig.bgmVolume === volume) {\n            return;\n        }\n        AudioConfig.bgmVolume = cc.misc.clampf(volume, 0, 1);\n        this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\n            cc.audioEngine.setVolume(audioData.id, AudioConfig.bgmVolume * audioData.volume);\n        });\n        this.bgmOff = volume < 0.01;\n        AudioConfig.saveCfg();\n    }\n\n    /** 全局sfx音量 */\n    public get sfxVolume(): number { return AudioConfig.sfxVolume; }\n    public set sfxVolume(volume: number) {\n        if (AudioConfig.sfxVolume === volume) {\n            return;\n        }\n        AudioConfig.sfxVolume = cc.misc.clampf(volume, 0, 1);\n        this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n            data.audioList.forEach((audioData: AudioData) => {\n                cc.audioEngine.setVolume(audioData.id, AudioConfig.sfxVolume * audioData.volume);\n            });\n        });\n        this._uiSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n            data.audioList.forEach((audioData: AudioData) => {\n                cc.audioEngine.setVolume(audioData.id, AudioConfig.sfxVolume * audioData.volume);\n            });\n        });\n        this.sfxOff = volume < 0.01;\n        AudioConfig.saveCfg();\n    }\n\n\n    /** bgm是否关闭 */\n    public get bgmOff(): boolean { return AudioConfig.bgmOff; }\n    public set bgmOff(isOff: boolean) {\n        if (AudioConfig.bgmOff === isOff) {\n            return;\n        }\n        AudioConfig.bgmOff = isOff;\n        if (AudioConfig.bgmOff) {\n            this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\n                this.stop(audioData);\n            });\n            this._bgmMap.clear();\n        } else {\n            this.playRecentBgm();\n        }\n    }\n\n    /** sfx是否关闭 */\n    public get sfxOff(): boolean { return AudioConfig.sfxOff; }\n    public set sfxOff(isOff: boolean) {\n        if (AudioConfig.sfxOff === isOff) {\n            return;\n        }\n\n        AudioConfig.sfxOff = isOff;\n        if (AudioConfig.sfxOff) {\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n                data.audioList.forEach((audioData: AudioData) => {\n                    this.stop(audioData);\n                });\n                data.audioList.length = 0;\n            });\n            this._uiSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n                data.audioList.forEach((audioData: AudioData) => {\n                    this.stop(audioData);\n                });\n                data.audioList.length = 0;\n            });\n        }\n    }\n\n    private _bgmPause: boolean = false;\n    /** bgm是否暂停 */\n    public get bgmPause(): boolean { return this._bgmPause; }\n    public set bgmPause(isPause: boolean) {\n        if (this.bgmOff || this._bgmPause === isPause) {\n            return;\n        }\n        this._bgmPause = isPause;\n\n        this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\n            if (this._bgmPause) {\n                audioData.tween?.pause();\n                cc.audioEngine.pause(audioData.id);\n            } else {\n                audioData.tween?.resume();\n                cc.audioEngine.resume(audioData.id);\n            }\n        });\n    }\n\n    private _sfxPause: boolean = false;\n    /** sfx是否暂停，暂停时不暂停ui音效 */\n    public get sfxPause(): boolean { return this._sfxPause; }\n    public set sfxPause(isPause: boolean) {\n        if (this.sfxOff || this._sfxPause === isPause) {\n            return;\n        }\n        this._sfxPause = isPause;\n\n        if (this._sfxPause) {\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n                data.audioList.forEach((audioData: AudioData) => {\n                    audioData.tween?.pause();\n                    cc.audioEngine.pause(audioData.id);\n                });\n            });\n        } else {\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n                data.audioList.forEach((audioData: AudioData) => {\n                    audioData.tween?.resume();\n                    cc.audioEngine.resume(audioData.id);\n                });\n            });\n        }\n    }\n\n    /**\n     * 音量渐变\n     * @param data \n     * @param duration 音量渐变时长 单位s\n     * @param from 音量初始值\n     * @param to 音量目标值\n     * @param call 渐变结束的回调\n     */\n    private volumeFade(data: AudioData, duration: number, from: number, to: number, call?: Function): void {\n        data.tween?.stop();\n        data.volume = from;\n        cc.audioEngine.setVolume(data.id, data.volume * this.bgmVolume);\n        data.tween = new C2FTween(data)\n            .to({ volume: to }, duration * 1000)\n            .onUpdate(() => {\n                cc.audioEngine.setVolume(data.id, data.volume * this.bgmVolume);\n            })\n            .onComplete(() => {\n                data.tween = null;\n                if (call) {\n                    call();\n                }\n            })\n            .start();\n    }\n\n    /**\n     * 停止音频\n     * @param audioData \n     */\n    private stop(audioData: AudioData): void {\n        if (audioData.tween) {\n            audioData.tween.stop();\n            audioData.tween = null;\n        }\n        cc.audioEngine.stop(audioData.id);\n    }\n\n    /**\n     * 播放音频并返回AudioData\n     */\n    private play(args: cc.AudioClip | AudioPlayArgs, volume: number, audioData: AudioData = null): AudioData {\n        let data: AudioPlayArgs = args instanceof cc.AudioClip ? { clip: args } : args;\n        if (!data.hasOwnProperty(\"loop\")) {\n            data.loop = false;\n        }\n        if (!data.hasOwnProperty(\"fadeDuration\")) {\n            data.fadeDuration = 0;\n        }\n        if (!data.hasOwnProperty(\"finishCall\")) {\n            data.finishCall = null;\n        }\n\n        if (audioData) {\n            audioData.id = cc.audioEngine.play(data.clip, data.loop, volume);\n            audioData.volume = 1;\n            if (audioData.tween) {\n                audioData.tween.stop();\n                audioData.tween = null;\n            }\n        } else {\n            audioData = {\n                id: cc.audioEngine.play(data.clip, data.loop, volume),\n                volume: 1,\n                tween: null\n            };\n        }\n\n        if (data.finishCall) {\n            cc.audioEngine.setFinishCallback(audioData.id, data.finishCall);\n        }\n        if (data.fadeDuration > 0) {\n            this.volumeFade(audioData, data.fadeDuration, 0, 1);\n        }\n        return audioData;\n    }\n\n    /**\n     * 播放bgmClip\n     */\n    public playBgm(args: cc.AudioClip | AudioPlayArgs): void {\n        let clip = args instanceof cc.AudioClip ? args : args.clip;\n        if (this.bgmOff || !clip) {\n            return;\n        }\n        this.stopBgm();\n\n        let audioData: AudioData = this._bgmMap.get(clip);\n        if (audioData === undefined) {\n            audioData = this.play(args, this.bgmVolume);\n            this._bgmMap.set(clip, audioData);\n        } else {\n            this.stop(audioData);\n            this.play(args, this.bgmVolume, audioData);\n        }\n    }\n\n    /** 添加背景音乐 */\n    private addMusicUrlToList(url: string) {\n        let existIdx = this.bgmList.indexOf(url);\n        if (existIdx < 0) {\n            this.bgmList.push(url);\n        } else {\n            this.bgmList = this.bgmList.slice(0, existIdx + 1);\n        }\n    }\n\n    /**\n     * 播放bgmURL\n     */\n    public playBgmURL(url: string, callback?: Function) {\n        if (this.bgmDelayTimer) {\n            clearTimeout(this.bgmDelayTimer);\n        }\n        this.bgmDelayTimer = setTimeout(() => {\n            this.bgmDelayTimer = null;\n\n            this.addMusicUrlToList(url);\n            if (this.bgmOff) {\n                return;\n            }\n            c2f.res.load(url, cc.AudioClip, (err: Error | null, data: cc.AudioClip) => {\n                if (err) {\n                    cc.error(err);\n                }\n                this.playBgm({ clip: data, loop: true, finishCall: callback })\n            })\n        }, 300);\n    }\n\n    /**\n     * 结束当前背景音乐·播放前一首\n     */\n    public endCurMusic() {\n        let count = this.bgmList.length;\n        if (count <= 0) {\n            return;\n        }\n        this.bgmList.splice(count - 1, 1);\n        this.playRecentBgm();\n    }\n\n    private playRecentBgm() {\n        let count = this.bgmList.length;\n        if (count > 0) {\n            let lastUrl = this.bgmList[count - 1];\n            this.bgmList.splice(count - 1, 1);\n            this.playBgmURL(lastUrl);\n        }\n    }\n\n    /**\n     * 播放sfx\n     */\n    public playSfx(args: cc.AudioClip | AudioPlayArgs, type: SfxType = SfxType.NORMAL): void {\n        let clip = args instanceof cc.AudioClip ? args : args.clip;\n        if (this.sfxOff || !clip) {\n            return;\n        }\n\n        let sfxData: SfxData = type === SfxType.NORMAL ? this._normalSfxMap.get(clip) : this._uiSfxMap.get(clip);\n        let audioData: AudioData = null;\n        if (sfxData === undefined) {\n            sfxData = this.setSfxData(clip, type);\n            audioData = this.play(args, this.sfxVolume);\n            sfxData.audioList.push(audioData);\n        } else {\n            // 剔除不处于播放状态的音频\n            while (sfxData.audioList.length > 0 && cc.audioEngine.getState(sfxData.audioList[0].id) !== cc.audioEngine.AudioState.PLAYING) {\n                this.stop(sfxData.audioList.shift());\n            }\n\n            // 已达到最大数量则剔除最先(第一个)缓存的音频\n            while (sfxData.overStop && sfxData.audioList.length >= sfxData.maxNum) {\n                this.stop(sfxData.audioList.shift());\n            }\n\n            // 缓存新的音频\n            if (sfxData.audioList.length < sfxData.maxNum) {\n                audioData = this.play(args, this.sfxVolume);\n                sfxData.audioList.push(audioData);\n            }\n        }\n    }\n\n    /**\n     * 播放sfxURL\n     */\n    public playSfxURL(url: string, callback?: Function) {\n        if (this.sfxOff) {\n            return;\n        }\n        c2f.res.load(url, cc.AudioClip, (err: Error | null, data: cc.AudioClip) => {\n            if (err) {\n                cc.error(err);\n            }\n            this.playSfx({ clip: data, loop: false, finishCall: callback })\n        })\n    }\n\n\n\n    /**\n     * 设置音效数据（用于限制某些短时间内同时大量播放的音效）\n     * @param clip \n     * @param type 音效类型\n     * @param maxNum 此音效最大同时播放的数量\n     * @param overStop 超过最大数量时是否stop未播完的音效并缓存新的音效\n     */\n    public setSfxData(clip: cc.AudioClip, type: SfxType = SfxType.NORMAL, maxNum: number = 8, overStop: boolean = false): SfxData {\n        if (!clip) {\n            return;\n        }\n\n        maxNum = Math.max(maxNum, 1);\n        let map = type === SfxType.NORMAL ? this._normalSfxMap : this._uiSfxMap;\n        let sfxData: SfxData = map.get(clip);\n        if (sfxData === undefined) {\n            sfxData = {\n                audioList: [],\n                maxNum: maxNum,\n                overStop: overStop\n            };\n            map.set(clip, sfxData);\n        } else {\n            sfxData.maxNum = maxNum;\n            sfxData.overStop = overStop;\n        }\n        return sfxData;\n    }\n\n    /**\n     * 停止bgm\n     * @param clip 需停止的音频，clip返回值为false则停止所有\n     * @param fadeDuration 音量渐变时长 单位s\n     */\n    public stopBgm(clip: cc.AudioClip = null, fadeDuration: number = 0): void {\n        if (this.bgmOff) {\n            return;\n        }\n\n        if (clip) {\n            let audioData: AudioData = this._bgmMap.get(clip);\n            if (audioData === undefined) {\n                return;\n            }\n\n            if (fadeDuration <= 0) {\n                this.stop(audioData);\n                this._bgmMap.delete(clip);\n            } else {\n                this.volumeFade(audioData, fadeDuration, 1, 0, () => {\n                    this.stop(audioData);\n                    this._bgmMap.delete(clip);\n                });\n            }\n        } else {\n            if (fadeDuration <= 0) {\n                this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\n                    this.stop(audioData);\n                });\n                this._bgmMap.clear();\n            } else {\n                this._bgmMap.forEach((audioData: AudioData, clip: cc.AudioClip) => {\n                    this.volumeFade(audioData, fadeDuration, 1, 0, () => {\n                        this.stop(audioData);\n                        this._bgmMap.delete(clip);\n                    });\n                });\n            }\n        }\n    }\n\n    /**\n     * 停止sfx\n     * @param clip 需停止的音频，clip返回值为false则停止所有\n     * @param type 音效类型\n     */\n    public stopSfx(clip: cc.AudioClip = null, type: SfxType = SfxType.NORMAL): void {\n        if (this.sfxOff) {\n            return;\n        }\n\n        if (clip) {\n            let data: SfxData = type === SfxType.NORMAL ? this._normalSfxMap.get(clip) : this._uiSfxMap.get(clip);\n            if (data === undefined || data.audioList.length <= 0) {\n                return;\n            }\n\n            data.audioList.forEach((audioData: AudioData) => {\n                this.stop(audioData);\n            });\n            data.audioList.length = 0;\n        } else {\n            this._normalSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n                data.audioList.forEach((audioData: AudioData) => {\n                    this.stop(audioData);\n                });\n                data.audioList.length = 0;\n            });\n            this._uiSfxMap.forEach((data: SfxData, clip: cc.AudioClip) => {\n                data.audioList.forEach((audioData: AudioData) => {\n                    this.stop(audioData);\n                });\n                data.audioList.length = 0;\n            });\n        }\n    }\n\n    /**\n     * 停止所有音频\n     */\n    public stopAll(): void {\n        this.stopBgm();\n        this.stopSfx();\n    }\n\n    /**\n     * 暂停所有音频\n     */\n    public pauseAll(): void {\n        this.bgmPause = true;\n        this.sfxPause = true;\n    }\n\n    /**\n     * 恢复所有音频\n     */\n    public resumeAll(): void {\n        this.bgmPause = false;\n        this.sfxPause = false;\n    }\n\n    /**\n     * 停止所有音频，清除所有音频缓存\n     */\n    public uncacheAll(): void {\n        this.stopAll();\n        this._bgmMap.clear();\n        this._normalSfxMap.clear();\n        this._uiSfxMap.clear();\n        cc.audioEngine.uncacheAll();\n    }\n\n    /** 静态成员 */\n    private static _instance: AudioManager = null\n    public static getInstance(): AudioManager {\n        if (!this._instance) {\n            this._instance = new AudioManager();\n        }\n        return this._instance;\n    }\n}\n\ndeclare global {\n    interface IC2F {\n        audio: AudioManager;\n    }\n}\n\nc2f.audio = AudioManager.getInstance();\nexport { };"]}