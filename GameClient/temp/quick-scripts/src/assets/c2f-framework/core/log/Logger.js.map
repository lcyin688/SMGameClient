{"version":3,"sources":["assets/c2f-framework/core/log/Logger.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["enum LogType {\n    /** 网络层日志 */\n    Net = 1,\n    /** 数据结构层日志 */\n    Model = 2,\n    /** 业务逻辑层日志 */\n    Business = 4,\n    /** 视图层日志 */\n    View = 8,\n    /** 配置日志 */\n    Config = 16,\n    /** 标准日志 */\n    Trace = 32,\n    /** SDK */\n    SDK = 64,\n    /** 战斗 */\n    BAT = 128\n}\n\nvar names = {\n    \"1\": \"网络日志\",\n    \"2\": \"数据日志\",\n    \"4\": \"业务日志\",\n    \"8\": \"视图日志\",\n    \"16\": \"配置日志\",\n    \"32\": \"标准日志\",\n    \"64\": \"SDK日志\",\n    \"128\": \"战斗日志\",\n}\n\n/** \n * 日志管理 \n * @example\nc2f.log.trace(\"默认标准日志\");\nc2f.log.logConfig(\"灰色配置日志\");\nc2f.log.logNet(\"橙色网络日志\");\nc2f.log.logModel(\"紫色数据日志\");\nc2f.log.logBusiness(\"蓝色业务日志\");\nc2f.log.logView(\"绿色视图日志\");\n */\nclass Logger {\n    private static tags: number = 0;\n\n    static init(): void {\n        this.tags =\n            LogType.Net |\n            LogType.Model |\n            LogType.Business |\n            LogType.View |\n            LogType.Config |\n            LogType.Trace |\n            LogType.SDK |\n            LogType.BAT;\n    }\n\n    /** \n     * 设置显示的日志类型，默认值为不显示任何类型日志\n     * @example\n        c2f.log.setTags(LogType.View|LogType.Business)\n     */\n    static setTags(tag: LogType = null!) {\n        if (tag) {\n            this.tags = tag;\n        }\n    }\n\n    /**\n     * 记录开始计时\n     * @param describe  标题描述\n     * @example\n        c2f.log.start();\n        ...\n        省略N行代码\n        ...\n        c2f.log.end();\n     */\n    static start(describe: string = \"Time\"): void {\n        console.time(describe);\n    }\n\n    /**\n     * 打印范围内时间消耗\n     * @param describe  标题描述\n     * @example\n        c2f.log.start();\n        ...\n        省略N行代码\n        ...\n        c2f.log.end();\n     */\n    static end(describe: string = \"Time\"): void {\n        console.timeEnd(describe);\n    }\n\n    /**\n     * 打印表格\n     * @param msg       日志消息\n     * @param describe  标题描述\n     * @example\n        var object:any = {uid:1000, name:\"c2f\"};\n        c2f.log.table(object);\n     */\n    static table(msg: any, describe?: string) {\n        if (!this.isOpen(LogType.Trace)) {\n            return;\n        }\n        console.table(msg);\n    }\n\n    /**\n     * 打印标准日志\n     * @param msg       日志消息\n     */\n    static trace(msg: any) {\n        // 标记没有打开，不打印该日志\n        if (!this.isOpen(LogType.Trace)) {\n            return;\n        }\n        console.log(msg);\n    }\n\n    /**\n     * 打印网络层日志\n     * @param msg       日志消息\n     * @param describe  标题描述\n     */\n    static logNet(msg: any, describe?: string) {\n        this.orange(LogType.Net, msg, describe);\n    }\n\n    /**\n     * 打印数据层日志\n     * @param msg       日志消息\n     * @param describe  标题描述\n     */\n    static logModel(msg: any, describe?: string) {\n        this.violet(LogType.Model, msg, describe);\n    }\n\n    /**\n     * 打印业务层日志\n     * @param msg       日志消息\n     * @param describe  标题描述\n     */\n    static logBusiness(msg: any, describe?: string) {\n        this.blue(LogType.Business, msg, describe);\n    }\n\n    /**\n     * 打印视图日志\n     * @param msg       日志消息\n     * @param describe  标题描述\n     */\n    static logView(msg: any, describe?: string) {\n        this.green(LogType.View, msg, describe);\n    }\n\n    /** 打印配置日志 */\n    static logConfig(msg: any, describe?: string) {\n        this.gray(LogType.Config, msg, describe);\n    }\n\n    /** 打印SDK日志 */\n    static logSDK(msg: any, describe?: string) {\n        this.cyan(LogType.SDK, msg, describe);\n    }\n\n    /** 打印战斗日志 */\n    static logBat(msg: any, describe?: string) {\n        this.cyan(LogType.BAT, msg, describe);\n    }\n\n    // 橙色\n    private static orange(tag: LogType, msg: any, describe?: string) {\n        this.print(tag, msg, \"color:#ee7700;\", describe)\n    }\n\n    // 紫色\n    private static violet(tag: LogType, msg: any, describe?: string) {\n        this.print(tag, msg, \"color:Violet;\", describe)\n    }\n\n    // 蓝色\n    private static blue(tag: LogType, msg: any, describe?: string) {\n        this.print(tag, msg, \"color:#3a5fcd;\", describe)\n    }\n\n    // 绿色\n    private static green(tag: LogType, msg: any, describe?: string) {\n        this.print(tag, msg, \"color:green;\", describe)\n    }\n\n    // 灰色\n    private static gray(tag: LogType, msg: any, describe?: string) {\n        this.print(tag, msg, \"color:gray;\", describe)\n    }\n\n    // 青色\n    private static cyan(tag: LogType, msg: any, describe?: string) {\n        this.print(tag, msg, \"color:#09CBD7;\", describe)\n    }\n\n    private static isOpen(tag: LogType): boolean {\n        return (this.tags & tag) != 0;\n    }\n\n    /**\n     * 输出日志\n     * @param tag       日志类型\n     * @param msg       日志内容\n     * @param color     日志文本颜色\n     * @param describe  日志标题描述\n     */\n    private static print(tag: LogType, msg: any, color: string, describe?: string) {\n        // 标记没有打开，不打印该日志\n        if (!this.isOpen(tag)) {\n            return;\n\n        }\n        var backLog = console.log || cc.log;\n        var type = names[tag];\n        if (describe) {\n            backLog.call(null, \"%c%s%s%s:\\n%s%o\", color, this.getDateString(), '[' + type + ']', this.stack(5), describe, msg);\n        }\n        else {\n            backLog.call(null, \"%c%s%s%s:\\n%o\", color, this.getDateString(), '[' + type + ']', this.stack(5), msg);\n        }\n    }\n\n    private static stack(index: number): string {\n        var e = new Error();\n        var lines = e.stack!.split(\"\\n\");\n        var result: Array<any> = [];\n        lines.forEach((line) => {\n            line = line.substring(7);\n            var lineBreak = line.split(\" \");\n            if (lineBreak.length < 2) {\n                result.push(lineBreak[0]);\n            }\n            else {\n                result.push({ [lineBreak[0]]: lineBreak[1] });\n            }\n        });\n\n        var list: string[] = [];\n        var splitList: Array<string> = [];\n        if (index < result.length - 1) {\n            var value: string;\n            for (var a in result[index]) {\n                var splitList = a.split(\".\");\n\n                if (splitList.length == 2) {\n                    list = splitList.concat();\n                }\n                else {\n                    value = result[index][a];\n                    var start = value!.lastIndexOf(\"/\");\n                    var end = value!.lastIndexOf(\".\");\n                    if (start > -1 && end > -1) {\n                        var r = value!.substring(start + 1, end);\n                        list.push(r);\n                    }\n                    else {\n                        list.push(value);\n                    }\n                }\n            }\n        }\n\n        if (list.length == 1) {\n            return \"[\" + list[0] + \".ts]\";\n        }\n        else if (list.length == 2) {\n            return \"[\" + list[0] + \".ts->\" + list[1] + \"]\";\n        }\n        return \"\";\n    }\n\n    private static getDateString(): string {\n        let d = new Date();\n        let str = d.getHours().toString();\n        let timeStr = \"\";\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getMinutes().toString();\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getSeconds().toString();\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getMilliseconds().toString();\n        if (str.length == 1) str = \"00\" + str;\n        if (str.length == 2) str = \"0\" + str;\n        timeStr += str;\n\n        timeStr = \"[\" + timeStr + \"]\";\n        return timeStr;\n    }\n}\n\n//// @ts-ignore\nLogger.init();\n\ndeclare global {\n    interface IC2F {\n        log: typeof Logger;\n    }\n}\n\nc2f.log = Logger;\nexport { };\n"]}