{"version":3,"sources":["assets/c2f-framework/core/engine/EngineExtension.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//{ copy from engine:\nvar BASE64_KEYS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar HexChars = '0123456789abcdef'.split('');\nlet HexMap = {}\n{\n    for (let i = 0; i < HexChars.length; i++) {\n        let char = HexChars[i]\n        HexMap[char] = i\n    }\n}\n\nvar BASE64_VALUES = new Array(123); // max char code in base64Keys\nfor (let i = 0; i < 123; ++i) BASE64_VALUES[i] = 64; // fill with placeholder('=') index\nfor (let i = 0; i < 64; ++i) BASE64_VALUES[BASE64_KEYS.charCodeAt(i)] = i;\nvar _t = ['', '', '', ''];\nvar UuidTemplate = _t.concat(_t, '-', _t, '-', _t, '-', _t, '-', _t, _t, _t);\nvar Indices = UuidTemplate.map(function (x, i) { return x === '-' ? NaN : i; }).filter(isFinite);\n//}\n\nclass EngineExtension {\n    static readonly instance: EngineExtension = new EngineExtension();\n\n    /** \n     * 替换预制体中多语言资源UUID替换 \n     */\n    public replaceUuidForMulLG(tdInfo: any) {\n        if (!c2f.language) {\n            return;\n        }\n        if (c2f.language.languages.length <= 1) {\n            return;\n        }\n        if (c2f.language.current == c2f.config.game.lanuageBase) {\n            return;\n        }\n        if (!tdInfo || !tdInfo.uuidList) {\n            return;\n        }\n        for (let i = 0; i < tdInfo.uuidList.length; i++) {\n            let dstUuid = tdInfo.uuidList[i];\n            if (CC_BUILD) {\n                dstUuid = this.decodeUuid(dstUuid);\n            }\n            let newGuid = c2f.language.getLGResUuid(dstUuid);\n            if (newGuid) {\n                tdInfo.uuidList[i] = CC_BUILD ? this.encodeUuid(newGuid) : newGuid;\n            }\n        }\n    }\n\n    /** 压缩uuid */\n    private encodeUuid(uuid: string) {\n        if (uuid.length !== 36) {\n            return uuid;\n        }\n        let zipUuid = []\n        zipUuid[0] = uuid[0];\n        zipUuid[1] = uuid[1];\n        let cleanUuid = uuid.replace('-', '').replace('-', '').replace('-', '').replace('-', '')\n\n        for (let i = 2, j = 2; i < 32; i += 3) {\n            const left = HexMap[String.fromCharCode(cleanUuid.charCodeAt(i))];\n            const mid = HexMap[String.fromCharCode(cleanUuid.charCodeAt(i + 1))];\n            const right = HexMap[String.fromCharCode(cleanUuid.charCodeAt(i + 2))];\n            zipUuid[j++] = BASE64_KEYS[(left << 2) + (mid >> 2)]\n            zipUuid[j++] = BASE64_KEYS[((mid & 3) << 4) + right]\n        }\n\n        return zipUuid.join('');\n    }\n\n    /** 解压uuid */\n    private decodeUuid(uuid: string) {\n        if (uuid.length !== 22) {\n            return uuid;\n        }\n        UuidTemplate[0] = uuid[0];\n        UuidTemplate[1] = uuid[1];\n        for (var i = 2, j = 2; i < 22; i += 2) {\n            var lhs = BASE64_VALUES[uuid.charCodeAt(i)];\n            var rhs = BASE64_VALUES[uuid.charCodeAt(i + 1)];\n            UuidTemplate[Indices[j++]] = HexChars[lhs >> 2];\n            UuidTemplate[Indices[j++]] = HexChars[((lhs & 3) << 2) | rhs >> 4];\n            UuidTemplate[Indices[j++]] = HexChars[rhs & 0xF];\n        }\n        return UuidTemplate.join('');\n    }\n}\n\ndeclare global {\n    interface IC2F {\n        engineExt: EngineExtension;\n    }\n}\n\nc2f.engineExt = EngineExtension.instance;\nexport { };"]}