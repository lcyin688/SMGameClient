{"version":3,"sources":["assets/c2f-framework/core/timer/GameTimer.ts"],"names":[],"mappings":";;;;;;;AAAA,uCAAgD;AAChD,oDAAoD;AAIpD;IAAA;IAyFA,CAAC;IA9EG,sBAAkB,sBAAS;QAJ3B;;;WAGG;aACH,cAAwC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aACjE,UAA4B,CAAS;YACjC,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,EAAE;gBAChC,OAAO;aACV;YACD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,0BAAY,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;;;OAPgE;IAWjE,sBAAkB,mBAAM;QADxB,kBAAkB;aAClB,cAAqC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;;;OAAA;IAE3D,sBAAkB,oBAAO;QADzB,6BAA6B;aAC7B,cAAsC,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAK9E,sBAAkB,oBAAO;QADzB,kBAAkB;aAClB,cAAsC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE7D,sBAAkB,mBAAM;QADxB,mBAAmB;aACnB,cAAqC,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAEnE,sBAAkB,yBAAY;QAD9B,kBAAkB;aAClB,cAA2C,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;;;OAAA;IAEvE,sBAAkB,wBAAW;QAD7B,mBAAmB;aACnB,cAA0C,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;;;OAAA;IAE7E;;OAEG;IACW,eAAK,GAAnB;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACW,mBAAS,GAAvB;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;YACtB,OAAO;SACV;QACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,0BAAY,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED;;OAEG;IACW,oBAAU,GAAxB;QACI,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACvB,OAAO;SACV;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;YACtC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,0BAAY,CAAC,WAAW,CAAC,CAAC;SAC5C;IACL,CAAC;IAEa,mBAAS,GAAvB;QACI,gBAAK,CAAC,SAAS,EAAE,CAAC;QAClB,sBAAW,CAAC,SAAS,EAAE,CAAC;IAC5B,CAAC;IAEa,gBAAM,GAApB,UAAqB,EAAU;QAC3B,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;QACvB,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC;QACzB,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC,OAAO,CAAC;QAE7C,gBAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC/B,2BAA2B;QAC3B,IAAI,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE;YACvB,sBAAW,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SAC7C;IACL,CAAC;IAtFD,gBAAgB;IACD,qBAAW,GAAW,CAAC,CAAC;IAExB,wBAAc,GAAW,CAAC,CAAC;IAC3B,oBAAU,GAAW,CAAC,CAAC;IAcvB,iBAAO,GAAW,CAAC,CAAC;IAMpB,kBAAQ,GAAW,CAAC,CAAC;IACrB,uBAAa,GAAW,CAAC,CAAC;IA8D7C,gBAAC;CAzFD,AAyFC,IAAA;AAzFY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["import { SCALE_TWEEN, TWEEN } from \"./C2FTween\";\nimport { EventMessage } from \"../event/EventDefine\";\n\n\n\nexport class GameTimer {\n\n    /** 游戏调用暂停的计数 */\n    private static _puaseCount: number = 0;\n\n    private static _lastTimeScale: number = 1;\n    private static _timeScale: number = 1;\n    /** \n     * dt缩放倍数，1为正常速度，0为暂停\n     * - 需要特别注意此值的修改和暂停、恢复如果同时多处调用产生的效果是否正确\n     */\n    public static get timeScale(): number { return this._timeScale; }\n    public static set timeScale(v: number) {\n        if (v === this._timeScale || v < 0) {\n            return;\n        }\n        this._timeScale = v;\n        c2f.event.emit(EventMessage.TIME_SCALE);\n    }\n\n    private static _realDt: number = 0;\n    /** 距上一帧间隔的真实时间 */\n    public static get realDt(): number { return this._realDt; }\n    /** 距上一帧间隔经过timeScale缩放的时间 */\n    public static get scaleDt(): number { return this._realDt * this._timeScale; }\n\n    private static _gameSec: number = 0;\n    private static _scaleGameSec: number = 0;\n    /** 游戏启动经过的时长 s */\n    public static get gameSec(): number { return this._gameSec; }\n    /** 游戏启动经过的时长 ms */\n    public static get gameMs(): number { return this._gameSec * 1000; }\n    /** 游戏经过缩放的时长 s */\n    public static get scaleGameSec(): number { return this._scaleGameSec; }\n    /** 游戏经过缩放的时长 ms */\n    public static get scaleGameMs(): number { return this._scaleGameSec * 1000; }\n\n    /**\n     * 重置 timeScale\n     */\n    public static reset(): void {\n        this._puaseCount = 0;\n        this._timeScale = 1;\n        this._lastTimeScale = 1;\n    }\n\n    /**\n     * 暂停游戏 timeScale设置为0 （需要与gameResume成对调用）\n     */\n    public static gamePause(): void {\n        this._puaseCount++;\n        if (this._puaseCount > 1) {\n            return;\n        }\n        this._lastTimeScale = this._timeScale;\n        this._timeScale = 0;\n        c2f.event.emit(EventMessage.GAME_PAUSE);\n    }\n\n    /**\n     * 恢复游戏 （需要与gamePause成对调用）\n     */\n    public static gameResume(): void {\n        if (this._puaseCount <= 0) {\n            return;\n        }\n        this._puaseCount--;\n        if (this._puaseCount <= 0) {\n            this._timeScale = this._lastTimeScale;\n            c2f.event.emit(EventMessage.GAME_RESUME);\n        }\n    }\n\n    public static onDestroy() {\n        TWEEN.removeAll();\n        SCALE_TWEEN.removeAll();\n    }\n\n    public static update(dt: number): void {\n        GameTimer._realDt = dt;\n        GameTimer._gameSec += dt;\n        GameTimer._scaleGameSec += GameTimer.scaleDt;\n\n        TWEEN.update(GameTimer.gameMs);\n        // scaleDt大于0时更新SCALE_TWEEN\n        if (GameTimer.scaleDt > 0) {\n            SCALE_TWEEN.update(GameTimer.scaleGameMs);\n        }\n    }\n}\n"]}