{"version":3,"sources":["assets/c2f-framework/core/event/EventGroup.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { EventData, ListenerFunc } from \"./EventDefine\";\n\n/**\n * 批量注册、移除全局事件对象\n */\nexport class EventGroup {\n    private group: string;\n    private events: { [key: string]: Array<EventData> } = {};\n    private groupEvt: { [key: string]: { [key: string]: Array<EventData> } } = {}\n\n    constructor(name: string) {\n        this.group = name;\n    }\n\n    private addToList(list: Array<EventData>, event: string, listener: ListenerFunc, object: Object) {\n        let data: EventData = new EventData();\n        data.event = event;\n        data.listener = listener;\n        data.object = object;\n        list.push(data);\n    }\n\n    /**\n     * 注册分组事件\n     * @param event      事件名\n     * @param listener   处理事件的侦听器函数\n     * @param object     侦听函数绑定的作用域对象\n     */\n    public on(event: string, listener: ListenerFunc, object: object) {\n        if (this.group) {\n            if (!this.groupEvt[this.group]) {\n                this.groupEvt[this.group] = {};\n            }\n            if (!this.groupEvt[this.group][event]) {\n                this.groupEvt[this.group][event] = [];\n            }\n            this.addToList(this.groupEvt[this.group][event], event, listener, object);\n            c2f.event.onGroup(this.group, event, listener, object);\n        } else {\n            let list: Array<EventData> = this.events[event];\n            if (list == null) {\n                list = [];\n                this.events[event] = list;\n            }\n            this.addToList(list, event, listener, object);\n            c2f.event.on(event, listener, object);\n        }\n    }\n\n    /**\n    * 移除全局事件\n     * @param event     事件名\n     */\n    public off(event: string) {\n        if (this.group) {\n            let dictEvent = this.groupEvt[this.group];\n            if (!dictEvent) {\n                return;\n            }\n            let obs = dictEvent[event];\n            if (!obs) {\n                return;\n            }\n            for (let ob of obs) {\n                c2f.event.offGroup(this.group, event, ob.listener, ob.object);\n            }\n            delete dictEvent[event];\n        } else {\n            let ebs: Array<EventData> = this.events[event];\n            if (!ebs) {\n                return;\n            }\n            for (let eb of ebs) {\n                c2f.event.off(event, eb.listener, eb.object);\n            }\n            delete this.events[event];\n        }\n    }\n\n    /** \n     * 触发全局事件 \n     * @param event(string)      事件名\n     * @param args(any)          事件参数\n     */\n    public emit(event: string, ...args: any[]) {\n        if (this.group) {\n            c2f.event.emitGroup(this.group, event, ...args);\n        } else {\n            c2f.event.emit(event, ...args);\n        }\n    }\n\n    /** 清除所有的全局事件监听 */\n    public clear() {\n        if (this.group) {\n            c2f.event.offGroupAll(this.group);\n            this.groupEvt = {};\n        } else {\n            for (let event in this.events) {\n                this.off(event);\n            }\n        }\n    }\n}\n"]}