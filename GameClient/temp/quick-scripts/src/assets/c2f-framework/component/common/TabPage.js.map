{"version":3,"sources":["assets/c2f-framework/component/common/TabPage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { C2FConst } from \"../../define/C2FConst\";\n\nconst { ccclass, property, menu } = cc._decorator;\n@ccclass\n@menu('c2f/common/TabPage')\nexport default class TabPage extends cc.Component {\n\n    @property(cc.SpriteFrame)\n    private sfSelected: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    private sfUnSelect: cc.SpriteFrame = null;\n\n    @property(cc.Color)\n    private clrSelected: cc.Color = cc.Color.WHITE.clone();\n\n    @property(cc.Color)\n    private clrUnSelect: cc.Color = cc.Color.WHITE.clone();\n\n    @property(cc.Color)\n    private outClrSelected: cc.Color = cc.Color.BLACK.clone();\n\n    @property(cc.Color)\n    private outClrUnSelect: cc.Color = cc.Color.GRAY.clone();\n\n    @property({ type: cc.Component.EventHandler })\n    private togItemClick: cc.Component.EventHandler[] = [];\n\n    /** 当前页签 */\n    private curTab: string = null;\n    /** 页签可否切换判断回调 */\n    private switchCheckHandler: Function = null;\n\n    protected start() {\n    }\n\n    /** 在隐藏状态切换tabpag后，显示时刷新UI */\n    protected onEnable(): void {\n        if (!this.curTab) {\n            return;\n        }\n        let container = this.getComponent(cc.ToggleContainer);\n        if (container) {\n            container.updateTogglesUIStateOnly(this.curTab);\n        }\n    }\n\n    private CC_onClickToggle(event) {\n        //播放音效\n        this.subBtnClicked(event.target.name);\n    }\n\n    /** subTog个数 */\n    public setTabCount(count: number) {\n        for (let i = 0; i < this.node.childrenCount; i++) {\n            this.node.children[i].active = i < count;\n        }\n    }\n\n    /** 添加响应事件 */\n    public addClickHandler(handler: cc.Component.EventHandler) {\n        this.togItemClick.push(handler);\n    }\n\n    /** 选中子Toggle */\n    public subBtnClicked(subTitle: string, extend: any = undefined) {\n        if (this.curTab == subTitle) {\n            return;\n        }\n        let canSwitch = true;\n        if (this.switchCheckHandler) {\n            canSwitch = this.switchCheckHandler(subTitle);\n            if (!canSwitch) {\n                for (let i = 0; i < this.node.children.length; i++) {\n                    let node = this.node.children[i];\n                    let btnComp = node.getComponent(cc.Toggle);\n                    if (btnComp && node.name == this.curTab) {\n                        btnComp.check();\n                        break;\n                    }\n                }\n            }\n        }\n        if (canSwitch) {\n            this.curTab = subTitle;\n            this.setTabBtnState(subTitle);\n            for (let one of this.togItemClick) {\n                one.emit([subTitle, extend]);\n            }\n        }\n    }\n\n    //根据按钮名称设置按钮状态\n    private setTabBtnState(name: string) {\n        if (name == null) {\n            return;\n        }\n        for (let i = 0; i < this.node.children.length; i++) {\n            let node = this.node.children[i];\n            let btnComp = node.getComponent(cc.Toggle);\n            if (!btnComp) {\n                continue;\n            }\n            let selected = name == node.name;\n            let titleNode = c2f.utils.view.getFirstChildByName(node, 'txtTitle');\n            if (titleNode) {\n                titleNode.color = selected ? this.clrSelected : this.clrUnSelect;\n                let outlineComp = titleNode.getComponent(cc.LabelOutline);\n                if (outlineComp) {\n                    outlineComp.color = selected ? this.outClrSelected : this.outClrUnSelect;\n                }\n            }\n\n            let frame = selected ? this.sfSelected : this.sfUnSelect;\n            if (frame) {\n                node.getComponent(cc.Sprite).spriteFrame = frame;\n            }\n            btnComp.isChecked = selected;\n        }\n    }\n\n    /** 快捷设置切换事件 */\n    public quickSetTabHnadler(ower: cc.Component, handlerName: string) {\n        let handler = new cc.Component.EventHandler();\n        handler.target = ower.node;\n        handler.component = c2f.utils.view.getComponentName(ower);\n        handler.handler = handlerName;\n        handler.customEventData = \"\";\n        this.addClickHandler(handler);\n    }\n\n    /** 页签切换可用性回调 */\n    public setSwitchCheckHandler(handler: Function) {\n        this.switchCheckHandler = handler;\n    }\n\n}"]}