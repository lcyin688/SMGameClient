{"version":3,"sources":["assets/c2f-framework/component/common/CountdownLabel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SCALE_TWEEN, C2FTween } from \"../../core/timer/C2FTween\";\n\nconst { ccclass, property, menu } = cc._decorator;\n\ntype CountdownFormat = string | { \"S\": string; \"M\": string; \"H\": string; \"D\": string };\n\n/**\n * 倒计时显示组件\n */\n@ccclass\n@menu(\"c2f/UI/CountdownLabel\")\nexport default class CountdownLabel extends cc.Component {\n    @property({\n        tooltip: CC_DEV && \"倒计时是否受到timeScale的影响\"\n    })\n    public timeScale: boolean = false;\n\n    private _tween: C2FTween<this> = null;\n    private _updateCall: () => void = null;\n    private _completeCall: () => void = null;\n\n    /** 格式化参数，详见`Tool.formatTimeString` */\n    private _format: CountdownFormat = \"%{hh}:%{mm}:%{ss}\";\n    /** 文本显示格式化 */\n    private _txtFormat: string = null;\n    /** 剩余秒数 */\n    private _leftSec: number = 0;\n    public get leftSec(): number { return this._leftSec; }\n    private _leftFloorSec: number = 0;\n    private curSverTime: number = 0;\n    private totalTime: number = 0;\n\n    private _label: cc.Label | cc.RichText = null;\n    public get label(): cc.Label | cc.RichText {\n        if (!this._label) {\n            this._label = this.getComponent(cc.Label) ?? this.getComponent(cc.RichText);\n        }\n        return this._label;\n    }\n\n    public startCountdown(sec: number, format: CountdownFormat = \"%{hh}:%{mm}:%{ss}\", txtFormat: string = null, updateCall: () => void = null, completeCall: () => void = null): void {\n        this.curSverTime = c2f.utils.date.getSerVerTime()\n        this.totalTime = sec;\n        this._leftSec = sec;\n        this._leftFloorSec = Math.floor(sec);\n        this._format = format;\n        this._txtFormat = txtFormat;\n        this._updateCall = updateCall;\n        this._completeCall = completeCall;\n        this._tween?.stop();\n        this.unscheduleAllCallbacks();\n\n        this._tween = this.timeScale ? new C2FTween(this, SCALE_TWEEN) : new C2FTween(this);\n        if (!this.timeScale) {\n            this.onUpdateTime()\n        } else {\n            this._tween.to({ _leftSec: 0 }, sec * 1000)\n                .onUpdate(() => {\n                    this.onUpdate();\n                })\n                .onComplete(() => {\n                    this.onComplete();\n                })\n                .start();\n        }\n    }\n\n    private onUpdateTime(): void {\n        let floorSec = Math.floor(this.totalTime - (c2f.utils.date.getSerVerTime() - this.curSverTime))\n        this._leftSec = floorSec\n        if (this.label) {\n            let txtTime = c2f.utils.date.formatTimeString(floorSec, this._format);\n            if (this._txtFormat) {\n                txtTime = this._txtFormat.format(txtTime);\n            }\n            this.label.string = txtTime;\n        }\n        // 更新回调\n        this._updateCall?.();\n        if (floorSec <= 0) { //回调\n            this.scheduleOnce(() => {\n                this.onComplete();\n            })\n        } else {\n            this.scheduleOnce(() => {\n                this.onUpdateTime();\n            }, 1)\n        }\n    }\n\n    private onUpdate(): void {\n        // 每隔1s更新一次\n        let floorSec = Math.floor(this._leftSec);\n        if (floorSec === this._leftFloorSec) {\n            return;\n        }\n        // 更新文本显示\n        this._leftFloorSec = floorSec;\n        if (this.label) {\n            let txtTime = c2f.utils.date.formatTimeString(this._leftFloorSec, this._format);\n            if (this._txtFormat) {\n                txtTime = this._txtFormat.format(txtTime);\n            }\n            this.label.string = txtTime;\n        }\n\n        // 更新回调\n        this._updateCall?.();\n    }\n\n    private onComplete(): void {\n        this.curSverTime = 0;\n        this._completeCall?.();\n    }\n\n    public stopCountdown() {\n        this.curSverTime = 0;\n        this._tween?.stop();\n        this.unscheduleAllCallbacks();\n    }\n\n    protected onEnable(): void {\n        if (this.curSverTime > 0) {\n            let sec = this.totalTime - (c2f.utils.date.getSerVerTime() - this.curSverTime);\n            sec = sec < 0 ? 0 : sec;\n            this.startCountdown(sec, this._format, this._txtFormat, this._updateCall, this._completeCall);\n        }\n    }\n}\n"]}