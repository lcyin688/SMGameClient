{"version":3,"sources":["assets/c2f-framework/component/common/ShakeNode.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAAkE;AAE5D,IAAA,KAAgD,EAAE,CAAC,UAAU,EAA3D,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,gBAAgB,sBAAkB,CAAC;AAEpE;;GAEG;AAIH;IAAuC,6BAAY;IAAnD;QAAA,qEAsCC;QApCU,gBAAU,GAAW,CAAC,CAAC;QAGvB,eAAS,GAAW,IAAI,CAAC;QAKzB,eAAS,GAAY,KAAK,CAAC;QAE1B,YAAM,GAAsB,IAAI,CAAC;;IA0B7C,CAAC;IAxBG;;;OAGG;IACI,yBAAK,GAAZ,UAAa,KAAiB;QAAjB,sBAAA,EAAA,SAAiB;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;YACvG,OAAO;SACV;QAED,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC1B,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAClB;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,sBAAW,CAAC,CAAC,CAAC,CAAC,IAAI,mBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9F,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACtD,MAAM,CAAC,KAAK,CAAC;aACb,KAAK,EAAE,CAAC;IACjB,CAAC;IAnCD;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,CAAC;iDACV;IAG9B;QADC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,IAAI,WAAW,EAAE,CAAC;gDACb;IAKhC;QAHC,QAAQ,CAAC;YACN,OAAO,EAAE,MAAM,IAAI,sBAAsB;SAC5C,CAAC;gDACgC;IAVjB,SAAS;QAH7B,OAAO;QACP,gBAAgB;QAChB,IAAI,CAAC,sBAAsB,CAAC;OACR,SAAS,CAsC7B;IAAD,gBAAC;CAtCD,AAsCC,CAtCsC,EAAE,CAAC,SAAS,GAsClD;kBAtCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import { SCALE_TWEEN, C2FTween } from \"../../core/timer/C2FTween\";\n\nconst { ccclass, property, menu, disallowMultiple } = cc._decorator;\n\n/**\n * 节点振动\n */\n@ccclass\n@disallowMultiple\n@menu(\"c2f/common/ShakeNode\")\nexport default class ShakeNode extends cc.Component {\n    @property({ tooltip: CC_DEV && \"振动幅度\" })\n    public shakePower: number = 5;\n\n    @property({ tooltip: CC_DEV && \"振动周期，单位：秒\" })\n    public shakeTime: number = 0.16;\n\n    @property({\n        tooltip: CC_DEV && \"变化速度是否受到timeScale的影响\"\n    })\n    public timeScale: boolean = false;\n\n    private _tween: C2FTween<cc.Node> = null;\n\n    /**\n     * 振动\n     * @param times 振动几个周期\n     */\n    public shake(times: number = 5) {\n        if ((this._tween && this._tween.isPlaying()) || times <= 0 || this.shakePower <= 0 || this.shakeTime <= 0) {\n            return;\n        }\n\n        let sv = cc.v2(0, this.shakePower);\n        this.node.setPosition(sv);\n        let xArr: number[] = [];\n        let yArr: number[] = [];\n        for (let i = 1; i <= 8; i++) {\n            let v = sv.rotate(Math.PI / 4 * (i * 3));\n            xArr.push(v.x);\n            yArr.push(v.y);\n        }\n\n        this._tween = this.timeScale ? new C2FTween(this.node, SCALE_TWEEN) : new C2FTween(this.node);\n        this._tween.to({ x: xArr, y: yArr }, this.shakeTime * 1000)\n            .repeat(times)\n            .start();\n    }\n}\n"]}