{"version":3,"sources":["assets/c2f-framework/component/ui/button/ButtonSingle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, menu, requireComponent } = cc._decorator;\n\n/**\n * 按钮组数据\n */\ninterface GroupData {\n    /** 该组是否锁定，同组按钮被触摸时进入锁定状态 */\n    lock: boolean;\n    /** 同组按钮 */\n    buttonSet: Set<cc.Button>;\n}\n\n/**\n * 按钮分组\n */\nenum ButtonGroup {\n    DEFAULT,\n    GROUP1,\n    GROUP2,\n}\n\n/**\n * 防多点触摸的按钮，同组按钮同一时刻只会有一个生效\n */\n@ccclass\n@requireComponent(cc.Button)\n@menu(\"c2f/UI/ButtonSingle\")\nexport default class ButtonSingle extends cc.Component {\n    @property({ type: cc.Enum(ButtonGroup), tooltip: CC_DEV && \"按钮分组，同组按钮同一时刻只会有一个生效\" })\n    public buttonGroup: ButtonGroup = ButtonGroup.DEFAULT;\n\n    /** 记录所有绑定该组件的按钮数据 */\n    private static _groupMap: Map<ButtonGroup, GroupData> = null;\n    private static get groupMap(): Map<ButtonGroup, GroupData> {\n        if (this._groupMap === null) {\n            this._groupMap = new Map();\n        }\n        return this._groupMap;\n    }\n\n    private _button: cc.Button = null;\n\n    protected onLoad(): void {\n        this._button = this.getComponent(cc.Button);\n        let groupData: GroupData = ButtonSingle.groupMap.get(this.buttonGroup);\n        if (groupData === undefined) {\n            groupData = {\n                lock: false,\n                buttonSet: new Set()\n            };\n            ButtonSingle.groupMap.set(this.buttonGroup, groupData);\n        }\n        groupData.buttonSet.add(this._button);\n\n        // 监听触摸事件\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n    }\n\n    protected onDestroy(): void {\n        let groupData: GroupData = ButtonSingle.groupMap.get(this.buttonGroup);\n        if (groupData === undefined) {\n            cc.error(`[ButtonSingle.onDestroy] 数据异常 ButtonGroup: ${this.buttonGroup}`);\n            return;\n        }\n        groupData.buttonSet.delete(this._button);\n        this.unlock(groupData);\n    }\n\n    private onTouchStart(event: cc.Event.EventTouch): void {\n        let groupData: GroupData = ButtonSingle.groupMap.get(this.buttonGroup);\n        if (groupData === undefined) {\n            cc.error(`[ButtonSingle.onTouchStart] 数据异常 ButtonGroup: ${this.buttonGroup}`);\n            return;\n        }\n\n        if (groupData.lock) {\n            return;\n        }\n        groupData.lock = true;\n        groupData.buttonSet.forEach((e) => {\n            e.enabled = (e === this._button);\n        });\n    }\n\n    private onTouchEnd(event: cc.Event.EventTouch): void {\n        let groupData: GroupData = ButtonSingle.groupMap.get(this.buttonGroup);\n        if (groupData === undefined) {\n            cc.error(`[ButtonSingle.onTouchEnd] 数据异常 ButtonGroup: ${this.buttonGroup}`);\n            return;\n        }\n\n        this.unlock(groupData);\n    }\n\n    /**\n     * 当前按钮松开或销毁时解除同组按钮锁定状态\n     */\n    private unlock(groupData: GroupData): void {\n        if (groupData.lock && this._button.enabled) {\n            groupData.lock = false;\n            groupData.buttonSet.forEach((e) => {\n                e.enabled = true;\n            });\n        }\n    }\n}\n"]}