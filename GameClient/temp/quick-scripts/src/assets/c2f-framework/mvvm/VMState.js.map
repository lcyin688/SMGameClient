{"version":3,"sources":["assets/c2f-framework/mvvm/VMState.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport { VM } from './ViewModel';\nimport VMBase from './VMBase';\n\nconst { ccclass, property, menu } = cc._decorator;\n\n/**比较条件 */\nenum CONDITION {\n    \"==\", //正常计算，比较 等于\n    \"!=\", //正常计算，比较 不等于\n    \">\",  //正常计算，比较>\n    \">=\", //正常计算，比较>=\n    \"<\",  //正常计算，比较<\n    \"<=\", // 正常计算，比较>=\n    \"range\" //计算在范围内\n}\n\nenum ACTION {\n    NODE_ACTIVE, //满足条件 的 节点激活 ，不满足的不激活\n    NODE_VISIBLE, //满足条件 的节点显示，不满足的不显示\n    NODE_OPACITY,  //满足条件的节点改变不透明度，不满足的还原255\n    NODE_COLOR, //满足条件的节点改变颜色，不满足的恢复白色\n    COMPONENT_CUSTOM, //自定义控制组件模式\n}\n\nenum CHILD_MODE_TYPE {\n    NODE_INDEX,\n    NODE_NAME\n}\n\n/**\n * [VM-State]\n * 监听数值状态,根据数值条件设置节点是否激活\n */\n@ccclass\n@menu('ModelViewer/VM-State (VM状态控制)')\nexport default class VMState extends VMBase {\n\n    @property\n    watchPath: string = \"\";\n\n    @property({\n        tooltip: '遍历子节点,根据子节点的名字或名字转换为值，判断值满足条件 来激活'\n    })\n    foreachChildMode: boolean = false;\n\n    @property({\n        type: cc.Enum(CONDITION),\n    })\n    condition: CONDITION = CONDITION[\"==\"];\n\n    @property({\n        type: cc.Enum(CHILD_MODE_TYPE),\n        tooltip: '遍历子节点,根据子节点的名字转换为值，判断值满足条件 来激活',\n        visible: function () { return this.foreachChildMode === true }\n    })\n    foreachChildType: CHILD_MODE_TYPE = CHILD_MODE_TYPE.NODE_INDEX;\n\n    @property({\n        displayName: 'Value: a',\n        visible: function () { return this.foreachChildMode === false }\n    })\n    valueA: number = 0;\n\n    @property({\n        displayName: 'Value: b',\n        visible: function () { return this.foreachChildMode === false && this.condition === CONDITION.range }\n    })\n    valueB: number = 0;\n\n\n    @property({\n        type: cc.Enum(ACTION),\n        tooltip: '一旦满足条件就对节点执行操作'\n    })\n    valueAction: ACTION = ACTION.NODE_ACTIVE;\n\n    @property({\n        visible: function () { return this.valueAction === ACTION.NODE_OPACITY },\n        range: [0, 255],\n        type: cc.Integer,\n        displayName: 'Action Opacity'\n    })\n    valueActionOpacity: number = 0;\n\n    @property({\n        visible: function () { return this.valueAction === ACTION.NODE_COLOR },\n        displayName: 'Action Color'\n    })\n    valueActionColor: cc.Color = cc.color(155, 155, 155);\n\n\n    @property({\n        visible: function () { return this.valueAction === ACTION.COMPONENT_CUSTOM },\n        displayName: 'Component Name'\n    })\n    valueComponentName: string = '';\n\n    @property({\n        visible: function () { return this.valueAction === ACTION.COMPONENT_CUSTOM },\n        displayName: 'Component Property'\n    })\n    valueComponentProperty: string = '';\n\n    @property({\n        visible: function () { return this.valueAction === ACTION.COMPONENT_CUSTOM },\n        displayName: 'Default Value'\n    })\n    valueComponentDefaultValue: string = '';\n\n    @property({\n        visible: function () { return this.valueAction === ACTION.COMPONENT_CUSTOM },\n        displayName: 'Action Value'\n    })\n    valueComponentActionValue: string = '';\n\n    @property({\n        type: [cc.Node],\n        tooltip: '需要执行条件的节点，如果不填写则默认会执行本节点以及本节点的所有子节点 的状态'\n    })\n    watchNodes: cc.Node[] = [];\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        super.onLoad();\n        //如果数组里没有监听值，那么默认把所有子节点给监听了\n        if (this.watchNodes.length == 0) {\n            if (this.valueAction !== ACTION.NODE_ACTIVE && this.foreachChildMode === false) {\n                this.watchNodes.push(this.node);\n            }\n            this.watchNodes = this.watchNodes.concat(this.node.children);\n        }\n\n        if (this.enabled) this.onValueInit();\n    }\n\n    start() {\n    }\n\n    //当值初始化时\n    protected onValueInit() {\n        let value = VM.getValue(this.watchPath);\n        this.checkNodeFromValue(value);\n    }\n\n    //当值被改变时\n    protected onValueChanged(newVar: any, oldVar: any, pathArr: any[]) {\n        this.checkNodeFromValue(newVar);\n    }\n\n    //检查节点值更新\n    private checkNodeFromValue(value) {\n        if (this.foreachChildMode) {\n            this.watchNodes.forEach((node, index) => {\n                let v = (this.foreachChildType === CHILD_MODE_TYPE.NODE_INDEX) ? index : node.name;\n                let check = this.conditionCheck(value, v);\n                //cc.log('遍历模式',value,node.name,check);\n                this.setNodeState(node, check);\n            })\n        } else {\n            let check = this.conditionCheck(value, this.valueA, this.valueB);\n            this.setNodesStates(check);\n        }\n    }\n\n    //更新 多个节点 的 状态\n    private setNodesStates(checkState?: boolean) {\n        let nodes = this.watchNodes;\n        let check = checkState;\n        nodes.forEach((node) => {\n            this.setNodeState(node, check);\n        })\n    }\n\n    /**更新单个节点的状态 */\n    private setNodeState(node: cc.Node, checkState?: boolean) {\n        let n = this.valueAction;\n        let check = checkState;\n        let a = ACTION;\n        switch (n) {\n            case a.NODE_ACTIVE: node.active = check ? true : false; break;\n            case a.NODE_VISIBLE: node.opacity = check ? 255 : 0; break;\n            case a.NODE_COLOR: node.color = check ? this.valueActionColor : cc.color(255, 255, 255); break;\n            case a.NODE_OPACITY: node.opacity = check ? this.valueActionOpacity : 255; break;\n\n            case a.COMPONENT_CUSTOM:\n                let comp = node.getComponent(this.valueComponentName);\n                if (comp == null) return;\n                if (this.valueComponentProperty in comp) {\n                    comp[this.valueComponentProperty] = check ? this.valueComponentActionValue : this.valueComponentDefaultValue;\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**条件检查 */\n    private conditionCheck(v, a, b?): boolean {\n        let cod = CONDITION;\n        switch (this.condition) {\n            case cod[\"==\"]:\n                if (v == a) return true;\n                break;\n            case cod[\"!=\"]:\n                if (v != a) return true;\n                break;\n            case cod[\"<\"]:\n                if (v < a) return true;\n                break;\n            case cod[\">\"]:\n                if (v > a) return true;\n                break;\n            case cod[\">=\"]:\n                if (v >= a) return true;\n                break;\n            case cod[\"<\"]:\n                if (v < a) return true;\n                break;\n            case cod[\"<=\"]:\n                if (v <= a) return true;\n                break;\n            case cod[\"range\"]:\n                if (v >= a && v <= b) return true;\n                break;\n\n            default:\n                break;\n        }\n\n        return false;\n    }\n}\n"]}