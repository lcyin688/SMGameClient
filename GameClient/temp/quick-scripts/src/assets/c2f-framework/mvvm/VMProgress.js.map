{"version":3,"sources":["assets/c2f-framework/mvvm/VMProgress.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import VMCustom from \"./VMCustom\";\nimport { StringFormatFunction } from \"./StringFormat\";\n\nconst { ccclass, property, menu } = cc._decorator;\n\n\n@ccclass\n@menu('ModelViewer/VM-Progress (VM-进度条)')\nexport default class VMProgress extends VMCustom {\n\n    @property({\n        visible: false,\n        override: true\n    })\n    watchPath: string = '';\n\n    @property({\n        type: [cc.String],\n        tooltip: '第一个值是min 值，第二个值 是 max 值，会计算出两者的比例'\n    })\n    protected watchPathArr: string[] = ['[min]', '[max]'];\n\n    public templateMode: boolean = true;\n\n    @property({\n        visible: function () { return this.componentProperty === 'string' },\n        tooltip: '字符串格式化，和 VMLabel 的字段一样，需要填入对应的格式化字符串'\n    })\n    stringFormat: string = '';\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        //cc.log(this.watchPathArr)\n        if (this.watchPathArr.length < 2 || this.watchPathArr[0] == '[min]' || this.watchPathArr[1] == '[max]') {\n            console.error('VMProgress must have two values!');\n        }\n        super.onLoad();\n    }\n\n    start() {\n        if (CC_EDITOR) return;\n        this.onValueInit();\n    }\n\n    onValueInit() {\n\n        let max = this.watchPathArr.length;\n        for (let i = 0; i < max; i++) {\n            this.templateValueArr[i] = this.VM.getValue(this.watchPathArr[i]);\n        }\n\n        let value = this.templateValueArr[0] / this.templateValueArr[1];\n        this.setComponentValue(value);\n    }\n\n    setComponentValue(value: any) {\n        if (this.stringFormat !== '') {\n            let res = StringFormatFunction.deal(value, this.stringFormat);\n            super.setComponentValue(res);\n        } else {\n            super.setComponentValue(value);\n        }\n    }\n\n    onValueController(n, o) {\n        let value = Math.round(n * this.templateValueArr[1]);\n        if (Number.isNaN(value)) value = 0;\n        this.VM.setValue(this.watchPathArr[0], value);\n    }\n\n    /**初始化改变数据 */\n    onValueChanged(n, o, pathArr: string[]) {\n        if (this.templateMode === false) return;\n\n\n        let path = pathArr.join('.');\n        //寻找缓存位置\n        let index = this.watchPathArr.findIndex(v => v === path);\n        if (index >= 0) {\n            //如果是所属的路径，就可以替换文本了\n            this.templateValueArr[index] = n; //缓存值\n        }\n\n        let value = this.templateValueArr[0] / this.templateValueArr[1];\n        if (value > 1) value = 1;\n        if (value < 0 || Number.isNaN(value)) value = 0;\n\n        this.setComponentValue(value);\n    }\n}\n"]}